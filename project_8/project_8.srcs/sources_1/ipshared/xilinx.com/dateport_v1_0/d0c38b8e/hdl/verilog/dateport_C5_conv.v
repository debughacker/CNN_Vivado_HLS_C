// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dateport_C5_conv (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        C5_v_address0,
        C5_v_ce0,
        C5_v_we0,
        C5_v_d0,
        C5_v_q0,
        S4_y_address0,
        S4_y_ce0,
        S4_y_q0,
        C5_mapData_address0,
        C5_mapData_ce0,
        C5_mapData_q0,
        C5_bias_address0,
        C5_bias_ce0,
        C5_bias_q0,
        C5_y_address0,
        C5_y_ce0,
        C5_y_we0,
        C5_y_d0
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 18'b1;
parameter    ap_ST_st2_fsm_1 = 18'b10;
parameter    ap_ST_st3_fsm_2 = 18'b100;
parameter    ap_ST_pp0_stg0_fsm_3 = 18'b1000;
parameter    ap_ST_pp0_stg1_fsm_4 = 18'b10000;
parameter    ap_ST_pp0_stg2_fsm_5 = 18'b100000;
parameter    ap_ST_pp0_stg3_fsm_6 = 18'b1000000;
parameter    ap_ST_pp0_stg4_fsm_7 = 18'b10000000;
parameter    ap_ST_pp0_stg5_fsm_8 = 18'b100000000;
parameter    ap_ST_st15_fsm_9 = 18'b1000000000;
parameter    ap_ST_st16_fsm_10 = 18'b10000000000;
parameter    ap_ST_st17_fsm_11 = 18'b100000000000;
parameter    ap_ST_st18_fsm_12 = 18'b1000000000000;
parameter    ap_ST_st19_fsm_13 = 18'b10000000000000;
parameter    ap_ST_st20_fsm_14 = 18'b100000000000000;
parameter    ap_ST_st21_fsm_15 = 18'b1000000000000000;
parameter    ap_ST_st22_fsm_16 = 18'b10000000000000000;
parameter    ap_ST_st23_fsm_17 = 18'b100000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv5_1E = 5'b11110;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv9_190 = 9'b110010000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv6_19 = 6'b11001;
parameter    ap_const_lv3_5 = 3'b101;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] C5_v_address0;
output   C5_v_ce0;
output   C5_v_we0;
output  [31:0] C5_v_d0;
input  [31:0] C5_v_q0;
output  [8:0] S4_y_address0;
output   S4_y_ce0;
input  [31:0] S4_y_q0;
output  [13:0] C5_mapData_address0;
output   C5_mapData_ce0;
input  [31:0] C5_mapData_q0;
output  [4:0] C5_bias_address0;
output   C5_bias_ce0;
input  [31:0] C5_bias_q0;
output  [4:0] C5_y_address0;
output   C5_y_ce0;
output   C5_y_we0;
output  [31:0] C5_y_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] C5_v_address0;
reg C5_v_ce0;
reg C5_v_we0;
reg[31:0] C5_v_d0;
reg S4_y_ce0;
reg C5_mapData_ce0;
reg C5_bias_ce0;
reg C5_y_ce0;
reg C5_y_we0;
(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm = 18'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_36;
reg   [8:0] indvar_flatten4_reg_182;
reg   [4:0] j_reg_193;
reg   [5:0] indvar_flatten_reg_204;
reg   [2:0] k_reg_215;
reg   [2:0] m_reg_226;
reg   [31:0] reg_254;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_3;
reg    ap_sig_bdd_90;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg   [0:0] exitcond_flatten4_reg_633;
reg    ap_sig_cseq_ST_st16_fsm_10;
reg    ap_sig_bdd_105;
wire   [4:0] i_6_fu_265_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_115;
wire   [0:0] exitcond3_fu_276_p2;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_124;
wire   [4:0] i_7_fu_282_p2;
reg   [4:0] i_7_reg_612;
wire   [63:0] tmp_s_fu_288_p1;
reg   [63:0] tmp_s_reg_617;
reg   [4:0] C5_v_addr_1_reg_623;
wire   [9:0] C5_mapData_addr1_cast_fu_301_p1;
reg   [9:0] C5_mapData_addr1_cast_reg_628;
wire   [0:0] exitcond_flatten4_fu_305_p2;
reg   [0:0] ap_reg_ppstg_exitcond_flatten4_reg_633_pp0_it1;
wire   [8:0] indvar_flatten_next4_fu_311_p2;
reg   [8:0] indvar_flatten_next4_reg_637;
wire   [4:0] j_mid2_fu_355_p3;
reg   [4:0] j_mid2_reg_642;
wire   [2:0] m_mid2_fu_375_p3;
reg   [2:0] m_mid2_reg_649;
wire   [2:0] k_mid2_fu_383_p3;
reg   [2:0] k_mid2_reg_656;
wire   [31:0] C5_mapData_addr4_fu_432_p2;
reg   [31:0] C5_mapData_addr4_reg_662;
wire   [5:0] indvar_flatten_next_fu_444_p3;
reg   [5:0] indvar_flatten_next_reg_668;
reg    ap_sig_cseq_ST_pp0_stg1_fsm_4;
reg    ap_sig_bdd_162;
wire   [2:0] m_2_fu_547_p2;
reg   [2:0] m_2_reg_683;
reg    ap_sig_cseq_ST_pp0_stg2_fsm_5;
reg    ap_sig_bdd_177;
wire   [31:0] grp_fu_243_p2;
reg   [31:0] tmp_38_reg_698;
reg    ap_sig_cseq_ST_pp0_stg5_fsm_8;
reg    ap_sig_bdd_188;
reg    ap_sig_cseq_ST_st15_fsm_9;
reg    ap_sig_bdd_198;
reg   [31:0] C5_bias_load_reg_708;
wire   [31:0] grp_fu_237_p2;
reg   [31:0] temp_reg_713;
reg    ap_sig_cseq_ST_st21_fsm_15;
reg    ap_sig_bdd_208;
wire   [0:0] tmp_34_fu_587_p2;
reg   [0:0] tmp_34_reg_720;
reg    ap_sig_cseq_ST_st22_fsm_16;
reg    ap_sig_bdd_217;
reg   [4:0] i_reg_160;
wire   [0:0] exitcond4_fu_259_p2;
reg   [4:0] i_1_reg_171;
reg    ap_sig_cseq_ST_st23_fsm_17;
reg    ap_sig_bdd_240;
reg   [8:0] indvar_flatten4_phi_fu_186_p4;
reg   [4:0] j_phi_fu_197_p4;
reg   [5:0] indvar_flatten_phi_fu_208_p4;
reg   [2:0] k_phi_fu_219_p4;
reg   [2:0] m_phi_fu_230_p4;
wire   [63:0] tmp_fu_271_p1;
wire   [63:0] tmp_86_fu_512_p1;
wire   [63:0] tmp_87_fu_542_p1;
reg    ap_sig_cseq_ST_pp0_stg4_fsm_7;
reg    ap_sig_bdd_265;
reg   [31:0] grp_fu_237_p0;
reg   [31:0] grp_fu_237_p1;
reg    ap_sig_cseq_ST_st17_fsm_11;
reg    ap_sig_bdd_284;
wire   [31:0] grp_fu_243_p0;
wire   [31:0] grp_fu_243_p1;
wire   [31:0] tmp_33_fu_249_p0;
wire   [31:0] tmp_33_fu_249_p1;
wire   [8:0] tmp_83_fu_293_p3;
wire   [0:0] exitcond_flatten_fu_317_p2;
wire   [0:0] exitcond_fu_337_p2;
wire   [0:0] not_exitcond_flatten_fu_331_p2;
wire   [4:0] j_s_fu_349_p2;
wire   [2:0] k_mid_fu_323_p3;
wire   [0:0] exitcond_mid_fu_343_p2;
wire   [0:0] tmp_84_fu_369_p2;
wire   [2:0] k_7_fu_363_p2;
wire   [9:0] tmp_52_trn_cast1_fu_397_p1;
wire   [9:0] C5_mapData_addr2_fu_401_p2;
wire  signed [2:0] tmp_36_fu_391_p2;
wire   [11:0] tmp_80_fu_414_p3;
wire   [31:0] p_shl13_fu_422_p1;
wire   [31:0] C5_mapData_addr2_cast_fu_406_p1;
wire   [31:0] tmp_55_trn_fu_410_p1;
wire   [31:0] C5_mapData_addr3_fu_426_p2;
wire   [5:0] indvar_flatten_op_fu_438_p2;
wire   [6:0] tmp_85_fu_458_p3;
wire   [7:0] p_shl27_cast_fu_465_p1;
wire   [7:0] tmp_52_trn_cast_fu_452_p1;
wire   [7:0] tmp_53_trn_cast_fu_455_p1;
wire   [7:0] S4_y_addr5_fu_469_p2;
wire   [7:0] S4_y_addr6_fu_475_p2;
wire   [9:0] tmp_79_fu_488_p3;
wire   [31:0] p_shl_fu_496_p1;
wire   [31:0] S4_y_addr6_cast_fu_481_p1;
wire   [31:0] tmp_56_trn_fu_485_p1;
wire   [31:0] S4_y_addr7_fu_500_p2;
wire   [31:0] S4_y_addr8_fu_506_p2;
wire  signed [2:0] tmp_37_fu_517_p2;
wire   [31:0] tmp_81_fu_526_p2;
wire   [31:0] tmp_58_trn_fu_522_p1;
wire   [31:0] C5_mapData_addr5_fu_531_p2;
wire   [31:0] C5_mapData_addr6_fu_536_p2;
wire   [31:0] temp_to_int_fu_552_p1;
wire   [7:0] tmp_30_fu_555_p4;
wire   [22:0] tmp_78_fu_565_p1;
wire   [0:0] notrhs_fu_575_p2;
wire   [0:0] notlhs_fu_569_p2;
wire   [0:0] tmp_32_fu_581_p2;
wire   [0:0] tmp_33_fu_249_p2;
wire    grp_fu_237_ce;
wire    grp_fu_243_ce;
wire   [4:0] tmp_33_fu_249_opcode;
reg   [17:0] ap_NS_fsm;


dateport_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dateport_fadd_32ns_32ns_32_5_full_dsp_U24(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_237_p0 ),
    .din1( grp_fu_237_p1 ),
    .ce( grp_fu_237_ce ),
    .dout( grp_fu_237_p2 )
);

dateport_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dateport_fmul_32ns_32ns_32_4_max_dsp_U25(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_243_p0 ),
    .din1( grp_fu_243_p1 ),
    .ce( grp_fu_243_ce ),
    .dout( grp_fu_243_p2 )
);

dateport_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
dateport_fcmp_32ns_32ns_1_1_U26(
    .din0( tmp_33_fu_249_p0 ),
    .din1( tmp_33_fu_249_p1 ),
    .opcode( tmp_33_fu_249_opcode ),
    .dout( tmp_33_fu_249_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & ~(ap_const_lv1_0 == exitcond_flatten4_fu_305_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond3_fu_276_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((exitcond_flatten4_reg_633 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_8))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond3_fu_276_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_8) & ~(exitcond_flatten4_reg_633 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond4_fu_259_p2))) begin
        i_1_reg_171 <= ap_const_lv5_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_17)) begin
        i_1_reg_171 <= i_7_reg_612;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond4_fu_259_p2))) begin
        i_reg_160 <= i_6_fu_265_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_160 <= ap_const_lv5_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten4_reg_633 == ap_const_lv1_0))) begin
        indvar_flatten4_reg_182 <= indvar_flatten_next4_reg_637;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond3_fu_276_p2))) begin
        indvar_flatten4_reg_182 <= ap_const_lv9_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten4_reg_633 == ap_const_lv1_0))) begin
        indvar_flatten_reg_204 <= indvar_flatten_next_reg_668;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond3_fu_276_p2))) begin
        indvar_flatten_reg_204 <= ap_const_lv6_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten4_reg_633 == ap_const_lv1_0))) begin
        j_reg_193 <= j_mid2_reg_642;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond3_fu_276_p2))) begin
        j_reg_193 <= ap_const_lv5_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten4_reg_633 == ap_const_lv1_0))) begin
        k_reg_215 <= k_mid2_reg_656;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond3_fu_276_p2))) begin
        k_reg_215 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten4_reg_633 == ap_const_lv1_0))) begin
        m_reg_226 <= m_2_reg_683;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond3_fu_276_p2))) begin
        m_reg_226 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_10)) begin
        C5_bias_load_reg_708 <= C5_bias_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond3_fu_276_p2))) begin
        C5_mapData_addr1_cast_reg_628[8 : 4] <= C5_mapData_addr1_cast_fu_301_p1[8 : 4];
        C5_v_addr_1_reg_623 <= tmp_s_fu_288_p1;
        tmp_s_reg_617[4 : 0] <= tmp_s_fu_288_p1[4 : 0];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (ap_const_lv1_0 == exitcond_flatten4_fu_305_p2))) begin
        C5_mapData_addr4_reg_662 <= C5_mapData_addr4_fu_432_p2;
        m_mid2_reg_649 <= m_mid2_fu_375_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3)) begin
        ap_reg_ppstg_exitcond_flatten4_reg_633_pp0_it1 <= exitcond_flatten4_reg_633;
        exitcond_flatten4_reg_633 <= exitcond_flatten4_fu_305_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        i_7_reg_612 <= i_7_fu_282_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        indvar_flatten_next4_reg_637 <= indvar_flatten_next4_fu_311_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_lv1_0 == exitcond_flatten4_fu_305_p2))) begin
        indvar_flatten_next_reg_668 <= indvar_flatten_next_fu_444_p3;
        j_mid2_reg_642 <= j_mid2_fu_355_p3;
        k_mid2_reg_656 <= k_mid2_fu_383_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_flatten4_reg_633 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_4))) begin
        m_2_reg_683 <= m_2_fu_547_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (exitcond_flatten4_reg_633 == ap_const_lv1_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_10))) begin
        reg_254 <= C5_v_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_15)) begin
        temp_reg_713 <= grp_fu_237_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_16)) begin
        tmp_34_reg_720 <= tmp_34_fu_587_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten4_reg_633 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_8))) begin
        tmp_38_reg_698 <= grp_fu_243_p2;
    end
end

/// C5_bias_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st15_fsm_9)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_9)) begin
        C5_bias_ce0 = ap_const_logic_1;
    end else begin
        C5_bias_ce0 = ap_const_logic_0;
    end
end

/// C5_mapData_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg1_fsm_4)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_4))) begin
        C5_mapData_ce0 = ap_const_logic_1;
    end else begin
        C5_mapData_ce0 = ap_const_logic_0;
    end
end

/// C5_v_address0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_st2_fsm_1 or C5_v_addr_1_reg_623 or ap_sig_cseq_ST_pp0_stg5_fsm_8 or ap_sig_cseq_ST_st15_fsm_9 or tmp_fu_271_p1 or ap_sig_cseq_ST_pp0_stg4_fsm_7)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        C5_v_address0 = tmp_fu_271_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_9) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_8)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_7)))) begin
        C5_v_address0 = C5_v_addr_1_reg_623;
    end else begin
        C5_v_address0 = 'bx;
    end
end

/// C5_v_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_pp0_stg5_fsm_8 or ap_sig_cseq_ST_st15_fsm_9 or ap_sig_cseq_ST_pp0_stg4_fsm_7)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | (ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_9) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_8)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_7)))) begin
        C5_v_ce0 = ap_const_logic_1;
    end else begin
        C5_v_ce0 = ap_const_logic_0;
    end
end

/// C5_v_d0 assign process. ///
always @ (ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_st2_fsm_1 or grp_fu_237_p2 or ap_sig_cseq_ST_pp0_stg4_fsm_7)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_7))) begin
        C5_v_d0 = grp_fu_237_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        C5_v_d0 = ap_const_lv32_0;
    end else begin
        C5_v_d0 = 'bx;
    end
end

/// C5_v_we0 assign process. ///
always @ (ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_st2_fsm_1 or ap_reg_ppstg_exitcond_flatten4_reg_633_pp0_it1 or exitcond4_fu_259_p2 or ap_sig_cseq_ST_pp0_stg4_fsm_7)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond4_fu_259_p2)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_7) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten4_reg_633_pp0_it1)))) begin
        C5_v_we0 = ap_const_logic_1;
    end else begin
        C5_v_we0 = ap_const_logic_0;
    end
end

/// C5_y_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st23_fsm_17)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_17)) begin
        C5_y_ce0 = ap_const_logic_1;
    end else begin
        C5_y_ce0 = ap_const_logic_0;
    end
end

/// C5_y_we0 assign process. ///
always @ (ap_sig_cseq_ST_st23_fsm_17)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_17)) begin
        C5_y_we0 = ap_const_logic_1;
    end else begin
        C5_y_we0 = ap_const_logic_0;
    end
end

/// S4_y_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg1_fsm_4)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_4))) begin
        S4_y_ce0 = ap_const_logic_1;
    end else begin
        S4_y_ce0 = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or exitcond3_fu_276_p2 or ap_sig_cseq_ST_st3_fsm_2)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == exitcond3_fu_276_p2)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (exitcond3_fu_276_p2 or ap_sig_cseq_ST_st3_fsm_2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == exitcond3_fu_276_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_3 assign process. ///
always @ (ap_sig_bdd_90)
begin
    if (ap_sig_bdd_90) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg1_fsm_4 assign process. ///
always @ (ap_sig_bdd_162)
begin
    if (ap_sig_bdd_162) begin
        ap_sig_cseq_ST_pp0_stg1_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg1_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg2_fsm_5 assign process. ///
always @ (ap_sig_bdd_177)
begin
    if (ap_sig_bdd_177) begin
        ap_sig_cseq_ST_pp0_stg2_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg2_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg4_fsm_7 assign process. ///
always @ (ap_sig_bdd_265)
begin
    if (ap_sig_bdd_265) begin
        ap_sig_cseq_ST_pp0_stg4_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg4_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg5_fsm_8 assign process. ///
always @ (ap_sig_bdd_188)
begin
    if (ap_sig_bdd_188) begin
        ap_sig_cseq_ST_pp0_stg5_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg5_fsm_8 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st15_fsm_9 assign process. ///
always @ (ap_sig_bdd_198)
begin
    if (ap_sig_bdd_198) begin
        ap_sig_cseq_ST_st15_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_9 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st16_fsm_10 assign process. ///
always @ (ap_sig_bdd_105)
begin
    if (ap_sig_bdd_105) begin
        ap_sig_cseq_ST_st16_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_10 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st17_fsm_11 assign process. ///
always @ (ap_sig_bdd_284)
begin
    if (ap_sig_bdd_284) begin
        ap_sig_cseq_ST_st17_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_11 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_36)
begin
    if (ap_sig_bdd_36) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st21_fsm_15 assign process. ///
always @ (ap_sig_bdd_208)
begin
    if (ap_sig_bdd_208) begin
        ap_sig_cseq_ST_st21_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_15 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st22_fsm_16 assign process. ///
always @ (ap_sig_bdd_217)
begin
    if (ap_sig_bdd_217) begin
        ap_sig_cseq_ST_st22_fsm_16 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_16 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st23_fsm_17 assign process. ///
always @ (ap_sig_bdd_240)
begin
    if (ap_sig_bdd_240) begin
        ap_sig_cseq_ST_st23_fsm_17 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_17 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_115)
begin
    if (ap_sig_bdd_115) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_124)
begin
    if (ap_sig_bdd_124) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// grp_fu_237_p0 assign process. ///
always @ (C5_v_q0 or reg_254 or ap_sig_cseq_ST_pp0_stg0_fsm_3 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_st17_fsm_11)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_11)) begin
        grp_fu_237_p0 = reg_254;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        grp_fu_237_p0 = C5_v_q0;
    end else begin
        grp_fu_237_p0 = 'bx;
    end
end

/// grp_fu_237_p1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_3 or ap_reg_ppiten_pp0_it1 or tmp_38_reg_698 or C5_bias_load_reg_708 or ap_sig_cseq_ST_st17_fsm_11)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_11)) begin
        grp_fu_237_p1 = C5_bias_load_reg_708;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        grp_fu_237_p1 = tmp_38_reg_698;
    end else begin
        grp_fu_237_p1 = 'bx;
    end
end

/// indvar_flatten4_phi_fu_186_p4 assign process. ///
always @ (indvar_flatten4_reg_182 or ap_sig_cseq_ST_pp0_stg0_fsm_3 or ap_reg_ppiten_pp0_it1 or exitcond_flatten4_reg_633 or indvar_flatten_next4_reg_637)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten4_reg_633 == ap_const_lv1_0))) begin
        indvar_flatten4_phi_fu_186_p4 = indvar_flatten_next4_reg_637;
    end else begin
        indvar_flatten4_phi_fu_186_p4 = indvar_flatten4_reg_182;
    end
end

/// indvar_flatten_phi_fu_208_p4 assign process. ///
always @ (indvar_flatten_reg_204 or ap_sig_cseq_ST_pp0_stg0_fsm_3 or ap_reg_ppiten_pp0_it1 or exitcond_flatten4_reg_633 or indvar_flatten_next_reg_668)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten4_reg_633 == ap_const_lv1_0))) begin
        indvar_flatten_phi_fu_208_p4 = indvar_flatten_next_reg_668;
    end else begin
        indvar_flatten_phi_fu_208_p4 = indvar_flatten_reg_204;
    end
end

/// j_phi_fu_197_p4 assign process. ///
always @ (j_reg_193 or ap_sig_cseq_ST_pp0_stg0_fsm_3 or ap_reg_ppiten_pp0_it1 or exitcond_flatten4_reg_633 or j_mid2_reg_642)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten4_reg_633 == ap_const_lv1_0))) begin
        j_phi_fu_197_p4 = j_mid2_reg_642;
    end else begin
        j_phi_fu_197_p4 = j_reg_193;
    end
end

/// k_phi_fu_219_p4 assign process. ///
always @ (k_reg_215 or ap_sig_cseq_ST_pp0_stg0_fsm_3 or ap_reg_ppiten_pp0_it1 or exitcond_flatten4_reg_633 or k_mid2_reg_656)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten4_reg_633 == ap_const_lv1_0))) begin
        k_phi_fu_219_p4 = k_mid2_reg_656;
    end else begin
        k_phi_fu_219_p4 = k_reg_215;
    end
end

/// m_phi_fu_230_p4 assign process. ///
always @ (m_reg_226 or ap_sig_cseq_ST_pp0_stg0_fsm_3 or ap_reg_ppiten_pp0_it1 or exitcond_flatten4_reg_633 or m_2_reg_683)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten4_reg_633 == ap_const_lv1_0))) begin
        m_phi_fu_230_p4 = m_2_reg_683;
    end else begin
        m_phi_fu_230_p4 = m_reg_226;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or exitcond3_fu_276_p2 or exitcond_flatten4_fu_305_p2 or exitcond4_fu_259_p2 or ap_sig_cseq_ST_pp0_stg4_fsm_7)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if ((ap_const_lv1_0 == exitcond4_fu_259_p2)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if (~(ap_const_lv1_0 == exitcond3_fu_276_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_3;
            end
        end
        ap_ST_pp0_stg0_fsm_3 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond_flatten4_fu_305_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st15_fsm_9;
            end
        end
        ap_ST_pp0_stg1_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg2_fsm_5;
        end
        ap_ST_pp0_stg2_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg3_fsm_6;
        end
        ap_ST_pp0_stg3_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg4_fsm_7;
        end
        ap_ST_pp0_stg4_fsm_7 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_7) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
                ap_NS_fsm = ap_ST_pp0_stg5_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_st15_fsm_9;
            end
        end
        ap_ST_pp0_stg5_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_3;
        end
        ap_ST_st15_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_10;
        end
        ap_ST_st16_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_11;
        end
        ap_ST_st17_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_12;
        end
        ap_ST_st18_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_13;
        end
        ap_ST_st19_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_14;
        end
        ap_ST_st20_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_15;
        end
        ap_ST_st21_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_16;
        end
        ap_ST_st22_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_17;
        end
        ap_ST_st23_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C5_bias_address0 = tmp_s_reg_617;
assign C5_mapData_addr1_cast_fu_301_p1 = tmp_83_fu_293_p3;
assign C5_mapData_addr2_cast_fu_406_p1 = C5_mapData_addr2_fu_401_p2;
assign C5_mapData_addr2_fu_401_p2 = (tmp_52_trn_cast1_fu_397_p1 + C5_mapData_addr1_cast_reg_628);
assign C5_mapData_addr3_fu_426_p2 = (p_shl13_fu_422_p1 + C5_mapData_addr2_cast_fu_406_p1);
assign C5_mapData_addr4_fu_432_p2 = (tmp_55_trn_fu_410_p1 + C5_mapData_addr3_fu_426_p2);
assign C5_mapData_addr5_fu_531_p2 = (tmp_81_fu_526_p2 + C5_mapData_addr4_reg_662);
assign C5_mapData_addr6_fu_536_p2 = (tmp_58_trn_fu_522_p1 + C5_mapData_addr5_fu_531_p2);
assign C5_mapData_address0 = tmp_87_fu_542_p1;
assign C5_y_address0 = tmp_s_reg_617;
assign C5_y_d0 = ((tmp_34_reg_720[0:0]===1'b1)? temp_reg_713: ap_const_lv32_0);
assign S4_y_addr5_fu_469_p2 = (p_shl27_cast_fu_465_p1 + tmp_52_trn_cast_fu_452_p1);
assign S4_y_addr6_cast_fu_481_p1 = S4_y_addr6_fu_475_p2;
assign S4_y_addr6_fu_475_p2 = (tmp_53_trn_cast_fu_455_p1 + S4_y_addr5_fu_469_p2);
assign S4_y_addr7_fu_500_p2 = (p_shl_fu_496_p1 + S4_y_addr6_cast_fu_481_p1);
assign S4_y_addr8_fu_506_p2 = (tmp_56_trn_fu_485_p1 + S4_y_addr7_fu_500_p2);
assign S4_y_address0 = tmp_86_fu_512_p1;

/// ap_sig_bdd_105 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_105 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end

/// ap_sig_bdd_115 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_115 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_124 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_124 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_162 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_162 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_177 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_177 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_188 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_188 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_198 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_198 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end

/// ap_sig_bdd_208 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_208 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end

/// ap_sig_bdd_217 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_217 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_10]);
end

/// ap_sig_bdd_240 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_240 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_11]);
end

/// ap_sig_bdd_265 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_265 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_284 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_284 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end

/// ap_sig_bdd_36 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_36 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_90 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_90 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end
assign exitcond3_fu_276_p2 = (i_1_reg_171 == ap_const_lv5_1E? 1'b1: 1'b0);
assign exitcond4_fu_259_p2 = (i_reg_160 == ap_const_lv5_1E? 1'b1: 1'b0);
assign exitcond_flatten4_fu_305_p2 = (indvar_flatten4_phi_fu_186_p4 == ap_const_lv9_190? 1'b1: 1'b0);
assign exitcond_flatten_fu_317_p2 = (indvar_flatten_phi_fu_208_p4 == ap_const_lv6_19? 1'b1: 1'b0);
assign exitcond_fu_337_p2 = (m_phi_fu_230_p4 == ap_const_lv3_5? 1'b1: 1'b0);
assign exitcond_mid_fu_343_p2 = (exitcond_fu_337_p2 & not_exitcond_flatten_fu_331_p2);
assign grp_fu_237_ce = ap_const_logic_1;
assign grp_fu_243_ce = ap_const_logic_1;
assign grp_fu_243_p0 = S4_y_q0;
assign grp_fu_243_p1 = C5_mapData_q0;
assign i_6_fu_265_p2 = (i_reg_160 + ap_const_lv5_1);
assign i_7_fu_282_p2 = (i_1_reg_171 + ap_const_lv5_1);
assign indvar_flatten_next4_fu_311_p2 = (indvar_flatten4_phi_fu_186_p4 + ap_const_lv9_1);
assign indvar_flatten_next_fu_444_p3 = ((exitcond_flatten_fu_317_p2[0:0]===1'b1)? ap_const_lv6_1: indvar_flatten_op_fu_438_p2);
assign indvar_flatten_op_fu_438_p2 = (ap_const_lv6_1 + indvar_flatten_phi_fu_208_p4);
assign j_mid2_fu_355_p3 = ((exitcond_flatten_fu_317_p2[0:0]===1'b1)? j_s_fu_349_p2: j_phi_fu_197_p4);
assign j_s_fu_349_p2 = (ap_const_lv5_1 + j_phi_fu_197_p4);
assign k_7_fu_363_p2 = (ap_const_lv3_1 + k_mid_fu_323_p3);
assign k_mid2_fu_383_p3 = ((exitcond_mid_fu_343_p2[0:0]===1'b1)? k_7_fu_363_p2: k_mid_fu_323_p3);
assign k_mid_fu_323_p3 = ((exitcond_flatten_fu_317_p2[0:0]===1'b1)? ap_const_lv3_0: k_phi_fu_219_p4);
assign m_2_fu_547_p2 = (ap_const_lv3_1 + m_mid2_reg_649);
assign m_mid2_fu_375_p3 = ((tmp_84_fu_369_p2[0:0]===1'b1)? ap_const_lv3_0: m_phi_fu_230_p4);
assign not_exitcond_flatten_fu_331_p2 = (exitcond_flatten_fu_317_p2 ^ ap_const_lv1_1);
assign notlhs_fu_569_p2 = (tmp_30_fu_555_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notrhs_fu_575_p2 = (tmp_78_fu_565_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign p_shl13_fu_422_p1 = tmp_80_fu_414_p3;
assign p_shl27_cast_fu_465_p1 = tmp_85_fu_458_p3;
assign p_shl_fu_496_p1 = tmp_79_fu_488_p3;
assign temp_to_int_fu_552_p1 = temp_reg_713;
assign tmp_30_fu_555_p4 = {{temp_to_int_fu_552_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_32_fu_581_p2 = (notrhs_fu_575_p2 | notlhs_fu_569_p2);
assign tmp_33_fu_249_opcode = ap_const_lv5_2;
assign tmp_33_fu_249_p0 = temp_reg_713;
assign tmp_33_fu_249_p1 = ap_const_lv32_0;
assign tmp_34_fu_587_p2 = (tmp_32_fu_581_p2 & tmp_33_fu_249_p2);
assign tmp_36_fu_391_p2 = ($signed(ap_const_lv3_4) - $signed(k_mid2_fu_383_p3));
assign tmp_37_fu_517_p2 = ($signed(ap_const_lv3_4) - $signed(m_mid2_reg_649));
assign tmp_52_trn_cast1_fu_397_p1 = j_mid2_fu_355_p3;
assign tmp_52_trn_cast_fu_452_p1 = j_mid2_reg_642;
assign tmp_53_trn_cast_fu_455_p1 = k_mid2_reg_656;
assign tmp_55_trn_fu_410_p1 = $unsigned(tmp_36_fu_391_p2);
assign tmp_56_trn_fu_485_p1 = m_mid2_reg_649;
assign tmp_58_trn_fu_522_p1 = $unsigned(tmp_37_fu_517_p2);
assign tmp_78_fu_565_p1 = temp_to_int_fu_552_p1[22:0];
assign tmp_79_fu_488_p3 = {{S4_y_addr6_fu_475_p2}, {ap_const_lv2_0}};
assign tmp_80_fu_414_p3 = {{C5_mapData_addr2_fu_401_p2}, {ap_const_lv2_0}};
assign tmp_81_fu_526_p2 = C5_mapData_addr4_reg_662 << ap_const_lv32_2;
assign tmp_83_fu_293_p3 = {{i_1_reg_171}, {ap_const_lv4_0}};
assign tmp_84_fu_369_p2 = (exitcond_mid_fu_343_p2 | exitcond_flatten_fu_317_p2);
assign tmp_85_fu_458_p3 = {{j_mid2_reg_642}, {ap_const_lv2_0}};
assign tmp_86_fu_512_p1 = S4_y_addr8_fu_506_p2;
assign tmp_87_fu_542_p1 = C5_mapData_addr6_fu_536_p2;
assign tmp_fu_271_p1 = i_reg_160;
assign tmp_s_fu_288_p1 = i_1_reg_171;
always @ (posedge ap_clk)
begin
    tmp_s_reg_617[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    C5_mapData_addr1_cast_reg_628[3:0] <= 4'b0000;
    C5_mapData_addr1_cast_reg_628[9] <= 1'b0;
end



endmodule //dateport_C5_conv

