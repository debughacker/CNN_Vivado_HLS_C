

================================================================
== Vivado HLS Report for 'dateport_C1_conv'
================================================================
* Date:           Tue May 09 23:13:24 2017

* Version:        2015.2 (Build 1266856 on Fri Jun 26 16:57:37 PM 2015)
* Project:        Le_7
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     14.51|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +--------+--------+--------+--------+---------+
    |     Latency     |     Interval    | Pipeline|
    |   min  |   max  |   min  |   max  |   Type  |
    +--------+--------+--------+--------+---------+
    |  522507|  522507|  522507|  522507|   none  |
    +--------+--------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------------------+--------+--------+----------+-----------+-----------+-------+----------+
        |                      |     Latency     | Iteration|  Initiation Interval  |  Trip |          |
        |       Loop Name      |   min  |   max  |  Latency |  achieved |   target  | Count | Pipelined|
        +----------------------+--------+--------+----------+-----------+-----------+-------+----------+
        |- Loop 1              |    5052|    5052|       842|          -|          -|      6|    no    |
        | + Loop 1.1           |     840|     840|        30|          -|          -|     28|    no    |
        |  ++ Loop 1.1.1       |      28|      28|         1|          -|          -|     28|    no    |
        |- L_L_C1_conv_label0  |  517452|  517452|        35|         22|          1|  23520|    yes   |
        +----------------------+--------+--------+----------+-----------+-----------+-------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 22, depth = 35


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 40
* Pipeline: 1
  Pipeline-0: II = 22, D = 35, States = { 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	5  / (exitcond7)
	3  / (!exitcond7)
3 --> 
	2  / (exitcond6)
	4  / (!exitcond6)
4 --> 
	3  / (exitcond5)
	4  / (!exitcond5)
5 --> 
	40  / (exitcond_flatten)
	6  / (!exitcond_flatten)
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	5  / true
40 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: stg_41 [1/1] 1.57ns
:0  br label %.loopexit


 <State 2>: 3.19ns
ST_2: i [1/1] 0.00ns
.loopexit:0  %i = phi i3 [ 0, %0 ], [ %i_2, %.preheader12 ]

ST_2: exitcond7 [1/1] 1.62ns
.loopexit:1  %exitcond7 = icmp eq i3 %i, -2

ST_2: empty [1/1] 0.00ns
.loopexit:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 6, i64 6, i64 6)

ST_2: i_2 [1/1] 0.80ns
.loopexit:3  %i_2 = add i3 %i, 1

ST_2: stg_46 [1/1] 1.57ns
.loopexit:4  br i1 %exitcond7, label %.preheader, label %.preheader12.preheader

ST_2: tmp [1/1] 0.00ns
.preheader12.preheader:0  %tmp = call i8 @_ssdm_op_BitConcatenate.i8.i3.i5(i3 %i, i5 0)

ST_2: p_shl_cast [1/1] 0.00ns
.preheader12.preheader:1  %p_shl_cast = zext i8 %tmp to i9

ST_2: tmp_307 [1/1] 0.00ns
.preheader12.preheader:2  %tmp_307 = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %i, i2 0)

ST_2: p_shl74_cast [1/1] 0.00ns
.preheader12.preheader:3  %p_shl74_cast = zext i5 %tmp_307 to i9

ST_2: C1_v_addr8 [1/1] 1.72ns
.preheader12.preheader:4  %C1_v_addr8 = sub i9 %p_shl_cast, %p_shl74_cast

ST_2: C1_v_addr8_cast [1/1] 0.00ns
.preheader12.preheader:5  %C1_v_addr8_cast = sext i9 %C1_v_addr8 to i10

ST_2: stg_53 [1/1] 1.57ns
.preheader12.preheader:6  br label %.preheader12


 <State 3>: 3.80ns
ST_3: j [1/1] 0.00ns
.preheader12:0  %j = phi i5 [ 0, %.preheader12.preheader ], [ %j_2, %.preheader11 ]

ST_3: exitcond6 [1/1] 1.91ns
.preheader12:1  %exitcond6 = icmp eq i5 %j, -4

ST_3: empty_98 [1/1] 0.00ns
.preheader12:2  %empty_98 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 28, i64 28, i64 28)

ST_3: j_2 [1/1] 1.72ns
.preheader12:3  %j_2 = add i5 %j, 1

ST_3: stg_58 [1/1] 0.00ns
.preheader12:4  br i1 %exitcond6, label %.loopexit, label %.preheader11.preheader

ST_3: tmp_14_trn_cast [1/1] 0.00ns
.preheader11.preheader:0  %tmp_14_trn_cast = zext i5 %j to i10

ST_3: C1_v_addr10 [1/1] 1.84ns
.preheader11.preheader:1  %C1_v_addr10 = add i10 %C1_v_addr8_cast, %tmp_14_trn_cast

ST_3: tmp_150 [1/1] 0.00ns
.preheader11.preheader:2  %tmp_150 = call i15 @_ssdm_op_BitConcatenate.i15.i10.i5(i10 %C1_v_addr10, i5 0)

ST_3: p_shl51 [1/1] 0.00ns
.preheader11.preheader:3  %p_shl51 = sext i15 %tmp_150 to i32

ST_3: tmp_151 [1/1] 0.00ns
.preheader11.preheader:4  %tmp_151 = call i12 @_ssdm_op_BitConcatenate.i12.i10.i2(i10 %C1_v_addr10, i2 0)

ST_3: p_shl52 [1/1] 0.00ns
.preheader11.preheader:5  %p_shl52 = sext i12 %tmp_151 to i32

ST_3: C1_v_addr11 [1/1] 1.96ns
.preheader11.preheader:6  %C1_v_addr11 = sub i32 %p_shl51, %p_shl52

ST_3: stg_66 [1/1] 1.57ns
.preheader11.preheader:7  br label %.preheader11


 <State 4>: 4.67ns
ST_4: k [1/1] 0.00ns
.preheader11:0  %k = phi i5 [ %k_2, %1 ], [ 0, %.preheader11.preheader ]

ST_4: exitcond5 [1/1] 1.91ns
.preheader11:1  %exitcond5 = icmp eq i5 %k, -4

ST_4: empty_99 [1/1] 0.00ns
.preheader11:2  %empty_99 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 28, i64 28, i64 28)

ST_4: k_2 [1/1] 1.72ns
.preheader11:3  %k_2 = add i5 %k, 1

ST_4: stg_71 [1/1] 0.00ns
.preheader11:4  br i1 %exitcond5, label %.preheader12, label %1

ST_4: tmp_17_trn [1/1] 0.00ns
:0  %tmp_17_trn = zext i5 %k to i32

ST_4: C1_v_addr12 [1/1] 1.96ns
:1  %C1_v_addr12 = add i32 %C1_v_addr11, %tmp_17_trn

ST_4: tmp_328 [1/1] 0.00ns
:2  %tmp_328 = zext i32 %C1_v_addr12 to i64

ST_4: C1_v_addr [1/1] 0.00ns
:3  %C1_v_addr = getelementptr [4704 x float]* @C1_v, i64 0, i64 %tmp_328

ST_4: stg_76 [1/1] 2.71ns
:4  store float 0.000000e+00, float* %C1_v_addr, align 4

ST_4: stg_77 [1/1] 0.00ns
:5  br label %.preheader11


 <State 5>: 7.66ns
ST_5: indvar_flatten3 [1/1] 0.00ns
.preheader:0  %indvar_flatten3 = phi i15 [ %indvar_flatten_next3, %ifFalse ], [ 0, %.loopexit ]

ST_5: i_1 [1/1] 0.00ns
.preheader:1  %i_1 = phi i3 [ %i_1_mid2, %ifFalse ], [ 0, %.loopexit ]

ST_5: indvar_flatten4 [1/1] 0.00ns
.preheader:2  %indvar_flatten4 = phi i13 [ %indvar_flatten_next4, %ifFalse ], [ 0, %.loopexit ]

ST_5: j_1 [1/1] 0.00ns
.preheader:3  %j_1 = phi i5 [ %j_1_mid2, %ifFalse ], [ 0, %.loopexit ]

ST_5: indvar_flatten [1/1] 0.00ns
.preheader:4  %indvar_flatten = phi i8 [ %indvar_flatten_next, %ifFalse ], [ 0, %.loopexit ]

ST_5: k_1 [1/1] 0.00ns
.preheader:5  %k_1 = phi i5 [ %k_1_mid2, %ifFalse ], [ 0, %.loopexit ]

ST_5: m [1/1] 0.00ns
.preheader:6  %m = phi i3 [ %m_1, %ifFalse ], [ 0, %.loopexit ]

ST_5: exitcond_flatten [1/1] 2.25ns
.preheader:7  %exitcond_flatten = icmp eq i15 %indvar_flatten3, -9248

ST_5: indvar_flatten_next3 [1/1] 1.96ns
.preheader:8  %indvar_flatten_next3 = add i15 %indvar_flatten3, 1

ST_5: stg_87 [1/1] 0.00ns
.preheader:9  br i1 %exitcond_flatten, label %2, label %.preheader10

ST_5: exitcond_flatten7 [1/1] 2.18ns
.preheader10:2  %exitcond_flatten7 = icmp eq i13 %indvar_flatten4, 3920

ST_5: j_1_mid [1/1] 1.37ns
.preheader10:3  %j_1_mid = select i1 %exitcond_flatten7, i5 0, i5 %j_1

ST_5: not_exitcond_flatten [1/1] 1.37ns
.preheader10:4  %not_exitcond_flatten = xor i1 %exitcond_flatten7, true

ST_5: exitcond [1/1] 1.62ns
.preheader10:5  %exitcond = icmp eq i3 %m, -3

ST_5: exitcond1_mid [1/1] 1.37ns
.preheader10:6  %exitcond1_mid = and i1 %exitcond, %not_exitcond_flatten

ST_5: exitcond_flatten8 [1/1] 2.00ns
.preheader10:7  %exitcond_flatten8 = icmp eq i8 %indvar_flatten, -116

ST_5: exitcond_flatten_mid [1/1] 1.37ns
.preheader10:8  %exitcond_flatten_mid = and i1 %exitcond_flatten8, %not_exitcond_flatten

ST_5: tmp_308 [1/1] 1.37ns
.preheader10:14  %tmp_308 = or i1 %exitcond_flatten_mid, %exitcond_flatten7

ST_5: k_1_mid [1/1] 1.37ns
.preheader10:15  %k_1_mid = select i1 %tmp_308, i5 0, i5 %k_1

ST_5: exitcond_flatten_not [1/1] 1.37ns
.preheader10:16  %exitcond_flatten_not = xor i1 %exitcond_flatten8, true

ST_5: not_exitcond_flatten_mid [1/1] 1.37ns
.preheader10:17  %not_exitcond_flatten_mid = or i1 %exitcond_flatten7, %exitcond_flatten_not

ST_5: exitcond1_mid3 [1/1] 1.37ns
.preheader10:18  %exitcond1_mid3 = and i1 %exitcond1_mid, %not_exitcond_flatten_mid

ST_5: indvar_flatten_op [1/1] 1.72ns
ifFalse:0  %indvar_flatten_op = add i8 %indvar_flatten, 1

ST_5: indvar_flatten_next [1/1] 1.37ns
ifFalse:1  %indvar_flatten_next = select i1 %tmp_308, i8 1, i8 %indvar_flatten_op

ST_5: indvar_flatten14_op [1/1] 1.96ns
ifFalse:2  %indvar_flatten14_op = add i13 %indvar_flatten4, 1

ST_5: indvar_flatten_next4 [1/1] 1.37ns
ifFalse:3  %indvar_flatten_next4 = select i1 %exitcond_flatten7, i13 1, i13 %indvar_flatten14_op

ST_5: stg_104 [1/1] 0.00ns
ifFalse:4  br label %.preheader


 <State 6>: 8.54ns
ST_6: i_s [1/1] 0.80ns
.preheader10:9  %i_s = add i3 %i_1, 1

ST_6: i_1_mid2 [1/1] 1.37ns
.preheader10:10  %i_1_mid2 = select i1 %exitcond_flatten7, i3 %i_s, i3 %i_1

ST_6: j_3 [1/1] 1.72ns
.preheader10:12  %j_3 = add i5 %j_1_mid, 1

ST_6: j_1_mid2 [1/1] 1.37ns
.preheader10:19  %j_1_mid2 = select i1 %exitcond_flatten_mid, i5 %j_3, i5 %j_1_mid

ST_6: k_3 [1/1] 1.72ns
.preheader10:20  %k_3 = add i5 %k_1_mid, 1

ST_6: tmp_309 [1/1] 1.37ns
.preheader10:22  %tmp_309 = or i1 %exitcond1_mid3, %exitcond_flatten_mid

ST_6: tmp_145 [1/1] 1.37ns
.preheader10:23  %tmp_145 = or i1 %tmp_309, %exitcond_flatten7

ST_6: m_mid2 [1/1] 1.37ns
.preheader10:24  %m_mid2 = select i1 %tmp_145, i3 0, i3 %m

ST_6: k_1_mid2 [1/1] 1.37ns
.preheader10:25  %k_1_mid2 = select i1 %exitcond1_mid3, i5 %k_3, i5 %k_1_mid

ST_6: tmp_27_1 [1/1] 1.72ns
.preheader10:26  %tmp_27_1 = add i5 %k_1_mid2, 1

ST_6: tmp_21_cast1 [1/1] 0.00ns
.preheader10:33  %tmp_21_cast1 = zext i3 %m_mid2 to i5

ST_6: tmp_22 [1/1] 1.72ns
.preheader10:34  %tmp_22 = add i5 %tmp_21_cast1, %j_1_mid2

ST_6: tmp_24 [1/1] 0.80ns
.preheader10:35  %tmp_24 = sub i3 -4, %m_mid2

ST_6: tmp_trn_cast [1/1] 0.00ns
.preheader10:36  %tmp_trn_cast = zext i3 %i_1_mid2 to i6

ST_6: tmp_311 [1/1] 0.00ns
.preheader10:40  %tmp_311 = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %i_1_mid2, i2 0)

ST_6: p_shl82_cast1 [1/1] 0.00ns
.preheader10:41  %p_shl82_cast1 = zext i5 %tmp_311 to i6

ST_6: tmp_313 [1/1] 0.00ns
.preheader10:56  %tmp_313 = call i10 @_ssdm_op_BitConcatenate.i10.i5.i5(i5 %tmp_22, i5 %k_1_mid2)

ST_6: tmp_314 [1/1] 0.00ns
.preheader10:57  %tmp_314 = zext i10 %tmp_313 to i64

ST_6: inputimg_addr [1/1] 0.00ns
.preheader10:58  %inputimg_addr = getelementptr [1024 x float]* %inputimg, i64 0, i64 %tmp_314

ST_6: inputimg_load [2/2] 2.71ns
.preheader10:59  %inputimg_load = load float* %inputimg_addr, align 4

ST_6: tmp_25_trn_cast [1/1] 0.00ns
.preheader10:60  %tmp_25_trn_cast = zext i3 %tmp_24 to i6

ST_6: C1_mapData_addr1 [1/1] 1.31ns
.preheader10:61  %C1_mapData_addr1 = add i6 %tmp_trn_cast, %p_shl82_cast1

ST_6: C1_mapData_addr2 [1/1] 1.31ns
.preheader10:62  %C1_mapData_addr2 = add i6 %C1_mapData_addr1, %tmp_25_trn_cast

ST_6: tmp_316 [1/1] 0.00ns
.preheader10:73  %tmp_316 = call i10 @_ssdm_op_BitConcatenate.i10.i5.i5(i5 %tmp_22, i5 %tmp_27_1)

ST_6: tmp_317 [1/1] 0.00ns
.preheader10:74  %tmp_317 = zext i10 %tmp_316 to i64

ST_6: inputimg_addr_28 [1/1] 0.00ns
.preheader10:75  %inputimg_addr_28 = getelementptr [1024 x float]* %inputimg, i64 0, i64 %tmp_317

ST_6: inputimg_load_1 [2/2] 2.71ns
.preheader10:76  %inputimg_load_1 = load float* %inputimg_addr_28, align 4

ST_6: m_1 [1/1] 0.80ns
.preheader10:114  %m_1 = add i3 %m_mid2, 1

ST_6: ifzero [1/1] 1.62ns
.preheader10:115  %ifzero = icmp eq i3 %m_1, -3

ST_6: stg_134 [1/1] 0.00ns
.preheader10:116  br i1 %ifzero, label %ifTrue, label %ifFalse


 <State 7>: 6.27ns
ST_7: tmp_27_2 [1/1] 1.72ns
.preheader10:27  %tmp_27_2 = add i5 %k_1_mid2, 2

ST_7: tmp_27_3 [1/1] 1.72ns
.preheader10:28  %tmp_27_3 = add i5 %k_1_mid2, 3

ST_7: inputimg_load [1/2] 2.71ns
.preheader10:59  %inputimg_load = load float* %inputimg_addr, align 4

ST_7: C1_mapData_addr2_cast [1/1] 0.00ns
.preheader10:63  %C1_mapData_addr2_cast = zext i6 %C1_mapData_addr2 to i32

ST_7: tmp_148 [1/1] 0.00ns
.preheader10:64  %tmp_148 = call i8 @_ssdm_op_BitConcatenate.i8.i6.i2(i6 %C1_mapData_addr2, i2 0)

ST_7: p_shl50 [1/1] 0.00ns
.preheader10:65  %p_shl50 = zext i8 %tmp_148 to i32

ST_7: C1_mapData_addr3 [1/1] 1.72ns
.preheader10:66  %C1_mapData_addr3 = add i32 %C1_mapData_addr2_cast, %p_shl50

ST_7: C1_mapData_addr4 [1/1] 1.84ns
.preheader10:67  %C1_mapData_addr4 = add i32 %C1_mapData_addr3, 4

ST_7: tmp_315 [1/1] 0.00ns
.preheader10:68  %tmp_315 = zext i32 %C1_mapData_addr4 to i64

ST_7: C1_mapData_addr [1/1] 0.00ns
.preheader10:69  %C1_mapData_addr = getelementptr [150 x float]* @C1_mapData, i64 0, i64 %tmp_315

ST_7: C1_mapData_load [2/2] 2.71ns
.preheader10:70  %C1_mapData_load = load float* %C1_mapData_addr, align 4

ST_7: inputimg_load_1 [1/2] 2.71ns
.preheader10:76  %inputimg_load_1 = load float* %inputimg_addr_28, align 4

ST_7: C1_mapData_addr5 [1/1] 1.84ns
.preheader10:77  %C1_mapData_addr5 = add i32 %C1_mapData_addr3, 3

ST_7: tmp_318 [1/1] 0.00ns
.preheader10:78  %tmp_318 = zext i32 %C1_mapData_addr5 to i64

ST_7: C1_mapData_addr_1 [1/1] 0.00ns
.preheader10:79  %C1_mapData_addr_1 = getelementptr [150 x float]* @C1_mapData, i64 0, i64 %tmp_318

ST_7: C1_mapData_load_1 [2/2] 2.71ns
.preheader10:80  %C1_mapData_load_1 = load float* %C1_mapData_addr_1, align 4

ST_7: tmp_319 [1/1] 0.00ns
.preheader10:83  %tmp_319 = call i10 @_ssdm_op_BitConcatenate.i10.i5.i5(i5 %tmp_22, i5 %tmp_27_2)

ST_7: tmp_320 [1/1] 0.00ns
.preheader10:84  %tmp_320 = zext i10 %tmp_319 to i64

ST_7: inputimg_addr_29 [1/1] 0.00ns
.preheader10:85  %inputimg_addr_29 = getelementptr [1024 x float]* %inputimg, i64 0, i64 %tmp_320

ST_7: inputimg_load_2 [2/2] 2.71ns
.preheader10:86  %inputimg_load_2 = load float* %inputimg_addr_29, align 4

ST_7: tmp_322 [1/1] 0.00ns
.preheader10:93  %tmp_322 = call i10 @_ssdm_op_BitConcatenate.i10.i5.i5(i5 %tmp_22, i5 %tmp_27_3)

ST_7: tmp_323 [1/1] 0.00ns
.preheader10:94  %tmp_323 = zext i10 %tmp_322 to i64

ST_7: inputimg_addr_30 [1/1] 0.00ns
.preheader10:95  %inputimg_addr_30 = getelementptr [1024 x float]* %inputimg, i64 0, i64 %tmp_323

ST_7: inputimg_load_3 [2/2] 2.71ns
.preheader10:96  %inputimg_load_3 = load float* %inputimg_addr_30, align 4


 <State 8>: 8.41ns
ST_8: tmp_27_4 [1/1] 1.72ns
.preheader10:29  %tmp_27_4 = add i5 %k_1_mid2, 4

ST_8: C1_mapData_load [1/2] 2.71ns
.preheader10:70  %C1_mapData_load = load float* %C1_mapData_addr, align 4

ST_8: tmp_31 [4/4] 5.70ns
.preheader10:71  %tmp_31 = fmul float %inputimg_load, %C1_mapData_load

ST_8: C1_mapData_load_1 [1/2] 2.71ns
.preheader10:80  %C1_mapData_load_1 = load float* %C1_mapData_addr_1, align 4

ST_8: inputimg_load_2 [1/2] 2.71ns
.preheader10:86  %inputimg_load_2 = load float* %inputimg_addr_29, align 4

ST_8: C1_mapData_addr6 [1/1] 1.84ns
.preheader10:87  %C1_mapData_addr6 = add i32 %C1_mapData_addr3, 2

ST_8: tmp_321 [1/1] 0.00ns
.preheader10:88  %tmp_321 = zext i32 %C1_mapData_addr6 to i64

ST_8: C1_mapData_addr_2 [1/1] 0.00ns
.preheader10:89  %C1_mapData_addr_2 = getelementptr [150 x float]* @C1_mapData, i64 0, i64 %tmp_321

ST_8: C1_mapData_load_2 [2/2] 2.71ns
.preheader10:90  %C1_mapData_load_2 = load float* %C1_mapData_addr_2, align 4

ST_8: inputimg_load_3 [1/2] 2.71ns
.preheader10:96  %inputimg_load_3 = load float* %inputimg_addr_30, align 4

ST_8: C1_mapData_addr7 [1/1] 1.84ns
.preheader10:97  %C1_mapData_addr7 = add i32 %C1_mapData_addr3, 1

ST_8: tmp_324 [1/1] 0.00ns
.preheader10:98  %tmp_324 = zext i32 %C1_mapData_addr7 to i64

ST_8: C1_mapData_addr_3 [1/1] 0.00ns
.preheader10:99  %C1_mapData_addr_3 = getelementptr [150 x float]* @C1_mapData, i64 0, i64 %tmp_324

ST_8: C1_mapData_load_3 [2/2] 2.71ns
.preheader10:100  %C1_mapData_load_3 = load float* %C1_mapData_addr_3, align 4

ST_8: tmp_325 [1/1] 0.00ns
.preheader10:103  %tmp_325 = call i10 @_ssdm_op_BitConcatenate.i10.i5.i5(i5 %tmp_22, i5 %tmp_27_4)

ST_8: tmp_326 [1/1] 0.00ns
.preheader10:104  %tmp_326 = zext i10 %tmp_325 to i64

ST_8: inputimg_addr_31 [1/1] 0.00ns
.preheader10:105  %inputimg_addr_31 = getelementptr [1024 x float]* %inputimg, i64 0, i64 %tmp_326

ST_8: inputimg_load_4 [2/2] 2.71ns
.preheader10:106  %inputimg_load_4 = load float* %inputimg_addr_31, align 4


 <State 9>: 5.70ns
ST_9: tmp_31 [3/4] 5.70ns
.preheader10:71  %tmp_31 = fmul float %inputimg_load, %C1_mapData_load

ST_9: tmp_31_1 [4/4] 5.70ns
.preheader10:81  %tmp_31_1 = fmul float %inputimg_load_1, %C1_mapData_load_1

ST_9: C1_mapData_load_2 [1/2] 2.71ns
.preheader10:90  %C1_mapData_load_2 = load float* %C1_mapData_addr_2, align 4

ST_9: C1_mapData_load_3 [1/2] 2.71ns
.preheader10:100  %C1_mapData_load_3 = load float* %C1_mapData_addr_3, align 4

ST_9: inputimg_load_4 [1/2] 2.71ns
.preheader10:106  %inputimg_load_4 = load float* %inputimg_addr_31, align 4

ST_9: tmp_327 [1/1] 0.00ns
.preheader10:107  %tmp_327 = zext i32 %C1_mapData_addr3 to i64

ST_9: C1_mapData_addr_4 [1/1] 0.00ns
.preheader10:108  %C1_mapData_addr_4 = getelementptr [150 x float]* @C1_mapData, i64 0, i64 %tmp_327

ST_9: C1_mapData_load_4 [2/2] 2.71ns
.preheader10:109  %C1_mapData_load_4 = load float* %C1_mapData_addr_4, align 4


 <State 10>: 5.70ns
ST_10: tmp_15_trn_cast [1/1] 0.00ns
.preheader10:37  %tmp_15_trn_cast = zext i5 %j_1_mid2 to i10

ST_10: tmp_310 [1/1] 0.00ns
.preheader10:38  %tmp_310 = call i8 @_ssdm_op_BitConcatenate.i8.i3.i5(i3 %i_1_mid2, i5 0)

ST_10: p_shl81_cast [1/1] 0.00ns
.preheader10:39  %p_shl81_cast = zext i8 %tmp_310 to i9

ST_10: p_shl82_cast [1/1] 0.00ns
.preheader10:42  %p_shl82_cast = zext i5 %tmp_311 to i9

ST_10: C1_v_addr9 [1/1] 1.72ns
.preheader10:43  %C1_v_addr9 = sub i9 %p_shl81_cast, %p_shl82_cast

ST_10: C1_v_addr9_cast [1/1] 0.00ns
.preheader10:44  %C1_v_addr9_cast = sext i9 %C1_v_addr9 to i10

ST_10: C1_v_addr4 [1/1] 1.84ns
.preheader10:45  %C1_v_addr4 = add i10 %C1_v_addr9_cast, %tmp_15_trn_cast

ST_10: tmp_31 [2/4] 5.70ns
.preheader10:71  %tmp_31 = fmul float %inputimg_load, %C1_mapData_load

ST_10: tmp_31_1 [3/4] 5.70ns
.preheader10:81  %tmp_31_1 = fmul float %inputimg_load_1, %C1_mapData_load_1

ST_10: tmp_31_2 [4/4] 5.70ns
.preheader10:91  %tmp_31_2 = fmul float %inputimg_load_2, %C1_mapData_load_2

ST_10: C1_mapData_load_4 [1/2] 2.71ns
.preheader10:109  %C1_mapData_load_4 = load float* %C1_mapData_addr_4, align 4


 <State 11>: 6.17ns
ST_11: tmp_18_trn [1/1] 0.00ns
.preheader10:46  %tmp_18_trn = zext i5 %k_1_mid2 to i32

ST_11: tmp_146 [1/1] 0.00ns
.preheader10:47  %tmp_146 = call i15 @_ssdm_op_BitConcatenate.i15.i10.i5(i10 %C1_v_addr4, i5 0)

ST_11: p_shl [1/1] 0.00ns
.preheader10:48  %p_shl = sext i15 %tmp_146 to i32

ST_11: tmp_147 [1/1] 0.00ns
.preheader10:49  %tmp_147 = call i12 @_ssdm_op_BitConcatenate.i12.i10.i2(i10 %C1_v_addr4, i2 0)

ST_11: p_shl49 [1/1] 0.00ns
.preheader10:50  %p_shl49 = sext i12 %tmp_147 to i32

ST_11: C1_v_addr5 [1/1] 1.73ns
.preheader10:51  %C1_v_addr5 = sub i32 %p_shl, %p_shl49

ST_11: C1_v_addr6 [1/1] 1.73ns
.preheader10:52  %C1_v_addr6 = add i32 %C1_v_addr5, %tmp_18_trn

ST_11: tmp_312 [1/1] 0.00ns
.preheader10:53  %tmp_312 = zext i32 %C1_v_addr6 to i64

ST_11: C1_v_addr_7 [1/1] 0.00ns
.preheader10:54  %C1_v_addr_7 = getelementptr [4704 x float]* @C1_v, i64 0, i64 %tmp_312

ST_11: C1_v_load [2/2] 2.71ns
.preheader10:55  %C1_v_load = load float* %C1_v_addr_7, align 4

ST_11: tmp_31 [1/4] 5.70ns
.preheader10:71  %tmp_31 = fmul float %inputimg_load, %C1_mapData_load

ST_11: tmp_31_1 [2/4] 5.70ns
.preheader10:81  %tmp_31_1 = fmul float %inputimg_load_1, %C1_mapData_load_1

ST_11: tmp_31_2 [3/4] 5.70ns
.preheader10:91  %tmp_31_2 = fmul float %inputimg_load_2, %C1_mapData_load_2

ST_11: tmp_31_3 [4/4] 5.70ns
.preheader10:101  %tmp_31_3 = fmul float %inputimg_load_3, %C1_mapData_load_3


 <State 12>: 9.97ns
ST_12: C1_v_load [1/2] 2.71ns
.preheader10:55  %C1_v_load = load float* %C1_v_addr_7, align 4

ST_12: tmp_32 [5/5] 7.26ns
.preheader10:72  %tmp_32 = fadd float %C1_v_load, %tmp_31

ST_12: tmp_31_1 [1/4] 5.70ns
.preheader10:81  %tmp_31_1 = fmul float %inputimg_load_1, %C1_mapData_load_1

ST_12: tmp_31_2 [2/4] 5.70ns
.preheader10:91  %tmp_31_2 = fmul float %inputimg_load_2, %C1_mapData_load_2

ST_12: tmp_31_3 [3/4] 5.70ns
.preheader10:101  %tmp_31_3 = fmul float %inputimg_load_3, %C1_mapData_load_3

ST_12: tmp_31_4 [4/4] 5.70ns
.preheader10:110  %tmp_31_4 = fmul float %inputimg_load_4, %C1_mapData_load_4


 <State 13>: 7.26ns
ST_13: tmp_32 [4/5] 7.26ns
.preheader10:72  %tmp_32 = fadd float %C1_v_load, %tmp_31

ST_13: tmp_31_2 [1/4] 5.70ns
.preheader10:91  %tmp_31_2 = fmul float %inputimg_load_2, %C1_mapData_load_2

ST_13: tmp_31_3 [2/4] 5.70ns
.preheader10:101  %tmp_31_3 = fmul float %inputimg_load_3, %C1_mapData_load_3

ST_13: tmp_31_4 [3/4] 5.70ns
.preheader10:110  %tmp_31_4 = fmul float %inputimg_load_4, %C1_mapData_load_4


 <State 14>: 7.26ns
ST_14: tmp_32 [3/5] 7.26ns
.preheader10:72  %tmp_32 = fadd float %C1_v_load, %tmp_31

ST_14: tmp_31_3 [1/4] 5.70ns
.preheader10:101  %tmp_31_3 = fmul float %inputimg_load_3, %C1_mapData_load_3

ST_14: tmp_31_4 [2/4] 5.70ns
.preheader10:110  %tmp_31_4 = fmul float %inputimg_load_4, %C1_mapData_load_4


 <State 15>: 7.26ns
ST_15: tmp_32 [2/5] 7.26ns
.preheader10:72  %tmp_32 = fadd float %C1_v_load, %tmp_31

ST_15: tmp_31_4 [1/4] 5.70ns
.preheader10:110  %tmp_31_4 = fmul float %inputimg_load_4, %C1_mapData_load_4


 <State 16>: 14.51ns
ST_16: tmp_32 [1/5] 7.26ns
.preheader10:72  %tmp_32 = fadd float %C1_v_load, %tmp_31

ST_16: tmp_32_1 [5/5] 7.26ns
.preheader10:82  %tmp_32_1 = fadd float %tmp_32, %tmp_31_1


 <State 17>: 7.26ns
ST_17: tmp_32_1 [4/5] 7.26ns
.preheader10:82  %tmp_32_1 = fadd float %tmp_32, %tmp_31_1


 <State 18>: 7.26ns
ST_18: tmp_32_1 [3/5] 7.26ns
.preheader10:82  %tmp_32_1 = fadd float %tmp_32, %tmp_31_1


 <State 19>: 7.26ns
ST_19: tmp_32_1 [2/5] 7.26ns
.preheader10:82  %tmp_32_1 = fadd float %tmp_32, %tmp_31_1


 <State 20>: 14.51ns
ST_20: tmp_32_1 [1/5] 7.26ns
.preheader10:82  %tmp_32_1 = fadd float %tmp_32, %tmp_31_1

ST_20: tmp_32_2 [5/5] 7.26ns
.preheader10:92  %tmp_32_2 = fadd float %tmp_32_1, %tmp_31_2


 <State 21>: 7.26ns
ST_21: tmp_32_2 [4/5] 7.26ns
.preheader10:92  %tmp_32_2 = fadd float %tmp_32_1, %tmp_31_2


 <State 22>: 7.26ns
ST_22: tmp_32_2 [3/5] 7.26ns
.preheader10:92  %tmp_32_2 = fadd float %tmp_32_1, %tmp_31_2


 <State 23>: 7.26ns
ST_23: tmp_32_2 [2/5] 7.26ns
.preheader10:92  %tmp_32_2 = fadd float %tmp_32_1, %tmp_31_2


 <State 24>: 14.51ns
ST_24: tmp_32_2 [1/5] 7.26ns
.preheader10:92  %tmp_32_2 = fadd float %tmp_32_1, %tmp_31_2

ST_24: tmp_32_3 [5/5] 7.26ns
.preheader10:102  %tmp_32_3 = fadd float %tmp_32_2, %tmp_31_3


 <State 25>: 7.26ns
ST_25: tmp_32_3 [4/5] 7.26ns
.preheader10:102  %tmp_32_3 = fadd float %tmp_32_2, %tmp_31_3


 <State 26>: 7.26ns
ST_26: tmp_32_3 [3/5] 7.26ns
.preheader10:102  %tmp_32_3 = fadd float %tmp_32_2, %tmp_31_3


 <State 27>: 7.26ns
ST_27: tmp_32_3 [2/5] 7.26ns
.preheader10:102  %tmp_32_3 = fadd float %tmp_32_2, %tmp_31_3


 <State 28>: 14.51ns
ST_28: tmp_32_3 [1/5] 7.26ns
.preheader10:102  %tmp_32_3 = fadd float %tmp_32_2, %tmp_31_3

ST_28: tmp_32_4 [5/5] 7.26ns
.preheader10:111  %tmp_32_4 = fadd float %tmp_32_3, %tmp_31_4


 <State 29>: 7.26ns
ST_29: tmp_32_4 [4/5] 7.26ns
.preheader10:111  %tmp_32_4 = fadd float %tmp_32_3, %tmp_31_4


 <State 30>: 7.26ns
ST_30: tmp_32_4 [3/5] 7.26ns
.preheader10:111  %tmp_32_4 = fadd float %tmp_32_3, %tmp_31_4


 <State 31>: 7.26ns
ST_31: tmp_s [1/1] 0.00ns
.preheader10:11  %tmp_s = zext i3 %i_1_mid2 to i64

ST_31: tmp_32_4 [2/5] 7.26ns
.preheader10:111  %tmp_32_4 = fadd float %tmp_32_3, %tmp_31_4

ST_31: C1_bias_addr [1/1] 0.00ns
ifTrue:0  %C1_bias_addr = getelementptr [6 x float]* @C1_bias, i64 0, i64 %tmp_s

ST_31: C1_bias_load [2/2] 2.39ns
ifTrue:1  %C1_bias_load = load float* %C1_bias_addr, align 4


 <State 32>: 9.97ns
ST_32: tmp_32_4 [1/5] 7.26ns
.preheader10:111  %tmp_32_4 = fadd float %tmp_32_3, %tmp_31_4

ST_32: stg_249 [1/1] 2.71ns
.preheader10:112  store float %tmp_32_4, float* %C1_v_addr_7, align 4

ST_32: C1_bias_load [1/2] 2.39ns
ifTrue:1  %C1_bias_load = load float* %C1_bias_addr, align 4


 <State 33>: 7.26ns
ST_33: temp [5/5] 7.26ns
ifTrue:2  %temp = fadd float %tmp_32_4, %C1_bias_load


 <State 34>: 7.26ns
ST_34: temp [4/5] 7.26ns
ifTrue:2  %temp = fadd float %tmp_32_4, %C1_bias_load


 <State 35>: 7.26ns
ST_35: temp [3/5] 7.26ns
ifTrue:2  %temp = fadd float %tmp_32_4, %C1_bias_load


 <State 36>: 7.26ns
ST_36: temp [2/5] 7.26ns
ifTrue:2  %temp = fadd float %tmp_32_4, %C1_bias_load


 <State 37>: 7.26ns
ST_37: temp [1/5] 7.26ns
ifTrue:2  %temp = fadd float %tmp_32_4, %C1_bias_load


 <State 38>: 8.16ns
ST_38: temp_to_int [1/1] 0.00ns
ifTrue:3  %temp_to_int = bitcast float %temp to i32

ST_38: tmp_80 [1/1] 0.00ns
ifTrue:4  %tmp_80 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %temp_to_int, i32 23, i32 30)

ST_38: tmp_149 [1/1] 0.00ns
ifTrue:5  %tmp_149 = trunc i32 %temp_to_int to i23

ST_38: notlhs [1/1] 2.00ns
ifTrue:6  %notlhs = icmp ne i8 %tmp_80, -1

ST_38: notrhs [1/1] 2.39ns
ifTrue:7  %notrhs = icmp eq i23 %tmp_149, 0

ST_38: tmp_82 [1/1] 1.37ns
ifTrue:8  %tmp_82 = or i1 %notrhs, %notlhs

ST_38: tmp_83 [1/1] 6.79ns
ifTrue:9  %tmp_83 = fcmp ogt float %temp, 0.000000e+00

ST_38: tmp_84 [1/1] 1.37ns
ifTrue:10  %tmp_84 = and i1 %tmp_82, %tmp_83


 <State 39>: 4.08ns
ST_39: stg_264 [1/1] 0.00ns
.preheader10:0  call void (...)* @_ssdm_op_SpecLoopName([19 x i8]* @L_L_C1_conv_label0_str)

ST_39: empty_100 [1/1] 0.00ns
.preheader10:1  %empty_100 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 23520, i64 23520, i64 23520)

ST_39: stg_266 [1/1] 0.00ns
.preheader10:13  call void (...)* @_ssdm_op_SpecLoopName([19 x i8]* @L_L_C1_conv_label0_str)

ST_39: stg_267 [1/1] 0.00ns
.preheader10:21  call void (...)* @_ssdm_op_SpecLoopName([17 x i8]* @L_C1_conv_label0_str)

ST_39: stg_268 [1/1] 0.00ns
.preheader10:30  call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @p_str2) nounwind

ST_39: tmp_63 [1/1] 0.00ns
.preheader10:31  %tmp_63 = call i32 (...)* @_ssdm_op_SpecRegionBegin([15 x i8]* @p_str2)

ST_39: stg_270 [1/1] 0.00ns
.preheader10:32  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_39: empty_101 [1/1] 0.00ns
.preheader10:113  %empty_101 = call i32 (...)* @_ssdm_op_SpecRegionEnd([15 x i8]* @p_str2, i32 %tmp_63)

ST_39: temp_9 [1/1] 1.37ns
ifTrue:11  %temp_9 = select i1 %tmp_84, float %temp, float 0.000000e+00

ST_39: C1_y_addr [1/1] 0.00ns
ifTrue:12  %C1_y_addr = getelementptr [4704 x float]* @C1_y, i64 0, i64 %tmp_312

ST_39: stg_274 [1/1] 2.71ns
ifTrue:13  store float %temp_9, float* %C1_y_addr, align 4

ST_39: stg_275 [1/1] 0.00ns
ifTrue:14  br label %ifFalse


 <State 40>: 0.00ns
ST_40: stg_276 [1/1] 0.00ns
:0  ret void



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
