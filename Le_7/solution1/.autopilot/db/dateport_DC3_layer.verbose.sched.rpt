

================================================================
== Vivado HLS Report for 'dateport_DC3_layer'
================================================================
* Date:           Tue May 09 23:13:28 2017

* Version:        2015.2 (Build 1266856 on Fri Jun 26 16:57:37 PM 2015)
* Project:        Le_7
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.41|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  7009|  7009|  7009|  7009|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+------+------+----------+-----------+-----------+------+----------+
        |                 |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name    |  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------+------+------+----------+-----------+-----------+------+----------+
        |- Loop 1         |  7008|  7008|       438|          -|          -|    16|    no    |
        | + Loop 1.1      |   435|   435|        87|          -|          -|     5|    no    |
        |  ++ Loop 1.1.1  |    85|    85|        17|          -|          -|     5|    no    |
        +-----------------+------+------+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 21
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond)
3 --> 
	4  / true
4 --> 
	2  / (!tmp_s)
	5  / (tmp_s)
5 --> 
	6  / (tmp_62)
	4  / (!tmp_62)
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	5  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: stg_22 [1/1] 1.57ns
:0  br label %.loopexit


 <State 2>: 2.39ns
ST_2: i [1/1] 0.00ns
.loopexit:0  %i = phi i5 [ 0, %0 ], [ %i_13, %.preheader1 ]

ST_2: exitcond [1/1] 1.91ns
.loopexit:1  %exitcond = icmp eq i5 %i, -16

ST_2: empty [1/1] 0.00ns
.loopexit:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind

ST_2: i_13 [1/1] 1.72ns
.loopexit:3  %i_13 = add i5 %i, 1

ST_2: stg_27 [1/1] 0.00ns
.loopexit:4  br i1 %exitcond, label %3, label %.preheader1.preheader

ST_2: tmp [1/1] 0.00ns
.preheader1.preheader:0  %tmp = zext i5 %i to i64

ST_2: C3_bias_addr [1/1] 0.00ns
.preheader1.preheader:1  %C3_bias_addr = getelementptr [16 x float]* @C3_bias, i64 0, i64 %tmp

ST_2: C3_bias_load [2/2] 2.39ns
.preheader1.preheader:2  %C3_bias_load = load float* %C3_bias_addr, align 4

ST_2: stg_31 [1/1] 0.00ns
:0  ret void


 <State 3>: 2.39ns
ST_3: C3_bias_load [1/2] 2.39ns
.preheader1.preheader:2  %C3_bias_load = load float* %C3_bias_addr, align 4

ST_3: tmp_trn_cast [1/1] 0.00ns
.preheader1.preheader:3  %tmp_trn_cast = zext i5 %i to i8

ST_3: tmp_108 [1/1] 0.00ns
.preheader1.preheader:4  %tmp_108 = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %i, i2 0)

ST_3: p_shl41_cast [1/1] 0.00ns
.preheader1.preheader:5  %p_shl41_cast = zext i7 %tmp_108 to i8

ST_3: S4_d_addr12 [1/1] 1.72ns
.preheader1.preheader:6  %S4_d_addr12 = add i8 %tmp_trn_cast, %p_shl41_cast

ST_3: tmp_109 [1/1] 0.00ns
.preheader1.preheader:7  %tmp_109 = call i8 @_ssdm_op_BitConcatenate.i8.i5.i3(i5 %i, i3 0)

ST_3: p_shl_cast [1/1] 0.00ns
.preheader1.preheader:8  %p_shl_cast = zext i8 %tmp_109 to i9

ST_3: tmp_110 [1/1] 0.00ns
.preheader1.preheader:9  %tmp_110 = call i6 @_ssdm_op_BitConcatenate.i6.i5.i1(i5 %i, i1 false)

ST_3: p_shl42_cast [1/1] 0.00ns
.preheader1.preheader:10  %p_shl42_cast = zext i6 %tmp_110 to i9

ST_3: C3_y_addr5 [1/1] 1.72ns
.preheader1.preheader:11  %C3_y_addr5 = add i9 %p_shl42_cast, %p_shl_cast

ST_3: stg_42 [1/1] 1.57ns
.preheader1.preheader:12  br label %.preheader1


 <State 4>: 3.68ns
ST_4: j [1/1] 0.00ns
.preheader1:0  %j = phi i4 [ %j_10, %2 ], [ 0, %.preheader1.preheader ]

ST_4: tmp_s [1/1] 1.88ns
.preheader1:1  %tmp_s = icmp ult i4 %j, -6

ST_4: empty_36 [1/1] 0.00ns
.preheader1:2  %empty_36 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5) nounwind

ST_4: stg_46 [1/1] 0.00ns
.preheader1:3  br i1 %tmp_s, label %.preheader.preheader, label %.loopexit

ST_4: tmp_61 [1/1] 0.00ns
.preheader.preheader:0  %tmp_61 = or i4 %j, 1

ST_4: tmp_87 [1/1] 0.00ns
.preheader.preheader:1  %tmp_87 = call i3 @_ssdm_op_PartSelect.i3.i4.i32.i32(i4 %j, i32 1, i32 3)

ST_4: tmp_76_trn_cast [1/1] 0.00ns
.preheader.preheader:2  %tmp_76_trn_cast = zext i3 %tmp_87 to i8

ST_4: S4_d_addr13 [1/1] 1.72ns
.preheader.preheader:3  %S4_d_addr13 = add i8 %tmp_76_trn_cast, %S4_d_addr12

ST_4: S4_d_addr13_cast [1/1] 0.00ns
.preheader.preheader:4  %S4_d_addr13_cast = zext i8 %S4_d_addr13 to i32

ST_4: tmp_88 [1/1] 0.00ns
.preheader.preheader:5  %tmp_88 = call i10 @_ssdm_op_BitConcatenate.i10.i8.i2(i8 %S4_d_addr13, i2 0)

ST_4: p_shl [1/1] 0.00ns
.preheader.preheader:6  %p_shl = zext i10 %tmp_88 to i32

ST_4: S4_d_addr14 [1/1] 1.84ns
.preheader.preheader:7  %S4_d_addr14 = add i32 %p_shl, %S4_d_addr13_cast

ST_4: tmp_77_trn_cast [1/1] 0.00ns
.preheader.preheader:8  %tmp_77_trn_cast = zext i4 %j to i9

ST_4: C3_y_addr6 [1/1] 1.84ns
.preheader.preheader:9  %C3_y_addr6 = add i9 %tmp_77_trn_cast, %C3_y_addr5

ST_4: tmp_89 [1/1] 0.00ns
.preheader.preheader:10  %tmp_89 = call i12 @_ssdm_op_BitConcatenate.i12.i9.i3(i9 %C3_y_addr6, i3 0)

ST_4: p_shl16 [1/1] 0.00ns
.preheader.preheader:11  %p_shl16 = zext i12 %tmp_89 to i32

ST_4: tmp_90 [1/1] 0.00ns
.preheader.preheader:12  %tmp_90 = call i10 @_ssdm_op_BitConcatenate.i10.i9.i1(i9 %C3_y_addr6, i1 false)

ST_4: p_shl17 [1/1] 0.00ns
.preheader.preheader:13  %p_shl17 = zext i10 %tmp_90 to i32

ST_4: C3_y_addr7 [1/1] 1.84ns
.preheader.preheader:14  %C3_y_addr7 = add i32 %p_shl16, %p_shl17

ST_4: tmp_79_trn6_cast [1/1] 0.00ns
.preheader.preheader:15  %tmp_79_trn6_cast = zext i4 %tmp_61 to i9

ST_4: C3_y_addr8 [1/1] 1.84ns
.preheader.preheader:16  %C3_y_addr8 = add i9 %tmp_79_trn6_cast, %C3_y_addr5

ST_4: tmp_91 [1/1] 0.00ns
.preheader.preheader:17  %tmp_91 = call i12 @_ssdm_op_BitConcatenate.i12.i9.i3(i9 %C3_y_addr8, i3 0)

ST_4: p_shl18 [1/1] 0.00ns
.preheader.preheader:18  %p_shl18 = zext i12 %tmp_91 to i32

ST_4: tmp_92 [1/1] 0.00ns
.preheader.preheader:19  %tmp_92 = call i10 @_ssdm_op_BitConcatenate.i10.i9.i1(i9 %C3_y_addr8, i1 false)

ST_4: p_shl19 [1/1] 0.00ns
.preheader.preheader:20  %p_shl19 = zext i10 %tmp_92 to i32

ST_4: C3_y_addr9 [1/1] 1.84ns
.preheader.preheader:21  %C3_y_addr9 = add i32 %p_shl18, %p_shl19

ST_4: stg_69 [1/1] 1.57ns
.preheader.preheader:22  br label %.preheader


 <State 5>: 4.67ns
ST_5: k [1/1] 0.00ns
.preheader:0  %k = phi i4 [ %k_9, %1 ], [ 0, %.preheader.preheader ]

ST_5: tmp_62 [1/1] 1.88ns
.preheader:1  %tmp_62 = icmp ult i4 %k, -6

ST_5: empty_37 [1/1] 0.00ns
.preheader:2  %empty_37 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5) nounwind

ST_5: stg_73 [1/1] 0.00ns
.preheader:3  br i1 %tmp_62, label %1, label %2

ST_5: tmp_63 [1/1] 0.00ns
:0  %tmp_63 = call i3 @_ssdm_op_PartSelect.i3.i4.i32.i32(i4 %k, i32 1, i32 3)

ST_5: tmp_82_trn [1/1] 0.00ns
:1  %tmp_82_trn = zext i3 %tmp_63 to i32

ST_5: S4_d_addr15 [1/1] 1.84ns
:2  %S4_d_addr15 = add i32 %tmp_82_trn, %S4_d_addr14

ST_5: tmp_83_trn [1/1] 0.00ns
:6  %tmp_83_trn = zext i4 %k to i32

ST_5: C3_y_addr11 [1/1] 1.96ns
:7  %C3_y_addr11 = add i32 %tmp_83_trn, %C3_y_addr7

ST_5: tmp_112 [1/1] 0.00ns
:8  %tmp_112 = zext i32 %C3_y_addr11 to i64

ST_5: C3_y_addr [1/1] 0.00ns
:9  %C3_y_addr = getelementptr [1600 x float]* @C3_y, i64 0, i64 %tmp_112

ST_5: C3_y_load [2/2] 2.71ns
:10  %C3_y_load = load float* %C3_y_addr, align 8

ST_5: tmp_66 [1/1] 0.00ns
:25  %tmp_66 = or i4 %k, 1

ST_5: tmp_87_trn [1/1] 0.00ns
:26  %tmp_87_trn = zext i4 %tmp_66 to i32

ST_5: C3_y_addr12 [1/1] 1.96ns
:27  %C3_y_addr12 = add i32 %tmp_87_trn, %C3_y_addr7

ST_5: tmp_113 [1/1] 0.00ns
:28  %tmp_113 = zext i32 %C3_y_addr12 to i64

ST_5: C3_y_addr_4 [1/1] 0.00ns
:29  %C3_y_addr_4 = getelementptr [1600 x float]* @C3_y, i64 0, i64 %tmp_113

ST_5: C3_y_load_4 [2/2] 2.71ns
:30  %C3_y_load_4 = load float* %C3_y_addr_4, align 4

ST_5: C3_y_addr10 [1/1] 1.96ns
:45  %C3_y_addr10 = add i32 %tmp_83_trn, %C3_y_addr9

ST_5: C3_y_addr4 [1/1] 1.96ns
:63  %C3_y_addr4 = add i32 %tmp_87_trn, %C3_y_addr9

ST_5: k_9 [1/1] 0.80ns
:81  %k_9 = add i4 2, %k

ST_5: j_10 [1/1] 0.80ns
:0  %j_10 = add i4 %j, 2

ST_5: stg_92 [1/1] 0.00ns
:1  br label %.preheader1


 <State 6>: 2.71ns
ST_6: C3_y_load [1/2] 2.71ns
:10  %C3_y_load = load float* %C3_y_addr, align 8

ST_6: C3_y_load_4 [1/2] 2.71ns
:30  %C3_y_load_4 = load float* %C3_y_addr_4, align 4

ST_6: tmp_114 [1/1] 0.00ns
:46  %tmp_114 = zext i32 %C3_y_addr10 to i64

ST_6: C3_y_addr_5 [1/1] 0.00ns
:47  %C3_y_addr_5 = getelementptr [1600 x float]* @C3_y, i64 0, i64 %tmp_114

ST_6: C3_y_load_5 [2/2] 2.71ns
:48  %C3_y_load_5 = load float* %C3_y_addr_5, align 8

ST_6: tmp_115 [1/1] 0.00ns
:64  %tmp_115 = zext i32 %C3_y_addr4 to i64

ST_6: C3_y_addr_6 [1/1] 0.00ns
:65  %C3_y_addr_6 = getelementptr [1600 x float]* @C3_y, i64 0, i64 %tmp_115

ST_6: C3_y_load_6 [2/2] 2.71ns
:66  %C3_y_load_6 = load float* %C3_y_addr_6, align 4


 <State 7>: 7.26ns
ST_7: temp [5/5] 7.26ns
:11  %temp = fadd float %C3_y_load, %C3_bias_load

ST_7: temp_3 [5/5] 7.26ns
:31  %temp_3 = fadd float %C3_y_load_4, %C3_bias_load

ST_7: C3_y_load_5 [1/2] 2.71ns
:48  %C3_y_load_5 = load float* %C3_y_addr_5, align 8

ST_7: C3_y_load_6 [1/2] 2.71ns
:66  %C3_y_load_6 = load float* %C3_y_addr_6, align 4


 <State 8>: 7.26ns
ST_8: temp [4/5] 7.26ns
:11  %temp = fadd float %C3_y_load, %C3_bias_load

ST_8: temp_3 [4/5] 7.26ns
:31  %temp_3 = fadd float %C3_y_load_4, %C3_bias_load

ST_8: temp_4 [5/5] 7.26ns
:49  %temp_4 = fadd float %C3_y_load_5, %C3_bias_load

ST_8: temp_5 [5/5] 7.26ns
:67  %temp_5 = fadd float %C3_y_load_6, %C3_bias_load


 <State 9>: 7.26ns
ST_9: temp [3/5] 7.26ns
:11  %temp = fadd float %C3_y_load, %C3_bias_load

ST_9: temp_3 [3/5] 7.26ns
:31  %temp_3 = fadd float %C3_y_load_4, %C3_bias_load

ST_9: temp_4 [4/5] 7.26ns
:49  %temp_4 = fadd float %C3_y_load_5, %C3_bias_load

ST_9: temp_5 [4/5] 7.26ns
:67  %temp_5 = fadd float %C3_y_load_6, %C3_bias_load


 <State 10>: 7.26ns
ST_10: temp [2/5] 7.26ns
:11  %temp = fadd float %C3_y_load, %C3_bias_load

ST_10: temp_3 [2/5] 7.26ns
:31  %temp_3 = fadd float %C3_y_load_4, %C3_bias_load

ST_10: temp_4 [3/5] 7.26ns
:49  %temp_4 = fadd float %C3_y_load_5, %C3_bias_load

ST_10: temp_5 [3/5] 7.26ns
:67  %temp_5 = fadd float %C3_y_load_6, %C3_bias_load


 <State 11>: 7.26ns
ST_11: temp [1/5] 7.26ns
:11  %temp = fadd float %C3_y_load, %C3_bias_load

ST_11: temp_3 [1/5] 7.26ns
:31  %temp_3 = fadd float %C3_y_load_4, %C3_bias_load

ST_11: temp_4 [2/5] 7.26ns
:49  %temp_4 = fadd float %C3_y_load_5, %C3_bias_load

ST_11: temp_5 [2/5] 7.26ns
:67  %temp_5 = fadd float %C3_y_load_6, %C3_bias_load


 <State 12>: 8.16ns
ST_12: tmp_111 [1/1] 0.00ns
:3  %tmp_111 = zext i32 %S4_d_addr15 to i64

ST_12: S4_d_addr [1/1] 0.00ns
:4  %S4_d_addr = getelementptr [400 x float]* @S4_d, i64 0, i64 %tmp_111

ST_12: S4_d_load [2/2] 2.71ns
:5  %S4_d_load = load float* %S4_d_addr, align 4

ST_12: temp_to_int [1/1] 0.00ns
:12  %temp_to_int = bitcast float %temp to i32

ST_12: tmp_40 [1/1] 0.00ns
:13  %tmp_40 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %temp_to_int, i32 23, i32 30)

ST_12: tmp_93 [1/1] 0.00ns
:14  %tmp_93 = trunc i32 %temp_to_int to i23

ST_12: notlhs [1/1] 2.00ns
:15  %notlhs = icmp ne i8 %tmp_40, -1

ST_12: notrhs [1/1] 2.39ns
:16  %notrhs = icmp eq i23 %tmp_93, 0

ST_12: tmp_42 [1/1] 1.37ns
:17  %tmp_42 = or i1 %notrhs, %notlhs

ST_12: tmp_43 [1/1] 6.79ns
:18  %tmp_43 = fcmp ogt float %temp, 0.000000e+00

ST_12: tmp_44 [1/1] 1.37ns
:19  %tmp_44 = and i1 %tmp_42, %tmp_43

ST_12: temp_3_to_int [1/1] 0.00ns
:32  %temp_3_to_int = bitcast float %temp_3 to i32

ST_12: tmp_45 [1/1] 0.00ns
:33  %tmp_45 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %temp_3_to_int, i32 23, i32 30)

ST_12: tmp_94 [1/1] 0.00ns
:34  %tmp_94 = trunc i32 %temp_3_to_int to i23

ST_12: notlhs5 [1/1] 2.00ns
:35  %notlhs5 = icmp ne i8 %tmp_45, -1

ST_12: notrhs6 [1/1] 2.39ns
:36  %notrhs6 = icmp eq i23 %tmp_94, 0

ST_12: tmp_47 [1/1] 1.37ns
:37  %tmp_47 = or i1 %notrhs6, %notlhs5

ST_12: tmp_48 [1/1] 6.79ns
:38  %tmp_48 = fcmp ogt float %temp_3, 0.000000e+00

ST_12: tmp_49 [1/1] 1.37ns
:39  %tmp_49 = and i1 %tmp_47, %tmp_48

ST_12: temp_4 [1/5] 7.26ns
:49  %temp_4 = fadd float %C3_y_load_5, %C3_bias_load

ST_12: temp_5 [1/5] 7.26ns
:67  %temp_5 = fadd float %C3_y_load_6, %C3_bias_load


 <State 13>: 8.41ns
ST_13: S4_d_load [1/2] 2.71ns
:5  %S4_d_load = load float* %S4_d_addr, align 4

ST_13: p_0_i [1/1] 1.37ns
:20  %p_0_i = select i1 %tmp_44, float 1.000000e+00, float 0.000000e+00

ST_13: tmp_64 [4/4] 5.70ns
:21  %tmp_64 = fmul float %S4_d_load, %p_0_i

ST_13: p_0_i3 [1/1] 1.37ns
:40  %p_0_i3 = select i1 %tmp_49, float 1.000000e+00, float 0.000000e+00

ST_13: tmp_67 [4/4] 5.70ns
:41  %tmp_67 = fmul float %S4_d_load, %p_0_i3

ST_13: temp_4_to_int [1/1] 0.00ns
:50  %temp_4_to_int = bitcast float %temp_4 to i32

ST_13: tmp_50 [1/1] 0.00ns
:51  %tmp_50 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %temp_4_to_int, i32 23, i32 30)

ST_13: tmp_95 [1/1] 0.00ns
:52  %tmp_95 = trunc i32 %temp_4_to_int to i23

ST_13: notlhs7 [1/1] 2.00ns
:53  %notlhs7 = icmp ne i8 %tmp_50, -1

ST_13: notrhs8 [1/1] 2.39ns
:54  %notrhs8 = icmp eq i23 %tmp_95, 0

ST_13: tmp_52 [1/1] 1.37ns
:55  %tmp_52 = or i1 %notrhs8, %notlhs7

ST_13: tmp_53 [1/1] 6.79ns
:56  %tmp_53 = fcmp ogt float %temp_4, 0.000000e+00

ST_13: tmp_54 [1/1] 1.37ns
:57  %tmp_54 = and i1 %tmp_52, %tmp_53

ST_13: temp_5_to_int [1/1] 0.00ns
:68  %temp_5_to_int = bitcast float %temp_5 to i32

ST_13: tmp_55 [1/1] 0.00ns
:69  %tmp_55 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %temp_5_to_int, i32 23, i32 30)

ST_13: tmp_96 [1/1] 0.00ns
:70  %tmp_96 = trunc i32 %temp_5_to_int to i23

ST_13: notlhs9 [1/1] 2.00ns
:71  %notlhs9 = icmp ne i8 %tmp_55, -1

ST_13: notrhs1 [1/1] 2.39ns
:72  %notrhs1 = icmp eq i23 %tmp_96, 0

ST_13: tmp_57 [1/1] 1.37ns
:73  %tmp_57 = or i1 %notrhs1, %notlhs9

ST_13: tmp_58 [1/1] 6.79ns
:74  %tmp_58 = fcmp ogt float %temp_5, 0.000000e+00

ST_13: tmp_59 [1/1] 1.37ns
:75  %tmp_59 = and i1 %tmp_57, %tmp_58


 <State 14>: 7.07ns
ST_14: tmp_64 [3/4] 5.70ns
:21  %tmp_64 = fmul float %S4_d_load, %p_0_i

ST_14: tmp_67 [3/4] 5.70ns
:41  %tmp_67 = fmul float %S4_d_load, %p_0_i3

ST_14: p_0_i6 [1/1] 1.37ns
:58  %p_0_i6 = select i1 %tmp_54, float 1.000000e+00, float 0.000000e+00

ST_14: tmp_69 [4/4] 5.70ns
:59  %tmp_69 = fmul float %S4_d_load, %p_0_i6

ST_14: p_0_i9 [1/1] 1.37ns
:76  %p_0_i9 = select i1 %tmp_59, float 1.000000e+00, float 0.000000e+00

ST_14: tmp_71 [4/4] 5.70ns
:77  %tmp_71 = fmul float %S4_d_load, %p_0_i9


 <State 15>: 5.70ns
ST_15: tmp_64 [2/4] 5.70ns
:21  %tmp_64 = fmul float %S4_d_load, %p_0_i

ST_15: tmp_67 [2/4] 5.70ns
:41  %tmp_67 = fmul float %S4_d_load, %p_0_i3

ST_15: tmp_69 [3/4] 5.70ns
:59  %tmp_69 = fmul float %S4_d_load, %p_0_i6

ST_15: tmp_71 [3/4] 5.70ns
:77  %tmp_71 = fmul float %S4_d_load, %p_0_i9


 <State 16>: 5.70ns
ST_16: tmp_64 [1/4] 5.70ns
:21  %tmp_64 = fmul float %S4_d_load, %p_0_i

ST_16: tmp_67 [1/4] 5.70ns
:41  %tmp_67 = fmul float %S4_d_load, %p_0_i3

ST_16: tmp_69 [2/4] 5.70ns
:59  %tmp_69 = fmul float %S4_d_load, %p_0_i6

ST_16: tmp_71 [2/4] 5.70ns
:77  %tmp_71 = fmul float %S4_d_load, %p_0_i9


 <State 17>: 5.70ns
ST_17: tmp_65 [4/4] 5.70ns
:22  %tmp_65 = fmul float %tmp_64, 2.500000e-01

ST_17: tmp_68 [4/4] 5.70ns
:42  %tmp_68 = fmul float %tmp_67, 2.500000e-01

ST_17: tmp_69 [1/4] 5.70ns
:59  %tmp_69 = fmul float %S4_d_load, %p_0_i6

ST_17: tmp_71 [1/4] 5.70ns
:77  %tmp_71 = fmul float %S4_d_load, %p_0_i9


 <State 18>: 5.70ns
ST_18: tmp_65 [3/4] 5.70ns
:22  %tmp_65 = fmul float %tmp_64, 2.500000e-01

ST_18: tmp_68 [3/4] 5.70ns
:42  %tmp_68 = fmul float %tmp_67, 2.500000e-01

ST_18: tmp_70 [4/4] 5.70ns
:60  %tmp_70 = fmul float %tmp_69, 2.500000e-01

ST_18: tmp_72 [4/4] 5.70ns
:78  %tmp_72 = fmul float %tmp_71, 2.500000e-01


 <State 19>: 5.70ns
ST_19: tmp_65 [2/4] 5.70ns
:22  %tmp_65 = fmul float %tmp_64, 2.500000e-01

ST_19: tmp_68 [2/4] 5.70ns
:42  %tmp_68 = fmul float %tmp_67, 2.500000e-01

ST_19: tmp_70 [3/4] 5.70ns
:60  %tmp_70 = fmul float %tmp_69, 2.500000e-01

ST_19: tmp_72 [3/4] 5.70ns
:78  %tmp_72 = fmul float %tmp_71, 2.500000e-01


 <State 20>: 8.41ns
ST_20: tmp_65 [1/4] 5.70ns
:22  %tmp_65 = fmul float %tmp_64, 2.500000e-01

ST_20: C3_d_addr [1/1] 0.00ns
:23  %C3_d_addr = getelementptr [1600 x float]* @C3_d, i64 0, i64 %tmp_112

ST_20: stg_191 [1/1] 2.71ns
:24  store float %tmp_65, float* %C3_d_addr, align 8

ST_20: tmp_68 [1/4] 5.70ns
:42  %tmp_68 = fmul float %tmp_67, 2.500000e-01

ST_20: C3_d_addr_1 [1/1] 0.00ns
:43  %C3_d_addr_1 = getelementptr [1600 x float]* @C3_d, i64 0, i64 %tmp_113

ST_20: stg_194 [1/1] 2.71ns
:44  store float %tmp_68, float* %C3_d_addr_1, align 4

ST_20: tmp_70 [2/4] 5.70ns
:60  %tmp_70 = fmul float %tmp_69, 2.500000e-01

ST_20: tmp_72 [2/4] 5.70ns
:78  %tmp_72 = fmul float %tmp_71, 2.500000e-01


 <State 21>: 8.41ns
ST_21: tmp_70 [1/4] 5.70ns
:60  %tmp_70 = fmul float %tmp_69, 2.500000e-01

ST_21: C3_d_addr_2 [1/1] 0.00ns
:61  %C3_d_addr_2 = getelementptr [1600 x float]* @C3_d, i64 0, i64 %tmp_114

ST_21: stg_199 [1/1] 2.71ns
:62  store float %tmp_70, float* %C3_d_addr_2, align 8

ST_21: tmp_72 [1/4] 5.70ns
:78  %tmp_72 = fmul float %tmp_71, 2.500000e-01

ST_21: C3_d_addr_3 [1/1] 0.00ns
:79  %C3_d_addr_3 = getelementptr [1600 x float]* @C3_d, i64 0, i64 %tmp_115

ST_21: stg_202 [1/1] 2.71ns
:80  store float %tmp_72, float* %C3_d_addr_3, align 4

ST_21: stg_203 [1/1] 0.00ns
:82  br label %.preheader



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
