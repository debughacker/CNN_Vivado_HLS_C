// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dateport_C3_conv (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        S2_y_address0,
        S2_y_ce0,
        S2_y_q0,
        S2_y_address1,
        S2_y_ce1,
        S2_y_q1,
        C3_mapData_address0,
        C3_mapData_ce0,
        C3_mapData_q0,
        C3_mapData_address1,
        C3_mapData_ce1,
        C3_mapData_q1,
        C3_bias_address0,
        C3_bias_ce0,
        C3_bias_q0,
        C3_y_address0,
        C3_y_ce0,
        C3_y_we0,
        C3_y_d0
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 38'b1;
parameter    ap_ST_st2_fsm_1 = 38'b10;
parameter    ap_ST_st3_fsm_2 = 38'b100;
parameter    ap_ST_st4_fsm_3 = 38'b1000;
parameter    ap_ST_pp0_stg0_fsm_4 = 38'b10000;
parameter    ap_ST_pp0_stg1_fsm_5 = 38'b100000;
parameter    ap_ST_pp0_stg2_fsm_6 = 38'b1000000;
parameter    ap_ST_pp0_stg3_fsm_7 = 38'b10000000;
parameter    ap_ST_pp0_stg4_fsm_8 = 38'b100000000;
parameter    ap_ST_pp0_stg5_fsm_9 = 38'b1000000000;
parameter    ap_ST_pp0_stg6_fsm_10 = 38'b10000000000;
parameter    ap_ST_pp0_stg7_fsm_11 = 38'b100000000000;
parameter    ap_ST_pp0_stg8_fsm_12 = 38'b1000000000000;
parameter    ap_ST_pp0_stg9_fsm_13 = 38'b10000000000000;
parameter    ap_ST_pp0_stg10_fsm_14 = 38'b100000000000000;
parameter    ap_ST_pp0_stg11_fsm_15 = 38'b1000000000000000;
parameter    ap_ST_pp0_stg12_fsm_16 = 38'b10000000000000000;
parameter    ap_ST_pp0_stg13_fsm_17 = 38'b100000000000000000;
parameter    ap_ST_pp0_stg14_fsm_18 = 38'b1000000000000000000;
parameter    ap_ST_pp0_stg15_fsm_19 = 38'b10000000000000000000;
parameter    ap_ST_pp0_stg16_fsm_20 = 38'b100000000000000000000;
parameter    ap_ST_pp0_stg17_fsm_21 = 38'b1000000000000000000000;
parameter    ap_ST_pp0_stg18_fsm_22 = 38'b10000000000000000000000;
parameter    ap_ST_pp0_stg19_fsm_23 = 38'b100000000000000000000000;
parameter    ap_ST_pp0_stg20_fsm_24 = 38'b1000000000000000000000000;
parameter    ap_ST_pp0_stg21_fsm_25 = 38'b10000000000000000000000000;
parameter    ap_ST_st33_fsm_26 = 38'b100000000000000000000000000;
parameter    ap_ST_st34_fsm_27 = 38'b1000000000000000000000000000;
parameter    ap_ST_st35_fsm_28 = 38'b10000000000000000000000000000;
parameter    ap_ST_st36_fsm_29 = 38'b100000000000000000000000000000;
parameter    ap_ST_st37_fsm_30 = 38'b1000000000000000000000000000000;
parameter    ap_ST_st38_fsm_31 = 38'b10000000000000000000000000000000;
parameter    ap_ST_st39_fsm_32 = 38'b100000000000000000000000000000000;
parameter    ap_ST_st40_fsm_33 = 38'b1000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_34 = 38'b10000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_35 = 38'b100000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_36 = 38'b1000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_37 = 38'b10000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv12_0 = 12'b000000000000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv4_A = 4'b1010;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv16_BB80 = 16'b1011101110000000;
parameter    ap_const_lv16_1 = 16'b1;
parameter    ap_const_lv12_BB8 = 12'b101110111000;
parameter    ap_const_lv3_5 = 3'b101;
parameter    ap_const_lv7_32 = 7'b110010;
parameter    ap_const_lv10_1F4 = 10'b111110100;
parameter    ap_const_lv10_1 = 10'b1;
parameter    ap_const_lv12_1 = 12'b1;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv4_2 = 4'b10;
parameter    ap_const_lv4_3 = 4'b11;
parameter    ap_const_lv4_4 = 4'b100;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] S2_y_address0;
output   S2_y_ce0;
input  [31:0] S2_y_q0;
output  [10:0] S2_y_address1;
output   S2_y_ce1;
input  [31:0] S2_y_q1;
output  [11:0] C3_mapData_address0;
output   C3_mapData_ce0;
input  [31:0] C3_mapData_q0;
output  [11:0] C3_mapData_address1;
output   C3_mapData_ce1;
input  [31:0] C3_mapData_q1;
output  [3:0] C3_bias_address0;
output   C3_bias_ce0;
input  [31:0] C3_bias_q0;
output  [10:0] C3_y_address0;
output   C3_y_ce0;
output   C3_y_we0;
output  [31:0] C3_y_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[10:0] S2_y_address0;
reg S2_y_ce0;
reg[10:0] S2_y_address1;
reg S2_y_ce1;
reg[11:0] C3_mapData_address0;
reg C3_mapData_ce0;
reg[11:0] C3_mapData_address1;
reg C3_mapData_ce1;
reg C3_bias_ce0;
reg C3_y_ce0;
reg C3_y_we0;
(* fsm_encoding = "none" *) reg   [37:0] ap_CS_fsm = 38'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_56;
reg   [10:0] C3_v_address0;
reg    C3_v_ce0;
reg    C3_v_we0;
reg   [31:0] C3_v_d0;
wire   [31:0] C3_v_q0;
reg   [15:0] indvar_flatten1_reg_311;
reg   [4:0] i_1_reg_322;
reg   [11:0] indvar_flatten2_reg_333;
reg   [2:0] j_1_reg_344;
reg   [9:0] indvar_flatten3_reg_355;
reg   [3:0] k_1_reg_366;
reg   [6:0] indvar_flatten_reg_378;
reg   [3:0] m_reg_390;
reg   [2:0] n_reg_402;
reg   [31:0] reg_466;
reg    ap_sig_cseq_ST_pp0_stg7_fsm_11;
reg    ap_sig_bdd_126;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg   [0:0] exitcond_flatten3_reg_1418;
reg    ap_sig_cseq_ST_st37_fsm_30;
reg    ap_sig_bdd_139;
wire   [31:0] grp_fu_448_p2;
reg   [31:0] reg_471;
reg    ap_sig_cseq_ST_pp0_stg11_fsm_15;
reg    ap_sig_bdd_149;
reg    ap_sig_cseq_ST_pp0_stg15_fsm_19;
reg    ap_sig_bdd_157;
reg    ap_sig_cseq_ST_pp0_stg19_fsm_23;
reg    ap_sig_bdd_166;
reg    ap_sig_cseq_ST_pp0_stg1_fsm_5;
reg    ap_sig_bdd_175;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond_flatten3_reg_1418_pp0_it1;
reg    ap_sig_cseq_ST_st42_fsm_35;
reg    ap_sig_bdd_188;
wire   [0:0] exitcond3_fu_477_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_198;
wire   [4:0] i_3_fu_483_p2;
reg   [4:0] i_3_reg_1387;
wire   [8:0] C3_v_addr1_fu_513_p2;
reg   [8:0] C3_v_addr1_reg_1392;
wire   [3:0] j_3_fu_525_p2;
reg   [3:0] j_3_reg_1400;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_213;
wire   [31:0] C3_v_addr8_fu_564_p2;
reg   [31:0] C3_v_addr8_reg_1405;
wire   [0:0] exitcond5_fu_519_p2;
wire   [3:0] k_3_fu_576_p2;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_227;
wire   [0:0] exitcond_flatten3_fu_596_p2;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_4;
reg    ap_sig_bdd_235;
wire   [15:0] indvar_flatten_next3_fu_602_p2;
reg   [15:0] indvar_flatten_next3_reg_1422;
wire   [0:0] exitcond_flatten_fu_608_p2;
reg   [0:0] exitcond_flatten_reg_1427;
wire   [2:0] j_1_mid_fu_614_p3;
reg   [2:0] j_1_mid_reg_1432;
wire   [0:0] exitcond_flatten15_mid_fu_658_p2;
reg   [0:0] exitcond_flatten15_mid_reg_1438;
wire   [4:0] i_1_mid2_fu_670_p3;
reg   [4:0] i_1_mid2_reg_1444;
wire   [0:0] tmp_36_fu_678_p2;
reg   [0:0] tmp_36_reg_1451;
wire   [0:0] exitcond4_mid1_fu_696_p2;
reg   [0:0] exitcond4_mid1_reg_1457;
wire   [0:0] exitcond_flatten_mid1_fu_702_p2;
reg   [0:0] exitcond_flatten_mid1_reg_1462;
wire   [0:0] not_exitcond_flatten_mid_fu_708_p2;
reg   [0:0] not_exitcond_flatten_mid_reg_1469;
wire   [9:0] indvar_flatten_next1_fu_720_p3;
reg   [9:0] indvar_flatten_next1_reg_1474;
wire   [11:0] indvar_flatten_next2_fu_734_p3;
reg   [11:0] indvar_flatten_next2_reg_1479;
wire   [2:0] j_1_mid2_fu_754_p3;
reg   [2:0] j_1_mid2_reg_1484;
wire   [3:0] k_1_mid2_fu_787_p3;
reg   [3:0] k_1_mid2_reg_1489;
wire   [3:0] m_mid2_fu_818_p3;
reg   [3:0] m_mid2_reg_1494;
wire   [8:0] C3_v_addr3_fu_874_p2;
reg   [8:0] C3_v_addr3_reg_1504;
wire  signed [8:0] S2_y_addr6_fu_922_p2;
reg  signed [8:0] S2_y_addr6_reg_1510;
wire  signed [31:0] C3_mapData_addr4_fu_970_p2;
reg  signed [31:0] C3_mapData_addr4_reg_1516;
wire   [2:0] n_1_fu_976_p2;
reg   [2:0] n_1_reg_1522;
wire   [6:0] indvar_flatten_next_fu_988_p3;
reg   [6:0] indvar_flatten_next_reg_1527;
reg   [10:0] C3_v_addr_2_reg_1532;
reg    ap_sig_cseq_ST_pp0_stg2_fsm_6;
reg    ap_sig_bdd_290;
reg   [10:0] ap_reg_ppstg_C3_v_addr_2_reg_1532_pp0_it1;
wire  signed [31:0] S2_y_addr7_fu_1065_p2;
reg  signed [31:0] S2_y_addr7_reg_1537;
wire  signed [31:0] C3_mapData_addr5_fu_1087_p2;
reg  signed [31:0] C3_mapData_addr5_reg_1549;
reg    ap_sig_cseq_ST_pp0_stg3_fsm_7;
reg    ap_sig_bdd_313;
reg   [31:0] S2_y_load_1_reg_1581;
reg   [31:0] C3_mapData_load_1_reg_1586;
wire  signed [31:0] S2_y_addr4_fu_1196_p2;
reg  signed [31:0] S2_y_addr4_reg_1611;
reg   [31:0] S2_y_load_2_reg_1616;
reg    ap_sig_cseq_ST_pp0_stg4_fsm_8;
reg    ap_sig_bdd_335;
reg   [31:0] C3_mapData_load_2_reg_1621;
reg   [31:0] S2_y_load_3_reg_1626;
reg   [31:0] C3_mapData_load_3_reg_1631;
reg   [31:0] S2_y_load_4_reg_1646;
reg    ap_sig_cseq_ST_pp0_stg5_fsm_9;
reg    ap_sig_bdd_351;
reg   [31:0] C3_mapData_load_4_reg_1651;
wire   [31:0] grp_fu_455_p2;
reg   [31:0] tmp_21_reg_1656;
reg    ap_sig_cseq_ST_pp0_stg6_fsm_10;
reg    ap_sig_bdd_362;
reg   [31:0] tmp_71_1_reg_1661;
reg   [31:0] tmp_71_2_reg_1666;
reg    ap_sig_cseq_ST_pp0_stg8_fsm_12;
reg    ap_sig_bdd_372;
reg   [31:0] tmp_71_3_reg_1671;
reg    ap_sig_cseq_ST_pp0_stg9_fsm_13;
reg    ap_sig_bdd_381;
reg   [31:0] tmp_71_4_reg_1676;
reg    ap_sig_cseq_ST_pp0_stg10_fsm_14;
reg    ap_sig_bdd_390;
wire   [4:0] i_4_fu_1215_p2;
reg   [4:0] i_4_reg_1684;
reg    ap_sig_cseq_ST_st33_fsm_26;
reg    ap_sig_bdd_400;
wire   [0:0] exitcond2_fu_1209_p2;
reg   [31:0] C3_bias_load_reg_1694;
reg    ap_sig_cseq_ST_st34_fsm_27;
reg    ap_sig_bdd_413;
wire   [8:0] C3_v_addr9_fu_1250_p2;
reg   [8:0] C3_v_addr9_reg_1699;
wire   [3:0] j_5_fu_1262_p2;
reg   [3:0] j_5_reg_1707;
reg    ap_sig_cseq_ST_st35_fsm_28;
reg    ap_sig_bdd_424;
wire   [31:0] C3_v_addr11_fu_1301_p2;
reg   [31:0] C3_v_addr11_reg_1712;
wire   [0:0] exitcond1_fu_1256_p2;
wire   [3:0] k_4_fu_1313_p2;
reg   [3:0] k_4_reg_1720;
reg    ap_sig_cseq_ST_st36_fsm_29;
reg    ap_sig_bdd_438;
wire   [63:0] tmp_69_fu_1328_p1;
reg   [63:0] tmp_69_reg_1725;
wire   [0:0] exitcond_fu_1307_p2;
wire   [0:0] tmp_26_fu_1369_p2;
reg   [0:0] tmp_26_reg_1735;
reg    ap_sig_cseq_ST_st43_fsm_36;
reg    ap_sig_bdd_454;
reg    ap_sig_cseq_ST_pp0_stg21_fsm_25;
reg    ap_sig_bdd_465;
reg   [4:0] i_reg_278;
reg   [3:0] j_reg_289;
wire   [0:0] exitcond9_fu_570_p2;
reg   [3:0] k_reg_300;
reg   [15:0] indvar_flatten1_phi_fu_315_p4;
reg   [4:0] i_1_phi_fu_326_p4;
reg   [11:0] indvar_flatten2_phi_fu_337_p4;
reg   [2:0] j_1_phi_fu_348_p4;
reg   [9:0] indvar_flatten3_phi_fu_359_p4;
reg   [3:0] k_1_phi_fu_370_p4;
reg   [6:0] indvar_flatten_phi_fu_382_p4;
reg   [3:0] m_phi_fu_394_p4;
reg   [2:0] n_phi_fu_406_p4;
reg   [4:0] i_2_reg_414;
reg   [3:0] j_2_reg_426;
reg   [3:0] k_2_reg_437;
reg    ap_sig_cseq_ST_st44_fsm_37;
reg    ap_sig_bdd_523;
wire   [63:0] tmp_68_fu_591_p1;
wire   [63:0] tmp_45_fu_1038_p1;
wire   [63:0] tmp_50_fu_1077_p1;
wire   [63:0] tmp_53_fu_1098_p1;
wire   [63:0] tmp_54_fu_1113_p1;
wire   [63:0] tmp_55_fu_1124_p1;
wire   [63:0] tmp_56_fu_1153_p1;
wire   [63:0] tmp_57_fu_1163_p1;
wire   [63:0] tmp_58_fu_1177_p1;
wire   [63:0] tmp_59_fu_1187_p1;
wire   [63:0] tmp_60_fu_1201_p1;
wire   [63:0] tmp_61_fu_1205_p1;
wire   [63:0] tmp_19_fu_1221_p1;
reg   [31:0] grp_fu_448_p0;
reg   [31:0] grp_fu_448_p1;
reg    ap_sig_cseq_ST_st38_fsm_31;
reg    ap_sig_bdd_571;
reg   [31:0] grp_fu_455_p0;
reg   [31:0] grp_fu_455_p1;
wire   [31:0] tmp_25_fu_461_p0;
wire   [31:0] tmp_25_fu_461_p1;
wire   [7:0] tmp_fu_489_p3;
wire   [5:0] tmp_35_fu_501_p3;
wire   [8:0] p_shl10_cast_fu_509_p1;
wire   [8:0] p_shl_cast_fu_497_p1;
wire   [8:0] tmp_20_trn_cast_fu_531_p1;
wire   [8:0] C3_v_addr7_fu_535_p2;
wire   [11:0] tmp_64_fu_540_p3;
wire   [9:0] tmp_65_fu_552_p3;
wire   [31:0] p_shl6_fu_560_p1;
wire   [31:0] p_shl5_fu_548_p1;
wire   [31:0] tmp_23_trn_fu_582_p1;
wire   [31:0] C3_v_addr10_fu_586_p2;
wire   [0:0] exitcond4_fu_628_p2;
wire   [0:0] not_exitcond_flatten_fu_622_p2;
wire   [0:0] exitcond_flatten1_fu_640_p2;
wire   [0:0] exitcond_flatten2_fu_652_p2;
wire   [4:0] i_s_fu_664_p2;
wire   [0:0] exitcond_flatten15_not_fu_684_p2;
wire   [0:0] exitcond4_mid_fu_634_p2;
wire   [0:0] not_exitcond_flatten15_mid_fu_690_p2;
wire   [0:0] exitcond_flatten_mid_fu_646_p2;
wire   [9:0] indvar_flatten13_op_fu_714_p2;
wire   [11:0] indvar_flatten33_op_fu_728_p2;
wire   [2:0] j_4_fu_742_p2;
wire   [3:0] k_1_mid_fu_747_p3;
wire   [0:0] tmp_37_fu_766_p2;
wire   [0:0] tmp_38_fu_770_p2;
wire   [3:0] k_5_fu_760_p2;
wire   [3:0] m_mid1_fu_775_p3;
wire   [0:0] exitcond4_mid2_fu_783_p2;
wire   [0:0] tmp_39_fu_800_p2;
wire   [0:0] tmp_40_fu_805_p2;
wire   [3:0] m_1_fu_794_p2;
wire   [2:0] n_mid2_fu_810_p3;
wire   [3:0] tmp_38_cast4_fu_826_p1;
wire   [7:0] tmp_41_fu_846_p3;
wire   [5:0] tmp_42_fu_857_p3;
wire   [8:0] p_shl11_cast_fu_853_p1;
wire   [8:0] p_shl12_cast_fu_864_p1;
wire   [8:0] tmp_24_trn_cast_fu_842_p1;
wire   [8:0] C3_v_addr2_fu_868_p2;
wire   [3:0] tmp_s_fu_830_p2;
wire   [6:0] tmp_46_fu_888_p3;
wire   [3:0] tmp_47_fu_900_p3;
wire   [7:0] p_shl15_cast_fu_896_p1;
wire   [7:0] p_shl16_cast_fu_908_p1;
wire   [7:0] S2_y_addr5_fu_912_p2;
wire   [8:0] tmp_32_trn_cast_fu_884_p1;
wire  signed [8:0] S2_y_addr5_cast_fu_918_p1;
wire   [8:0] C3_mapData_addr1_fu_928_p2;
wire   [9:0] tmp_21_trn_cast_fu_880_p1;
wire  signed [9:0] C3_mapData_addr1_cast_fu_934_p1;
wire  signed [9:0] C3_mapData_addr2_fu_938_p2;
wire  signed [2:0] tmp_20_fu_836_p2;
wire   [11:0] tmp_51_fu_952_p3;
wire  signed [31:0] p_shl4_fu_960_p1;
wire  signed [31:0] C3_mapData_addr2_cast_fu_944_p1;
wire   [31:0] tmp_34_trn_fu_948_p1;
wire  signed [31:0] C3_mapData_addr3_fu_964_p2;
wire   [6:0] indvar_flatten_op_fu_982_p2;
wire   [11:0] tmp_43_fu_1004_p3;
wire   [9:0] tmp_44_fu_1015_p3;
wire   [31:0] p_shl_fu_1011_p1;
wire   [31:0] p_shl1_fu_1022_p1;
wire   [31:0] tmp_30_trn_fu_1001_p1;
wire   [31:0] C3_v_addr4_fu_1026_p2;
wire   [31:0] C3_v_addr5_fu_1032_p2;
wire   [12:0] tmp_48_fu_1043_p3;
wire   [9:0] tmp_49_fu_1054_p3;
wire  signed [31:0] p_shl2_fu_1050_p1;
wire  signed [31:0] p_shl3_fu_1061_p1;
wire  signed [31:0] S2_y_addr8_fu_1071_p2;
wire   [31:0] tmp_52_fu_1082_p2;
wire  signed [31:0] C3_mapData_addr6_fu_1092_p2;
wire   [3:0] tmp_67_1_fu_996_p2;
wire   [31:0] tmp_68_1_trn_fu_1103_p1;
wire  signed [31:0] S2_y_addr9_fu_1107_p2;
wire  signed [31:0] C3_mapData_addr7_fu_1118_p2;
wire   [3:0] tmp_67_2_fu_1129_p2;
wire   [31:0] tmp_68_2_trn_fu_1144_p1;
wire  signed [31:0] S2_y_addr2_fu_1148_p2;
wire  signed [31:0] C3_mapData_addr8_fu_1158_p2;
wire   [3:0] tmp_67_3_fu_1134_p2;
wire   [31:0] tmp_68_3_trn_fu_1168_p1;
wire  signed [31:0] S2_y_addr3_fu_1172_p2;
wire  signed [31:0] C3_mapData_addr9_fu_1182_p2;
wire   [3:0] tmp_67_4_fu_1139_p2;
wire   [31:0] tmp_68_4_trn_fu_1192_p1;
wire   [7:0] tmp_62_fu_1226_p3;
wire   [5:0] tmp_63_fu_1238_p3;
wire   [8:0] p_shl26_cast_fu_1246_p1;
wire   [8:0] p_shl25_cast_fu_1234_p1;
wire   [8:0] tmp_22_trn_cast_fu_1268_p1;
wire   [8:0] C3_v_addr6_fu_1272_p2;
wire   [11:0] tmp_66_fu_1277_p3;
wire   [9:0] tmp_67_fu_1289_p3;
wire   [31:0] p_shl8_fu_1297_p1;
wire   [31:0] p_shl7_fu_1285_p1;
wire   [31:0] tmp_25_trn_fu_1319_p1;
wire   [31:0] C3_v_addr12_fu_1323_p2;
wire   [31:0] temp_to_int_fu_1333_p1;
wire   [7:0] tmp_18_fu_1337_p4;
wire   [22:0] tmp_70_fu_1347_p1;
wire   [0:0] notrhs_fu_1357_p2;
wire   [0:0] notlhs_fu_1351_p2;
wire   [0:0] tmp_24_fu_1363_p2;
wire   [0:0] tmp_25_fu_461_p2;
wire    grp_fu_448_ce;
wire    grp_fu_455_ce;
wire   [4:0] tmp_25_fu_461_opcode;
reg   [37:0] ap_NS_fsm;


dateport_C3_conv_C3_v #(
    .DataWidth( 32 ),
    .AddressRange( 1600 ),
    .AddressWidth( 11 ))
C3_v_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( C3_v_address0 ),
    .ce0( C3_v_ce0 ),
    .we0( C3_v_we0 ),
    .d0( C3_v_d0 ),
    .q0( C3_v_q0 )
);

dateport_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dateport_fadd_32ns_32ns_32_5_full_dsp_U12(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_448_p0 ),
    .din1( grp_fu_448_p1 ),
    .ce( grp_fu_448_ce ),
    .dout( grp_fu_448_p2 )
);

dateport_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dateport_fmul_32ns_32ns_32_4_max_dsp_U13(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_455_p0 ),
    .din1( grp_fu_455_p1 ),
    .ce( grp_fu_455_ce ),
    .dout( grp_fu_455_p2 )
);

dateport_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
dateport_fcmp_32ns_32ns_1_1_U14(
    .din0( tmp_25_fu_461_p0 ),
    .din1( tmp_25_fu_461_p1 ),
    .opcode( tmp_25_fu_461_opcode ),
    .dout( tmp_25_fu_461_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & ~(ap_const_lv1_0 == exitcond_flatten3_fu_596_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond3_fu_477_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((exitcond_flatten3_reg_1418 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg21_fsm_25))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond3_fu_477_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg21_fsm_25) & ~(exitcond_flatten3_reg_1418 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond3_fu_477_p2))) begin
        i_1_reg_322 <= ap_const_lv5_0;
    end else if (((exitcond_flatten3_reg_1418 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        i_1_reg_322 <= i_1_mid2_reg_1444;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28) & ~(ap_const_lv1_0 == exitcond1_fu_1256_p2))) begin
        i_2_reg_414 <= i_4_reg_1684;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & ~(ap_const_lv1_0 == exitcond_flatten3_fu_596_p2))) begin
        i_2_reg_414 <= ap_const_lv5_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == exitcond5_fu_519_p2))) begin
        i_reg_278 <= i_3_reg_1387;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_278 <= ap_const_lv5_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond3_fu_477_p2))) begin
        indvar_flatten1_reg_311 <= ap_const_lv16_0;
    end else if (((exitcond_flatten3_reg_1418 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        indvar_flatten1_reg_311 <= indvar_flatten_next3_reg_1422;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond3_fu_477_p2))) begin
        indvar_flatten2_reg_333 <= ap_const_lv12_0;
    end else if (((exitcond_flatten3_reg_1418 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        indvar_flatten2_reg_333 <= indvar_flatten_next2_reg_1479;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond3_fu_477_p2))) begin
        indvar_flatten3_reg_355 <= ap_const_lv10_0;
    end else if (((exitcond_flatten3_reg_1418 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        indvar_flatten3_reg_355 <= indvar_flatten_next1_reg_1474;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond3_fu_477_p2))) begin
        indvar_flatten_reg_378 <= ap_const_lv7_0;
    end else if (((exitcond_flatten3_reg_1418 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        indvar_flatten_reg_378 <= indvar_flatten_next_reg_1527;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond3_fu_477_p2))) begin
        j_1_reg_344 <= ap_const_lv3_0;
    end else if (((exitcond_flatten3_reg_1418 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        j_1_reg_344 <= j_1_mid2_reg_1484;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_29) & ~(ap_const_lv1_0 == exitcond_fu_1307_p2))) begin
        j_2_reg_426 <= j_5_reg_1707;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        j_2_reg_426 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == exitcond9_fu_570_p2))) begin
        j_reg_289 <= j_3_reg_1400;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond3_fu_477_p2))) begin
        j_reg_289 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond3_fu_477_p2))) begin
        k_1_reg_366 <= ap_const_lv4_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten3_reg_1418_pp0_it1))) begin
        k_1_reg_366 <= k_1_mid2_reg_1489;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28) & (ap_const_lv1_0 == exitcond1_fu_1256_p2))) begin
        k_2_reg_437 <= ap_const_lv4_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_37)) begin
        k_2_reg_437 <= k_4_reg_1720;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond5_fu_519_p2))) begin
        k_reg_300 <= ap_const_lv4_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == exitcond9_fu_570_p2))) begin
        k_reg_300 <= k_3_fu_576_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond3_fu_477_p2))) begin
        m_reg_390 <= ap_const_lv4_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten3_reg_1418_pp0_it1))) begin
        m_reg_390 <= m_mid2_reg_1494;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond3_fu_477_p2))) begin
        n_reg_402 <= ap_const_lv3_0;
    end else if (((exitcond_flatten3_reg_1418 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        n_reg_402 <= n_1_reg_1522;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_27)) begin
        C3_bias_load_reg_1694 <= C3_bias_q0;
        C3_v_addr9_reg_1699[8 : 1] <= C3_v_addr9_fu_1250_p2[8 : 1];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten3_reg_1418 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5))) begin
        C3_mapData_addr4_reg_1516 <= C3_mapData_addr4_fu_970_p2;
        C3_v_addr3_reg_1504 <= C3_v_addr3_fu_874_p2;
        S2_y_addr6_reg_1510 <= S2_y_addr6_fu_922_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten3_reg_1418 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6))) begin
        C3_mapData_addr5_reg_1549 <= C3_mapData_addr5_fu_1087_p2;
        C3_v_addr_2_reg_1532 <= tmp_45_fu_1038_p1;
        S2_y_addr7_reg_1537[31 : 1] <= S2_y_addr7_fu_1065_p2[31 : 1];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten3_reg_1418 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7))) begin
        C3_mapData_load_1_reg_1586 <= C3_mapData_q1;
        S2_y_addr4_reg_1611 <= S2_y_addr4_fu_1196_p2;
        S2_y_load_1_reg_1581 <= S2_y_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten3_reg_1418 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8))) begin
        C3_mapData_load_2_reg_1621 <= C3_mapData_q0;
        C3_mapData_load_3_reg_1631 <= C3_mapData_q1;
        S2_y_load_2_reg_1616 <= S2_y_q0;
        S2_y_load_3_reg_1626 <= S2_y_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten3_reg_1418 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_9))) begin
        C3_mapData_load_4_reg_1651 <= C3_mapData_q0;
        S2_y_load_4_reg_1646 <= S2_y_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28) & (ap_const_lv1_0 == exitcond1_fu_1256_p2))) begin
        C3_v_addr11_reg_1712[31 : 1] <= C3_v_addr11_fu_1301_p2[31 : 1];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond3_fu_477_p2))) begin
        C3_v_addr1_reg_1392[8 : 1] <= C3_v_addr1_fu_513_p2[8 : 1];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond5_fu_519_p2))) begin
        C3_v_addr8_reg_1405[31 : 1] <= C3_v_addr8_fu_564_p2[31 : 1];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6)) begin
        ap_reg_ppstg_C3_v_addr_2_reg_1532_pp0_it1 <= C3_v_addr_2_reg_1532;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4)) begin
        ap_reg_ppstg_exitcond_flatten3_reg_1418_pp0_it1 <= exitcond_flatten3_reg_1418;
        exitcond_flatten3_reg_1418 <= exitcond_flatten3_fu_596_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_lv1_0 == exitcond_flatten3_fu_596_p2))) begin
        exitcond4_mid1_reg_1457 <= exitcond4_mid1_fu_696_p2;
        exitcond_flatten15_mid_reg_1438 <= exitcond_flatten15_mid_fu_658_p2;
        exitcond_flatten_mid1_reg_1462 <= exitcond_flatten_mid1_fu_702_p2;
        exitcond_flatten_reg_1427 <= exitcond_flatten_fu_608_p2;
        j_1_mid_reg_1432 <= j_1_mid_fu_614_p3;
        not_exitcond_flatten_mid_reg_1469 <= not_exitcond_flatten_mid_fu_708_p2;
        tmp_36_reg_1451 <= tmp_36_fu_678_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_lv1_0 == exitcond_flatten3_fu_596_p2))) begin
        i_1_mid2_reg_1444 <= i_1_mid2_fu_670_p3;
        indvar_flatten_next1_reg_1474 <= indvar_flatten_next1_fu_720_p3;
        indvar_flatten_next2_reg_1479 <= indvar_flatten_next2_fu_734_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_3_reg_1387 <= i_3_fu_483_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_26)) begin
        i_4_reg_1684 <= i_4_fu_1215_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        indvar_flatten_next3_reg_1422 <= indvar_flatten_next3_fu_602_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_flatten3_reg_1418 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5))) begin
        indvar_flatten_next_reg_1527 <= indvar_flatten_next_fu_988_p3;
        j_1_mid2_reg_1484 <= j_1_mid2_fu_754_p3;
        k_1_mid2_reg_1489 <= k_1_mid2_fu_787_p3;
        m_mid2_reg_1494 <= m_mid2_fu_818_p3;
        n_1_reg_1522 <= n_1_fu_976_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        j_3_reg_1400 <= j_3_fu_525_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_28)) begin
        j_5_reg_1707 <= j_5_fu_1262_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_29)) begin
        k_4_reg_1720 <= k_4_fu_1313_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_11) & (exitcond_flatten3_reg_1418 == ap_const_lv1_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_30))) begin
        reg_466 <= C3_v_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((exitcond_flatten3_reg_1418 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg11_fsm_15)) | ((exitcond_flatten3_reg_1418 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg15_fsm_19)) | ((exitcond_flatten3_reg_1418 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg19_fsm_23)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten3_reg_1418_pp0_it1)) | (ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_35))) begin
        reg_471 <= grp_fu_448_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten3_reg_1418 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_10))) begin
        tmp_21_reg_1656 <= grp_fu_455_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_36)) begin
        tmp_26_reg_1735 <= tmp_26_fu_1369_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_29) & (ap_const_lv1_0 == exitcond_fu_1307_p2))) begin
        tmp_69_reg_1725[31 : 0] <= tmp_69_fu_1328_p1[31 : 0];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_11) & (exitcond_flatten3_reg_1418 == ap_const_lv1_0))) begin
        tmp_71_1_reg_1661 <= grp_fu_455_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten3_reg_1418 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_12))) begin
        tmp_71_2_reg_1666 <= grp_fu_455_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten3_reg_1418 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg9_fsm_13))) begin
        tmp_71_3_reg_1671 <= grp_fu_455_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten3_reg_1418 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg10_fsm_14))) begin
        tmp_71_4_reg_1676 <= grp_fu_455_p2;
    end
end

/// C3_bias_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st33_fsm_26)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_26)) begin
        C3_bias_ce0 = ap_const_logic_1;
    end else begin
        C3_bias_ce0 = ap_const_logic_0;
    end
end

/// C3_mapData_address0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_sig_cseq_ST_pp0_stg3_fsm_7 or ap_sig_cseq_ST_pp0_stg4_fsm_8 or tmp_53_fu_1098_p1 or tmp_57_fu_1163_p1 or tmp_61_fu_1205_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8)) begin
            C3_mapData_address0 = tmp_61_fu_1205_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)) begin
            C3_mapData_address0 = tmp_57_fu_1163_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6)) begin
            C3_mapData_address0 = tmp_53_fu_1098_p1;
        end else begin
            C3_mapData_address0 = 'bx;
        end
    end else begin
        C3_mapData_address0 = 'bx;
    end
end

/// C3_mapData_address1 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_sig_cseq_ST_pp0_stg3_fsm_7 or tmp_55_fu_1124_p1 or tmp_59_fu_1187_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)) begin
            C3_mapData_address1 = tmp_59_fu_1187_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6)) begin
            C3_mapData_address1 = tmp_55_fu_1124_p1;
        end else begin
            C3_mapData_address1 = 'bx;
        end
    end else begin
        C3_mapData_address1 = 'bx;
    end
end

/// C3_mapData_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_sig_cseq_ST_pp0_stg3_fsm_7 or ap_sig_cseq_ST_pp0_stg4_fsm_8)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8)))) begin
        C3_mapData_ce0 = ap_const_logic_1;
    end else begin
        C3_mapData_ce0 = ap_const_logic_0;
    end
end

/// C3_mapData_ce1 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_sig_cseq_ST_pp0_stg3_fsm_7)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)))) begin
        C3_mapData_ce1 = ap_const_logic_1;
    end else begin
        C3_mapData_ce1 = ap_const_logic_0;
    end
end

/// C3_v_address0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_st4_fsm_3 or C3_v_addr_2_reg_1532 or ap_reg_ppstg_C3_v_addr_2_reg_1532_pp0_it1 or ap_sig_cseq_ST_pp0_stg5_fsm_9 or ap_sig_cseq_ST_pp0_stg6_fsm_10 or ap_sig_cseq_ST_st36_fsm_29 or tmp_69_fu_1328_p1 or tmp_68_fu_591_p1)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_9))) begin
        C3_v_address0 = ap_reg_ppstg_C3_v_addr_2_reg_1532_pp0_it1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        C3_v_address0 = tmp_68_fu_591_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_29)) begin
        C3_v_address0 = tmp_69_fu_1328_p1;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_10))) begin
        C3_v_address0 = C3_v_addr_2_reg_1532;
    end else begin
        C3_v_address0 = 'bx;
    end
end

/// C3_v_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_pp0_stg5_fsm_9 or ap_sig_cseq_ST_pp0_stg6_fsm_10 or ap_sig_cseq_ST_st36_fsm_29)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_29) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_10)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_9)))) begin
        C3_v_ce0 = ap_const_logic_1;
    end else begin
        C3_v_ce0 = ap_const_logic_0;
    end
end

/// C3_v_d0 assign process. ///
always @ (grp_fu_448_p2 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_pp0_stg5_fsm_9)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_9))) begin
        C3_v_d0 = grp_fu_448_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        C3_v_d0 = ap_const_lv32_0;
    end else begin
        C3_v_d0 = 'bx;
    end
end

/// C3_v_we0 assign process. ///
always @ (ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond_flatten3_reg_1418_pp0_it1 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_pp0_stg5_fsm_9 or exitcond9_fu_570_p2)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == exitcond9_fu_570_p2)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten3_reg_1418_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_9)))) begin
        C3_v_we0 = ap_const_logic_1;
    end else begin
        C3_v_we0 = ap_const_logic_0;
    end
end

/// C3_y_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st44_fsm_37)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_37)) begin
        C3_y_ce0 = ap_const_logic_1;
    end else begin
        C3_y_ce0 = ap_const_logic_0;
    end
end

/// C3_y_we0 assign process. ///
always @ (ap_sig_cseq_ST_st44_fsm_37)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st44_fsm_37)) begin
        C3_y_we0 = ap_const_logic_1;
    end else begin
        C3_y_we0 = ap_const_logic_0;
    end
end

/// S2_y_address0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_sig_cseq_ST_pp0_stg3_fsm_7 or ap_sig_cseq_ST_pp0_stg4_fsm_8 or tmp_50_fu_1077_p1 or tmp_56_fu_1153_p1 or tmp_60_fu_1201_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8)) begin
            S2_y_address0 = tmp_60_fu_1201_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)) begin
            S2_y_address0 = tmp_56_fu_1153_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6)) begin
            S2_y_address0 = tmp_50_fu_1077_p1;
        end else begin
            S2_y_address0 = 'bx;
        end
    end else begin
        S2_y_address0 = 'bx;
    end
end

/// S2_y_address1 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_sig_cseq_ST_pp0_stg3_fsm_7 or tmp_54_fu_1113_p1 or tmp_58_fu_1177_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)) begin
            S2_y_address1 = tmp_58_fu_1177_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6)) begin
            S2_y_address1 = tmp_54_fu_1113_p1;
        end else begin
            S2_y_address1 = 'bx;
        end
    end else begin
        S2_y_address1 = 'bx;
    end
end

/// S2_y_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_sig_cseq_ST_pp0_stg3_fsm_7 or ap_sig_cseq_ST_pp0_stg4_fsm_8)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8)))) begin
        S2_y_ce0 = ap_const_logic_1;
    end else begin
        S2_y_ce0 = ap_const_logic_0;
    end
end

/// S2_y_ce1 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_sig_cseq_ST_pp0_stg3_fsm_7)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)))) begin
        S2_y_ce1 = ap_const_logic_1;
    end else begin
        S2_y_ce1 = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st33_fsm_26 or exitcond2_fu_1209_p2)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_26) & ~(ap_const_lv1_0 == exitcond2_fu_1209_p2)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st33_fsm_26 or exitcond2_fu_1209_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_26) & ~(ap_const_lv1_0 == exitcond2_fu_1209_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_4 assign process. ///
always @ (ap_sig_bdd_235)
begin
    if (ap_sig_bdd_235) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg10_fsm_14 assign process. ///
always @ (ap_sig_bdd_390)
begin
    if (ap_sig_bdd_390) begin
        ap_sig_cseq_ST_pp0_stg10_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg10_fsm_14 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg11_fsm_15 assign process. ///
always @ (ap_sig_bdd_149)
begin
    if (ap_sig_bdd_149) begin
        ap_sig_cseq_ST_pp0_stg11_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg11_fsm_15 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg15_fsm_19 assign process. ///
always @ (ap_sig_bdd_157)
begin
    if (ap_sig_bdd_157) begin
        ap_sig_cseq_ST_pp0_stg15_fsm_19 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg15_fsm_19 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg19_fsm_23 assign process. ///
always @ (ap_sig_bdd_166)
begin
    if (ap_sig_bdd_166) begin
        ap_sig_cseq_ST_pp0_stg19_fsm_23 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg19_fsm_23 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg1_fsm_5 assign process. ///
always @ (ap_sig_bdd_175)
begin
    if (ap_sig_bdd_175) begin
        ap_sig_cseq_ST_pp0_stg1_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg1_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg21_fsm_25 assign process. ///
always @ (ap_sig_bdd_465)
begin
    if (ap_sig_bdd_465) begin
        ap_sig_cseq_ST_pp0_stg21_fsm_25 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg21_fsm_25 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg2_fsm_6 assign process. ///
always @ (ap_sig_bdd_290)
begin
    if (ap_sig_bdd_290) begin
        ap_sig_cseq_ST_pp0_stg2_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg2_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg3_fsm_7 assign process. ///
always @ (ap_sig_bdd_313)
begin
    if (ap_sig_bdd_313) begin
        ap_sig_cseq_ST_pp0_stg3_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg3_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg4_fsm_8 assign process. ///
always @ (ap_sig_bdd_335)
begin
    if (ap_sig_bdd_335) begin
        ap_sig_cseq_ST_pp0_stg4_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg4_fsm_8 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg5_fsm_9 assign process. ///
always @ (ap_sig_bdd_351)
begin
    if (ap_sig_bdd_351) begin
        ap_sig_cseq_ST_pp0_stg5_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg5_fsm_9 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg6_fsm_10 assign process. ///
always @ (ap_sig_bdd_362)
begin
    if (ap_sig_bdd_362) begin
        ap_sig_cseq_ST_pp0_stg6_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg6_fsm_10 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg7_fsm_11 assign process. ///
always @ (ap_sig_bdd_126)
begin
    if (ap_sig_bdd_126) begin
        ap_sig_cseq_ST_pp0_stg7_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg7_fsm_11 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg8_fsm_12 assign process. ///
always @ (ap_sig_bdd_372)
begin
    if (ap_sig_bdd_372) begin
        ap_sig_cseq_ST_pp0_stg8_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg8_fsm_12 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg9_fsm_13 assign process. ///
always @ (ap_sig_bdd_381)
begin
    if (ap_sig_bdd_381) begin
        ap_sig_cseq_ST_pp0_stg9_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg9_fsm_13 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_56)
begin
    if (ap_sig_bdd_56) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_198)
begin
    if (ap_sig_bdd_198) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st33_fsm_26 assign process. ///
always @ (ap_sig_bdd_400)
begin
    if (ap_sig_bdd_400) begin
        ap_sig_cseq_ST_st33_fsm_26 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_26 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st34_fsm_27 assign process. ///
always @ (ap_sig_bdd_413)
begin
    if (ap_sig_bdd_413) begin
        ap_sig_cseq_ST_st34_fsm_27 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st34_fsm_27 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st35_fsm_28 assign process. ///
always @ (ap_sig_bdd_424)
begin
    if (ap_sig_bdd_424) begin
        ap_sig_cseq_ST_st35_fsm_28 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st35_fsm_28 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st36_fsm_29 assign process. ///
always @ (ap_sig_bdd_438)
begin
    if (ap_sig_bdd_438) begin
        ap_sig_cseq_ST_st36_fsm_29 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st36_fsm_29 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st37_fsm_30 assign process. ///
always @ (ap_sig_bdd_139)
begin
    if (ap_sig_bdd_139) begin
        ap_sig_cseq_ST_st37_fsm_30 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st37_fsm_30 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st38_fsm_31 assign process. ///
always @ (ap_sig_bdd_571)
begin
    if (ap_sig_bdd_571) begin
        ap_sig_cseq_ST_st38_fsm_31 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st38_fsm_31 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_213)
begin
    if (ap_sig_bdd_213) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st42_fsm_35 assign process. ///
always @ (ap_sig_bdd_188)
begin
    if (ap_sig_bdd_188) begin
        ap_sig_cseq_ST_st42_fsm_35 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st42_fsm_35 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st43_fsm_36 assign process. ///
always @ (ap_sig_bdd_454)
begin
    if (ap_sig_bdd_454) begin
        ap_sig_cseq_ST_st43_fsm_36 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st43_fsm_36 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st44_fsm_37 assign process. ///
always @ (ap_sig_bdd_523)
begin
    if (ap_sig_bdd_523) begin
        ap_sig_cseq_ST_st44_fsm_37 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st44_fsm_37 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_227)
begin
    if (ap_sig_bdd_227) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// grp_fu_448_p0 assign process. ///
always @ (C3_v_q0 or reg_466 or ap_sig_cseq_ST_pp0_stg7_fsm_11 or ap_reg_ppiten_pp0_it0 or grp_fu_448_p2 or ap_sig_cseq_ST_pp0_stg11_fsm_15 or ap_sig_cseq_ST_pp0_stg15_fsm_19 or ap_sig_cseq_ST_pp0_stg19_fsm_23 or ap_sig_cseq_ST_pp0_stg1_fsm_5 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_st38_fsm_31)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_31)) begin
        grp_fu_448_p0 = reg_466;
    end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg11_fsm_15)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg15_fsm_19)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg19_fsm_23)))) begin
        grp_fu_448_p0 = grp_fu_448_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_11) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        grp_fu_448_p0 = C3_v_q0;
    end else begin
        grp_fu_448_p0 = 'bx;
    end
end

/// grp_fu_448_p1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg7_fsm_11 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg11_fsm_15 or ap_sig_cseq_ST_pp0_stg15_fsm_19 or ap_sig_cseq_ST_pp0_stg19_fsm_23 or ap_sig_cseq_ST_pp0_stg1_fsm_5 or ap_reg_ppiten_pp0_it1 or tmp_21_reg_1656 or tmp_71_1_reg_1661 or tmp_71_2_reg_1666 or tmp_71_3_reg_1671 or tmp_71_4_reg_1676 or C3_bias_load_reg_1694 or ap_sig_cseq_ST_st38_fsm_31)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_31)) begin
        grp_fu_448_p1 = C3_bias_load_reg_1694;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        grp_fu_448_p1 = tmp_71_4_reg_1676;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg19_fsm_23))) begin
        grp_fu_448_p1 = tmp_71_3_reg_1671;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg15_fsm_19))) begin
        grp_fu_448_p1 = tmp_71_2_reg_1666;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg11_fsm_15))) begin
        grp_fu_448_p1 = tmp_71_1_reg_1661;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_11) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        grp_fu_448_p1 = tmp_21_reg_1656;
    end else begin
        grp_fu_448_p1 = 'bx;
    end
end

/// grp_fu_455_p0 assign process. ///
always @ (S2_y_q0 or ap_sig_cseq_ST_pp0_stg7_fsm_11 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg3_fsm_7 or S2_y_load_1_reg_1581 or S2_y_load_2_reg_1616 or ap_sig_cseq_ST_pp0_stg4_fsm_8 or S2_y_load_3_reg_1626 or S2_y_load_4_reg_1646 or ap_sig_cseq_ST_pp0_stg5_fsm_9 or ap_sig_cseq_ST_pp0_stg6_fsm_10)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_11)) begin
            grp_fu_455_p0 = S2_y_load_4_reg_1646;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_10)) begin
            grp_fu_455_p0 = S2_y_load_3_reg_1626;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_9)) begin
            grp_fu_455_p0 = S2_y_load_2_reg_1616;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8)) begin
            grp_fu_455_p0 = S2_y_load_1_reg_1581;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)) begin
            grp_fu_455_p0 = S2_y_q0;
        end else begin
            grp_fu_455_p0 = 'bx;
        end
    end else begin
        grp_fu_455_p0 = 'bx;
    end
end

/// grp_fu_455_p1 assign process. ///
always @ (C3_mapData_q0 or ap_sig_cseq_ST_pp0_stg7_fsm_11 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg3_fsm_7 or C3_mapData_load_1_reg_1586 or ap_sig_cseq_ST_pp0_stg4_fsm_8 or C3_mapData_load_2_reg_1621 or C3_mapData_load_3_reg_1631 or ap_sig_cseq_ST_pp0_stg5_fsm_9 or C3_mapData_load_4_reg_1651 or ap_sig_cseq_ST_pp0_stg6_fsm_10)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_11)) begin
            grp_fu_455_p1 = C3_mapData_load_4_reg_1651;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_10)) begin
            grp_fu_455_p1 = C3_mapData_load_3_reg_1631;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_9)) begin
            grp_fu_455_p1 = C3_mapData_load_2_reg_1621;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8)) begin
            grp_fu_455_p1 = C3_mapData_load_1_reg_1586;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)) begin
            grp_fu_455_p1 = C3_mapData_q0;
        end else begin
            grp_fu_455_p1 = 'bx;
        end
    end else begin
        grp_fu_455_p1 = 'bx;
    end
end

/// i_1_phi_fu_326_p4 assign process. ///
always @ (i_1_reg_322 or exitcond_flatten3_reg_1418 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or i_1_mid2_reg_1444)
begin
    if (((exitcond_flatten3_reg_1418 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        i_1_phi_fu_326_p4 = i_1_mid2_reg_1444;
    end else begin
        i_1_phi_fu_326_p4 = i_1_reg_322;
    end
end

/// indvar_flatten1_phi_fu_315_p4 assign process. ///
always @ (indvar_flatten1_reg_311 or exitcond_flatten3_reg_1418 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or indvar_flatten_next3_reg_1422)
begin
    if (((exitcond_flatten3_reg_1418 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        indvar_flatten1_phi_fu_315_p4 = indvar_flatten_next3_reg_1422;
    end else begin
        indvar_flatten1_phi_fu_315_p4 = indvar_flatten1_reg_311;
    end
end

/// indvar_flatten2_phi_fu_337_p4 assign process. ///
always @ (indvar_flatten2_reg_333 or exitcond_flatten3_reg_1418 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or indvar_flatten_next2_reg_1479)
begin
    if (((exitcond_flatten3_reg_1418 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        indvar_flatten2_phi_fu_337_p4 = indvar_flatten_next2_reg_1479;
    end else begin
        indvar_flatten2_phi_fu_337_p4 = indvar_flatten2_reg_333;
    end
end

/// indvar_flatten3_phi_fu_359_p4 assign process. ///
always @ (indvar_flatten3_reg_355 or exitcond_flatten3_reg_1418 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or indvar_flatten_next1_reg_1474)
begin
    if (((exitcond_flatten3_reg_1418 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        indvar_flatten3_phi_fu_359_p4 = indvar_flatten_next1_reg_1474;
    end else begin
        indvar_flatten3_phi_fu_359_p4 = indvar_flatten3_reg_355;
    end
end

/// indvar_flatten_phi_fu_382_p4 assign process. ///
always @ (indvar_flatten_reg_378 or exitcond_flatten3_reg_1418 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or indvar_flatten_next_reg_1527)
begin
    if (((exitcond_flatten3_reg_1418 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        indvar_flatten_phi_fu_382_p4 = indvar_flatten_next_reg_1527;
    end else begin
        indvar_flatten_phi_fu_382_p4 = indvar_flatten_reg_378;
    end
end

/// j_1_phi_fu_348_p4 assign process. ///
always @ (j_1_reg_344 or exitcond_flatten3_reg_1418 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or j_1_mid2_reg_1484)
begin
    if (((exitcond_flatten3_reg_1418 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        j_1_phi_fu_348_p4 = j_1_mid2_reg_1484;
    end else begin
        j_1_phi_fu_348_p4 = j_1_reg_344;
    end
end

/// k_1_phi_fu_370_p4 assign process. ///
always @ (k_1_reg_366 or ap_sig_cseq_ST_pp0_stg1_fsm_5 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond_flatten3_reg_1418_pp0_it1 or k_1_mid2_reg_1489)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten3_reg_1418_pp0_it1))) begin
        k_1_phi_fu_370_p4 = k_1_mid2_reg_1489;
    end else begin
        k_1_phi_fu_370_p4 = k_1_reg_366;
    end
end

/// m_phi_fu_394_p4 assign process. ///
always @ (m_reg_390 or ap_sig_cseq_ST_pp0_stg1_fsm_5 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond_flatten3_reg_1418_pp0_it1 or m_mid2_reg_1494)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten3_reg_1418_pp0_it1))) begin
        m_phi_fu_394_p4 = m_mid2_reg_1494;
    end else begin
        m_phi_fu_394_p4 = m_reg_390;
    end
end

/// n_phi_fu_406_p4 assign process. ///
always @ (n_reg_402 or exitcond_flatten3_reg_1418 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or n_1_reg_1522)
begin
    if (((exitcond_flatten3_reg_1418 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        n_phi_fu_406_p4 = n_1_reg_1522;
    end else begin
        n_phi_fu_406_p4 = n_reg_402;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or exitcond3_fu_477_p2 or exitcond5_fu_519_p2 or exitcond_flatten3_fu_596_p2 or ap_sig_cseq_ST_pp0_stg5_fsm_9 or exitcond2_fu_1209_p2 or exitcond1_fu_1256_p2 or exitcond_fu_1307_p2 or exitcond9_fu_570_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if ((ap_const_lv1_0 == exitcond3_fu_477_p2)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_4;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if ((ap_const_lv1_0 == exitcond5_fu_519_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            if ((ap_const_lv1_0 == exitcond9_fu_570_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_pp0_stg0_fsm_4 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond_flatten3_fu_596_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st33_fsm_26;
            end
        end
        ap_ST_pp0_stg1_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg2_fsm_6;
        end
        ap_ST_pp0_stg2_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg3_fsm_7;
        end
        ap_ST_pp0_stg3_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg4_fsm_8;
        end
        ap_ST_pp0_stg4_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg5_fsm_9;
        end
        ap_ST_pp0_stg5_fsm_9 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_9) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
                ap_NS_fsm = ap_ST_pp0_stg6_fsm_10;
            end else begin
                ap_NS_fsm = ap_ST_st33_fsm_26;
            end
        end
        ap_ST_pp0_stg6_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg7_fsm_11;
        end
        ap_ST_pp0_stg7_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg8_fsm_12;
        end
        ap_ST_pp0_stg8_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg9_fsm_13;
        end
        ap_ST_pp0_stg9_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg10_fsm_14;
        end
        ap_ST_pp0_stg10_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg11_fsm_15;
        end
        ap_ST_pp0_stg11_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg12_fsm_16;
        end
        ap_ST_pp0_stg12_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg13_fsm_17;
        end
        ap_ST_pp0_stg13_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg14_fsm_18;
        end
        ap_ST_pp0_stg14_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg15_fsm_19;
        end
        ap_ST_pp0_stg15_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg16_fsm_20;
        end
        ap_ST_pp0_stg16_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg17_fsm_21;
        end
        ap_ST_pp0_stg17_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg18_fsm_22;
        end
        ap_ST_pp0_stg18_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg19_fsm_23;
        end
        ap_ST_pp0_stg19_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg20_fsm_24;
        end
        ap_ST_pp0_stg20_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg21_fsm_25;
        end
        ap_ST_pp0_stg21_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_4;
        end
        ap_ST_st33_fsm_26 : 
        begin
            if (~(ap_const_lv1_0 == exitcond2_fu_1209_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st34_fsm_27;
            end
        end
        ap_ST_st34_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st35_fsm_28;
        end
        ap_ST_st35_fsm_28 : 
        begin
            if ((ap_const_lv1_0 == exitcond1_fu_1256_p2)) begin
                ap_NS_fsm = ap_ST_st36_fsm_29;
            end else begin
                ap_NS_fsm = ap_ST_st33_fsm_26;
            end
        end
        ap_ST_st36_fsm_29 : 
        begin
            if ((ap_const_lv1_0 == exitcond_fu_1307_p2)) begin
                ap_NS_fsm = ap_ST_st37_fsm_30;
            end else begin
                ap_NS_fsm = ap_ST_st35_fsm_28;
            end
        end
        ap_ST_st37_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_st38_fsm_31;
        end
        ap_ST_st38_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st39_fsm_32;
        end
        ap_ST_st39_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_33;
        end
        ap_ST_st40_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_st41_fsm_34;
        end
        ap_ST_st41_fsm_34 : 
        begin
            ap_NS_fsm = ap_ST_st42_fsm_35;
        end
        ap_ST_st42_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_st43_fsm_36;
        end
        ap_ST_st43_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st44_fsm_37;
        end
        ap_ST_st44_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st36_fsm_29;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C3_bias_address0 = tmp_19_fu_1221_p1;
assign C3_mapData_addr1_cast_fu_934_p1 = $signed(C3_mapData_addr1_fu_928_p2);
assign C3_mapData_addr1_fu_928_p2 = (p_shl11_cast_fu_853_p1 - p_shl12_cast_fu_864_p1);
assign C3_mapData_addr2_cast_fu_944_p1 = C3_mapData_addr2_fu_938_p2;
assign C3_mapData_addr2_fu_938_p2 = ($signed(tmp_21_trn_cast_fu_880_p1) + $signed(C3_mapData_addr1_cast_fu_934_p1));
assign C3_mapData_addr3_fu_964_p2 = ($signed(p_shl4_fu_960_p1) + $signed(C3_mapData_addr2_cast_fu_944_p1));
assign C3_mapData_addr4_fu_970_p2 = ($signed(tmp_34_trn_fu_948_p1) + $signed(C3_mapData_addr3_fu_964_p2));
assign C3_mapData_addr5_fu_1087_p2 = ($signed(tmp_52_fu_1082_p2) + $signed(C3_mapData_addr4_reg_1516));
assign C3_mapData_addr6_fu_1092_p2 = ($signed(ap_const_lv32_4) + $signed(C3_mapData_addr5_fu_1087_p2));
assign C3_mapData_addr7_fu_1118_p2 = ($signed(ap_const_lv32_3) + $signed(C3_mapData_addr5_fu_1087_p2));
assign C3_mapData_addr8_fu_1158_p2 = ($signed(ap_const_lv32_2) + $signed(C3_mapData_addr5_reg_1549));
assign C3_mapData_addr9_fu_1182_p2 = ($signed(ap_const_lv32_1) + $signed(C3_mapData_addr5_reg_1549));
assign C3_v_addr10_fu_586_p2 = (C3_v_addr8_reg_1405 + tmp_23_trn_fu_582_p1);
assign C3_v_addr11_fu_1301_p2 = (p_shl8_fu_1297_p1 + p_shl7_fu_1285_p1);
assign C3_v_addr12_fu_1323_p2 = (tmp_25_trn_fu_1319_p1 + C3_v_addr11_reg_1712);
assign C3_v_addr1_fu_513_p2 = (p_shl10_cast_fu_509_p1 + p_shl_cast_fu_497_p1);
assign C3_v_addr2_fu_868_p2 = (p_shl11_cast_fu_853_p1 + p_shl12_cast_fu_864_p1);
assign C3_v_addr3_fu_874_p2 = (tmp_24_trn_cast_fu_842_p1 + C3_v_addr2_fu_868_p2);
assign C3_v_addr4_fu_1026_p2 = (p_shl_fu_1011_p1 + p_shl1_fu_1022_p1);
assign C3_v_addr5_fu_1032_p2 = (tmp_30_trn_fu_1001_p1 + C3_v_addr4_fu_1026_p2);
assign C3_v_addr6_fu_1272_p2 = (C3_v_addr9_reg_1699 + tmp_22_trn_cast_fu_1268_p1);
assign C3_v_addr7_fu_535_p2 = (C3_v_addr1_reg_1392 + tmp_20_trn_cast_fu_531_p1);
assign C3_v_addr8_fu_564_p2 = (p_shl6_fu_560_p1 + p_shl5_fu_548_p1);
assign C3_v_addr9_fu_1250_p2 = (p_shl26_cast_fu_1246_p1 + p_shl25_cast_fu_1234_p1);
assign C3_y_address0 = tmp_69_reg_1725;
assign C3_y_d0 = ((tmp_26_reg_1735[0:0]===1'b1)? reg_471: ap_const_lv32_0);
assign S2_y_addr2_fu_1148_p2 = ($signed(tmp_68_2_trn_fu_1144_p1) + $signed(S2_y_addr7_reg_1537));
assign S2_y_addr3_fu_1172_p2 = ($signed(tmp_68_3_trn_fu_1168_p1) + $signed(S2_y_addr7_reg_1537));
assign S2_y_addr4_fu_1196_p2 = ($signed(tmp_68_4_trn_fu_1192_p1) + $signed(S2_y_addr7_reg_1537));
assign S2_y_addr5_cast_fu_918_p1 = $signed(S2_y_addr5_fu_912_p2);
assign S2_y_addr5_fu_912_p2 = (p_shl15_cast_fu_896_p1 - p_shl16_cast_fu_908_p1);
assign S2_y_addr6_fu_922_p2 = ($signed(tmp_32_trn_cast_fu_884_p1) + $signed(S2_y_addr5_cast_fu_918_p1));
assign S2_y_addr7_fu_1065_p2 = ($signed(p_shl2_fu_1050_p1) - $signed(p_shl3_fu_1061_p1));
assign S2_y_addr8_fu_1071_p2 = ($signed(tmp_30_trn_fu_1001_p1) + $signed(S2_y_addr7_fu_1065_p2));
assign S2_y_addr9_fu_1107_p2 = ($signed(tmp_68_1_trn_fu_1103_p1) + $signed(S2_y_addr7_fu_1065_p2));

/// ap_sig_bdd_126 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_126 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end

/// ap_sig_bdd_139 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_139 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1E]);
end

/// ap_sig_bdd_149 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_149 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end

/// ap_sig_bdd_157 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_157 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_13]);
end

/// ap_sig_bdd_166 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_166 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_17]);
end

/// ap_sig_bdd_175 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_175 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_188 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_188 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_23]);
end

/// ap_sig_bdd_198 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_198 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_213 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_213 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_227 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_227 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_235 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_235 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_290 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_290 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_313 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_313 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_335 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_335 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_351 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_351 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end

/// ap_sig_bdd_362 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_362 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end

/// ap_sig_bdd_372 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_372 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end

/// ap_sig_bdd_381 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_381 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end

/// ap_sig_bdd_390 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_390 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end

/// ap_sig_bdd_400 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_400 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1A]);
end

/// ap_sig_bdd_413 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_413 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1B]);
end

/// ap_sig_bdd_424 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_424 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1C]);
end

/// ap_sig_bdd_438 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_438 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1D]);
end

/// ap_sig_bdd_454 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_454 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_24]);
end

/// ap_sig_bdd_465 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_465 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_19]);
end

/// ap_sig_bdd_523 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_523 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_25]);
end

/// ap_sig_bdd_56 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_56 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_571 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_571 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1F]);
end
assign exitcond1_fu_1256_p2 = (j_2_reg_426 == ap_const_lv4_A? 1'b1: 1'b0);
assign exitcond2_fu_1209_p2 = (i_2_reg_414 == ap_const_lv5_10? 1'b1: 1'b0);
assign exitcond3_fu_477_p2 = (i_reg_278 == ap_const_lv5_10? 1'b1: 1'b0);
assign exitcond4_fu_628_p2 = (n_phi_fu_406_p4 == ap_const_lv3_5? 1'b1: 1'b0);
assign exitcond4_mid1_fu_696_p2 = (exitcond4_mid_fu_634_p2 & not_exitcond_flatten15_mid_fu_690_p2);
assign exitcond4_mid2_fu_783_p2 = (exitcond4_mid1_reg_1457 & not_exitcond_flatten_mid_reg_1469);
assign exitcond4_mid_fu_634_p2 = (exitcond4_fu_628_p2 & not_exitcond_flatten_fu_622_p2);
assign exitcond5_fu_519_p2 = (j_reg_289 == ap_const_lv4_A? 1'b1: 1'b0);
assign exitcond9_fu_570_p2 = (k_reg_300 == ap_const_lv4_A? 1'b1: 1'b0);
assign exitcond_flatten15_mid_fu_658_p2 = (exitcond_flatten2_fu_652_p2 & not_exitcond_flatten_fu_622_p2);
assign exitcond_flatten15_not_fu_684_p2 = (exitcond_flatten2_fu_652_p2 ^ ap_const_lv1_1);
assign exitcond_flatten1_fu_640_p2 = (indvar_flatten_phi_fu_382_p4 == ap_const_lv7_32? 1'b1: 1'b0);
assign exitcond_flatten2_fu_652_p2 = (indvar_flatten3_phi_fu_359_p4 == ap_const_lv10_1F4? 1'b1: 1'b0);
assign exitcond_flatten3_fu_596_p2 = (indvar_flatten1_phi_fu_315_p4 == ap_const_lv16_BB80? 1'b1: 1'b0);
assign exitcond_flatten_fu_608_p2 = (indvar_flatten2_phi_fu_337_p4 == ap_const_lv12_BB8? 1'b1: 1'b0);
assign exitcond_flatten_mid1_fu_702_p2 = (exitcond_flatten_mid_fu_646_p2 & not_exitcond_flatten15_mid_fu_690_p2);
assign exitcond_flatten_mid_fu_646_p2 = (exitcond_flatten1_fu_640_p2 & not_exitcond_flatten_fu_622_p2);
assign exitcond_fu_1307_p2 = (k_2_reg_437 == ap_const_lv4_A? 1'b1: 1'b0);
assign grp_fu_448_ce = ap_const_logic_1;
assign grp_fu_455_ce = ap_const_logic_1;
assign i_1_mid2_fu_670_p3 = ((exitcond_flatten_fu_608_p2[0:0]===1'b1)? i_s_fu_664_p2: i_1_phi_fu_326_p4);
assign i_3_fu_483_p2 = (i_reg_278 + ap_const_lv5_1);
assign i_4_fu_1215_p2 = (i_2_reg_414 + ap_const_lv5_1);
assign i_s_fu_664_p2 = (ap_const_lv5_1 + i_1_phi_fu_326_p4);
assign indvar_flatten13_op_fu_714_p2 = (ap_const_lv10_1 + indvar_flatten3_phi_fu_359_p4);
assign indvar_flatten33_op_fu_728_p2 = (ap_const_lv12_1 + indvar_flatten2_phi_fu_337_p4);
assign indvar_flatten_next1_fu_720_p3 = ((tmp_36_fu_678_p2[0:0]===1'b1)? ap_const_lv10_1: indvar_flatten13_op_fu_714_p2);
assign indvar_flatten_next2_fu_734_p3 = ((exitcond_flatten_fu_608_p2[0:0]===1'b1)? ap_const_lv12_1: indvar_flatten33_op_fu_728_p2);
assign indvar_flatten_next3_fu_602_p2 = (indvar_flatten1_phi_fu_315_p4 + ap_const_lv16_1);
assign indvar_flatten_next_fu_988_p3 = ((tmp_38_fu_770_p2[0:0]===1'b1)? ap_const_lv7_1: indvar_flatten_op_fu_982_p2);
assign indvar_flatten_op_fu_982_p2 = (ap_const_lv7_1 + indvar_flatten_reg_378);
assign j_1_mid2_fu_754_p3 = ((exitcond_flatten15_mid_reg_1438[0:0]===1'b1)? j_4_fu_742_p2: j_1_mid_reg_1432);
assign j_1_mid_fu_614_p3 = ((exitcond_flatten_fu_608_p2[0:0]===1'b1)? ap_const_lv3_0: j_1_phi_fu_348_p4);
assign j_3_fu_525_p2 = (j_reg_289 + ap_const_lv4_1);
assign j_4_fu_742_p2 = (ap_const_lv3_1 + j_1_mid_reg_1432);
assign j_5_fu_1262_p2 = (j_2_reg_426 + ap_const_lv4_1);
assign k_1_mid2_fu_787_p3 = ((exitcond_flatten_mid1_reg_1462[0:0]===1'b1)? k_5_fu_760_p2: k_1_mid_fu_747_p3);
assign k_1_mid_fu_747_p3 = ((tmp_36_reg_1451[0:0]===1'b1)? ap_const_lv4_0: k_1_phi_fu_370_p4);
assign k_3_fu_576_p2 = (k_reg_300 + ap_const_lv4_1);
assign k_4_fu_1313_p2 = (k_2_reg_437 + ap_const_lv4_1);
assign k_5_fu_760_p2 = (ap_const_lv4_1 + k_1_mid_fu_747_p3);
assign m_1_fu_794_p2 = (ap_const_lv4_1 + m_mid1_fu_775_p3);
assign m_mid1_fu_775_p3 = ((tmp_38_fu_770_p2[0:0]===1'b1)? ap_const_lv4_0: m_phi_fu_394_p4);
assign m_mid2_fu_818_p3 = ((exitcond4_mid2_fu_783_p2[0:0]===1'b1)? m_1_fu_794_p2: m_mid1_fu_775_p3);
assign n_1_fu_976_p2 = (ap_const_lv3_1 + n_mid2_fu_810_p3);
assign n_mid2_fu_810_p3 = ((tmp_40_fu_805_p2[0:0]===1'b1)? ap_const_lv3_0: n_reg_402);
assign not_exitcond_flatten15_mid_fu_690_p2 = (exitcond_flatten_fu_608_p2 | exitcond_flatten15_not_fu_684_p2);
assign not_exitcond_flatten_fu_622_p2 = (exitcond_flatten_fu_608_p2 ^ ap_const_lv1_1);
assign not_exitcond_flatten_mid_fu_708_p2 = (exitcond_flatten_mid1_fu_702_p2 ^ ap_const_lv1_1);
assign notlhs_fu_1351_p2 = (tmp_18_fu_1337_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notrhs_fu_1357_p2 = (tmp_70_fu_1347_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign p_shl10_cast_fu_509_p1 = tmp_35_fu_501_p3;
assign p_shl11_cast_fu_853_p1 = tmp_41_fu_846_p3;
assign p_shl12_cast_fu_864_p1 = tmp_42_fu_857_p3;
assign p_shl15_cast_fu_896_p1 = tmp_46_fu_888_p3;
assign p_shl16_cast_fu_908_p1 = tmp_47_fu_900_p3;
assign p_shl1_fu_1022_p1 = tmp_44_fu_1015_p3;
assign p_shl25_cast_fu_1234_p1 = tmp_62_fu_1226_p3;
assign p_shl26_cast_fu_1246_p1 = tmp_63_fu_1238_p3;
assign p_shl2_fu_1050_p1 = $signed(tmp_48_fu_1043_p3);
assign p_shl3_fu_1061_p1 = $signed(tmp_49_fu_1054_p3);
assign p_shl4_fu_960_p1 = $signed(tmp_51_fu_952_p3);
assign p_shl5_fu_548_p1 = tmp_64_fu_540_p3;
assign p_shl6_fu_560_p1 = tmp_65_fu_552_p3;
assign p_shl7_fu_1285_p1 = tmp_66_fu_1277_p3;
assign p_shl8_fu_1297_p1 = tmp_67_fu_1289_p3;
assign p_shl_cast_fu_497_p1 = tmp_fu_489_p3;
assign p_shl_fu_1011_p1 = tmp_43_fu_1004_p3;
assign temp_to_int_fu_1333_p1 = reg_471;
assign tmp_18_fu_1337_p4 = {{temp_to_int_fu_1333_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_19_fu_1221_p1 = i_2_reg_414;
assign tmp_20_fu_836_p2 = ($signed(ap_const_lv3_4) - $signed(n_mid2_fu_810_p3));
assign tmp_20_trn_cast_fu_531_p1 = j_reg_289;
assign tmp_21_trn_cast_fu_880_p1 = j_1_mid2_fu_754_p3;
assign tmp_22_trn_cast_fu_1268_p1 = j_2_reg_426;
assign tmp_23_trn_fu_582_p1 = k_reg_300;
assign tmp_24_fu_1363_p2 = (notrhs_fu_1357_p2 | notlhs_fu_1351_p2);
assign tmp_24_trn_cast_fu_842_p1 = k_1_mid2_fu_787_p3;
assign tmp_25_fu_461_opcode = ap_const_lv5_2;
assign tmp_25_fu_461_p0 = reg_471;
assign tmp_25_fu_461_p1 = ap_const_lv32_0;
assign tmp_25_trn_fu_1319_p1 = k_2_reg_437;
assign tmp_26_fu_1369_p2 = (tmp_24_fu_1363_p2 & tmp_25_fu_461_p2);
assign tmp_30_trn_fu_1001_p1 = m_mid2_reg_1494;
assign tmp_32_trn_cast_fu_884_p1 = tmp_s_fu_830_p2;
assign tmp_34_trn_fu_948_p1 = $unsigned(tmp_20_fu_836_p2);
assign tmp_35_fu_501_p3 = {{i_reg_278}, {ap_const_lv1_0}};
assign tmp_36_fu_678_p2 = (exitcond_flatten15_mid_fu_658_p2 | exitcond_flatten_fu_608_p2);
assign tmp_37_fu_766_p2 = (exitcond_flatten_mid1_reg_1462 | exitcond_flatten15_mid_reg_1438);
assign tmp_38_cast4_fu_826_p1 = n_mid2_fu_810_p3;
assign tmp_38_fu_770_p2 = (tmp_37_fu_766_p2 | exitcond_flatten_reg_1427);
assign tmp_39_fu_800_p2 = (exitcond4_mid2_fu_783_p2 | exitcond_flatten_mid1_reg_1462);
assign tmp_40_fu_805_p2 = (tmp_39_fu_800_p2 | tmp_36_reg_1451);
assign tmp_41_fu_846_p3 = {{i_1_mid2_reg_1444}, {ap_const_lv3_0}};
assign tmp_42_fu_857_p3 = {{i_1_mid2_reg_1444}, {ap_const_lv1_0}};
assign tmp_43_fu_1004_p3 = {{C3_v_addr3_reg_1504}, {ap_const_lv3_0}};
assign tmp_44_fu_1015_p3 = {{C3_v_addr3_reg_1504}, {ap_const_lv1_0}};
assign tmp_45_fu_1038_p1 = C3_v_addr5_fu_1032_p2;
assign tmp_46_fu_888_p3 = {{j_1_mid2_fu_754_p3}, {ap_const_lv4_0}};
assign tmp_47_fu_900_p3 = {{j_1_mid2_fu_754_p3}, {ap_const_lv1_0}};
assign tmp_48_fu_1043_p3 = {{S2_y_addr6_reg_1510}, {ap_const_lv4_0}};
assign tmp_49_fu_1054_p3 = {{S2_y_addr6_reg_1510}, {ap_const_lv1_0}};
assign tmp_50_fu_1077_p1 = $unsigned(S2_y_addr8_fu_1071_p2);
assign tmp_51_fu_952_p3 = {{C3_mapData_addr2_fu_938_p2}, {ap_const_lv2_0}};
assign tmp_52_fu_1082_p2 = C3_mapData_addr4_reg_1516 << ap_const_lv32_2;
assign tmp_53_fu_1098_p1 = $unsigned(C3_mapData_addr6_fu_1092_p2);
assign tmp_54_fu_1113_p1 = $unsigned(S2_y_addr9_fu_1107_p2);
assign tmp_55_fu_1124_p1 = $unsigned(C3_mapData_addr7_fu_1118_p2);
assign tmp_56_fu_1153_p1 = $unsigned(S2_y_addr2_fu_1148_p2);
assign tmp_57_fu_1163_p1 = $unsigned(C3_mapData_addr8_fu_1158_p2);
assign tmp_58_fu_1177_p1 = $unsigned(S2_y_addr3_fu_1172_p2);
assign tmp_59_fu_1187_p1 = $unsigned(C3_mapData_addr9_fu_1182_p2);
assign tmp_60_fu_1201_p1 = $unsigned(S2_y_addr4_reg_1611);
assign tmp_61_fu_1205_p1 = $unsigned(C3_mapData_addr5_reg_1549);
assign tmp_62_fu_1226_p3 = {{i_2_reg_414}, {ap_const_lv3_0}};
assign tmp_63_fu_1238_p3 = {{i_2_reg_414}, {ap_const_lv1_0}};
assign tmp_64_fu_540_p3 = {{C3_v_addr7_fu_535_p2}, {ap_const_lv3_0}};
assign tmp_65_fu_552_p3 = {{C3_v_addr7_fu_535_p2}, {ap_const_lv1_0}};
assign tmp_66_fu_1277_p3 = {{C3_v_addr6_fu_1272_p2}, {ap_const_lv3_0}};
assign tmp_67_1_fu_996_p2 = (ap_const_lv4_1 + m_mid2_reg_1494);
assign tmp_67_2_fu_1129_p2 = (ap_const_lv4_2 + m_mid2_reg_1494);
assign tmp_67_3_fu_1134_p2 = (ap_const_lv4_3 + m_mid2_reg_1494);
assign tmp_67_4_fu_1139_p2 = (ap_const_lv4_4 + m_mid2_reg_1494);
assign tmp_67_fu_1289_p3 = {{C3_v_addr6_fu_1272_p2}, {ap_const_lv1_0}};
assign tmp_68_1_trn_fu_1103_p1 = tmp_67_1_fu_996_p2;
assign tmp_68_2_trn_fu_1144_p1 = tmp_67_2_fu_1129_p2;
assign tmp_68_3_trn_fu_1168_p1 = tmp_67_3_fu_1134_p2;
assign tmp_68_4_trn_fu_1192_p1 = tmp_67_4_fu_1139_p2;
assign tmp_68_fu_591_p1 = C3_v_addr10_fu_586_p2;
assign tmp_69_fu_1328_p1 = C3_v_addr12_fu_1323_p2;
assign tmp_70_fu_1347_p1 = temp_to_int_fu_1333_p1[22:0];
assign tmp_fu_489_p3 = {{i_reg_278}, {ap_const_lv3_0}};
assign tmp_s_fu_830_p2 = (k_1_mid2_fu_787_p3 + tmp_38_cast4_fu_826_p1);
always @ (posedge ap_clk)
begin
    C3_v_addr1_reg_1392[0] <= 1'b0;
    C3_v_addr8_reg_1405[0] <= 1'b0;
    S2_y_addr7_reg_1537[0] <= 1'b0;
    C3_v_addr9_reg_1699[0] <= 1'b0;
    C3_v_addr11_reg_1712[0] <= 1'b0;
    tmp_69_reg_1725[63:32] <= 32'b00000000000000000000000000000000;
end



endmodule //dateport_C3_conv

