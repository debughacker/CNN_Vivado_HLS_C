-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.2
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ==============================================================

--
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity dateport_output_wei_ram is 
    generic(
            mem_type    : string := "block"; 
            dwidth     : integer := 32; 
            awidth     : integer := 9; 
            mem_size    : integer := 300
    ); 
    port (
          addr0     : in std_logic_vector(awidth-1 downto 0); 
          ce0       : in std_logic; 
          d0        : in std_logic_vector(dwidth-1 downto 0); 
          we0       : in std_logic; 
          q0        : out std_logic_vector(dwidth-1 downto 0);
          clk        : in std_logic 
    ); 
end entity; 


architecture rtl of dateport_output_wei_ram is 

signal addr0_tmp : std_logic_vector(awidth-1 downto 0); 
type mem_array is array (0 to mem_size-1) of std_logic_vector (dwidth-1 downto 0); 
shared variable ram : mem_array := (
    0 => "10111100001111000100010001011100", 
    1 => "10111011101001011110000011011011", 
    2 => "10111011110000001001100100010000", 
    3 => "10111100001001100011110110100111", 
    4 => "00111100100010010110101001010000", 
    5 => "10111100000100001011000001111111", 
    6 => "10111100000110111011110101110011", 
    7 => "00111011001100110111110000011010", 
    8 => "00111011101000011000111001000101", 
    9 => "10111011000010011000011110100101", 
    10 => "10111100000010010100111110011011", 
    11 => "10111100101010111011011010011000", 
    12 => "10111011101110110011001001100100", 
    13 => "10111100011000010110010011111101", 
    14 => "00111100000001101010011110110110", 
    15 => "10111011000111100011111001100101", 
    16 => "10111010000101011001011010011101", 
    17 => "00111011001010100000101100110100", 
    18 => "00111001011110000100110010010101", 
    19 => "10111011100010000011000010111000", 
    20 => "10111010111100100001100011000011", 
    21 => "00111011000001011001011001001000", 
    22 => "10111011111010000011111001011101", 
    23 => "10111010101100001111111110001111", 
    24 => "00111011001101010001111010011101", 
    25 => "10111100100101111100011100111001", 
    26 => "10111011110011001001011011100000", 
    27 => "00111100100111001101001100001111", 
    28 => "10111100010111100101000011001100", 
    29 => "10111100000011001101111100101100", 
    30 => "10111100100101011001010111110011", 
    31 => "10111100000101011110111111000100", 
    32 => "10111100000001011111110010101111", 
    33 => "00111100100010001000000110110111", 
    34 => "10111100000010000001010000010111", 
    35 => "00111011110000110000000000100010", 
    36 => "10111100000001110110001000001111", 
    37 => "00111010000000111001101101011111", 
    38 => "10111011101001010110010010111100", 
    39 => "10111011111100110010101000111100", 
    40 => "00111100100000001011001100011011", 
    41 => "00111100011000111010011010110001", 
    42 => "10111011110011110110101100111010", 
    43 => "00111001111001110100101001001100", 
    44 => "00111011100010000011101001101110", 
    45 => "00110011000001110010110010110101", 
    46 => "10111010001111010110101111111010", 
    47 => "10111010101101110000000001010100", 
    48 => "10111100000101110110011100111100", 
    49 => "10111001000010101000001110101101", 
    50 => "00111011101001011010111011011010", 
    51 => "10111100000001110100011010000001", 
    52 => "00111010001000101110011000000101", 
    53 => "10111100001010111110101010111110", 
    54 => "00111100010000100111011110011111", 
    55 => "00111011111100110011001100110111", 
    56 => "00111011110101111010100011000011", 
    57 => "00111011101010111101011010101010", 
    58 => "10111011101010110111110011010000", 
    59 => "10111100001001010010011101111011", 
    60 => "10111100111001101111001000010100", 
    61 => "00111100101101110110011011001101", 
    62 => "10111011001001101111100101110000", 
    63 => "10111100011111101011000010011100", 
    64 => "00111010000011001111001110110100", 
    65 => "00111100000000001000011110111010", 
    66 => "00111011110011000010000111000110", 
    67 => "00111010011111101010011100011001", 
    68 => "10111000110000110001100110001011", 
    69 => "00111100010100111110101111010101", 
    70 => "00111100010100001110110010011111", 
    71 => "00111100100010000010100000001011", 
    72 => "00111011001010110001000001100110", 
    73 => "10111011010111001110110000101011", 
    74 => "10111011100001100011110011111001", 
    75 => "00111010101010011001000000110011", 
    76 => "00111011100000100011101011101001", 
    77 => "00111011100011101000110110101101", 
    78 => "00111100001011100000100101000110", 
    79 => "00111011101101011011011100000000", 
    80 => "00111011110000001011111001000000", 
    81 => "00111100101001011010101001100001", 
    82 => "00111100101110000110111000011010", 
    83 => "00111100000101010111101111101011", 
    84 => "00111100011110100100001100010101", 
    85 => "10111010111100110100000011011101", 
    86 => "10111100000100011010100100110110", 
    87 => "00111011100000110100100110100001", 
    88 => "10111001011100111001111000100101", 
    89 => "00111011111011110111100110010100", 
    90 => "00111100000011110011110111010110", 
    91 => "00111010000010101111011001110110", 
    92 => "00111100010001110101100101011111", 
    93 => "00111011010111110111110011000110", 
    94 => "10111100101011010111111000100111", 
    95 => "10111011101011100110100111111100", 
    96 => "00111010011011001000110000110010", 
    97 => "10111011111100110000111111110010", 
    98 => "10111100011111001001101011010001", 
    99 => "10111100010100000100101000100101", 
    100 => "10111001100111100010100010011001", 
    101 => "10111011111111000110010010110010", 
    102 => "10111010000001001100011001101110", 
    103 => "10111011000101001001111010101101", 
    104 => "10111011110000000111010100101100", 
    105 => "00111011101010010011100000110000", 
    106 => "10111100001010100111111010011001", 
    107 => "10111100011111110001000001010000", 
    108 => "00111011110000000111100010100000", 
    109 => "10111100011110110000011010010001", 
    110 => "00111011001101100111011111001110", 
    111 => "10111100000010011011001101011110", 
    112 => "10111100101110101110010011111110", 
    113 => "00111001110001011111011011011010", 
    114 => "10111100111101000111111111100111", 
    115 => "00111011010110100000001010111011", 
    116 => "00111010111110110011101100000100", 
    117 => "10111010000111010011000010100100", 
    118 => "00111011100011001101111100101111", 
    119 => "10111100001100111000111100001001", 
    120 => "10111011110010010001011110000100", 
    121 => "10111100000010011010100100010011", 
    122 => "10111011100001001100110001110000", 
    123 => "00111010010011010100110100110110", 
    124 => "00111011011001110001011000101011", 
    125 => "00111100001100100010011010110001", 
    126 => "00111011010010010100000101001001", 
    127 => "10111100111000111001000110110110", 
    128 => "00111100010000110101001111011110", 
    129 => "10111100011011010101001110101011", 
    130 => "00111011100101010001010101101000", 
    131 => "00111011111011010010011010011111", 
    132 => "00111011110001011100101111001111", 
    133 => "10111100000011011110101001110101", 
    134 => "10111001011110010101111101001010", 
    135 => "00111100001100001111110100001001", 
    136 => "00111011101101100110010000111001", 
    137 => "00111010110111101001100110011110", 
    138 => "10111100000101000110100001100000", 
    139 => "00111011111111011101000000111100", 
    140 => "10111011100001000100011010001000", 
    141 => "10111011010010000100100110110010", 
    142 => "10111100000100111000101111101000", 
    143 => "10111010010111011100010101110000", 
    144 => "10111100010000011101111010011100", 
    145 => "00111100001101010101011111011100", 
    146 => "00111100101100011000000101110000", 
    147 => "10111010111010101001100111101001", 
    148 => "10111001101101110011101111001100", 
    149 => "10111100110110000001100000011100", 
    150 => "00111011111100111100101100101100", 
    151 => "10111011010110011111100110110000", 
    152 => "10111010100001101011110110010110", 
    153 => "10111011100000010111000100010101", 
    154 => "10111011110001100100111100011111", 
    155 => "10111010010110001000010001010101", 
    156 => "00111100111000000001100011010100", 
    157 => "10111011010010110100100000110110", 
    158 => "00111010001100001111101111111000", 
    159 => "10111011001100011001101010110011", 
    160 => "10111011110110101110110101101101", 
    161 => "10111011000111000111010011000011", 
    162 => "10111011100110000101010001001100", 
    163 => "10111011110001000100000000101011", 
    164 => "00111100011001011110110110000101", 
    165 => "00111011000000100110110111010001", 
    166 => "00111011010010001001111110000111", 
    167 => "10111100101101010000000011100110", 
    168 => "00111011001101000001001111111000", 
    169 => "00111000101100000100011101111001", 
    170 => "00111011000001001100000000110100", 
    171 => "10111100000001111010110010101100", 
    172 => "10111011110001011010000100000100", 
    173 => "10111100101110001110101101001110", 
    174 => "00111100010010010000001000110011", 
    175 => "00111011101010111100111011111000", 
    176 => "00111011011101100111001000110111", 
    177 => "00111100010011000110010100011011", 
    178 => "00111011100111000010101111111001", 
    179 => "10111001100011101111111000000101", 
    180 => "00111011010000010011001101111011", 
    181 => "10111000011110011100100000110111", 
    182 => "10111011010010110101011000100101", 
    183 => "00111011101101101111101000110110", 
    184 => "00111010011111011110100000010101", 
    185 => "10111011101101001010100100011111", 
    186 => "10111100100001000011101010110000", 
    187 => "00111100000000100010001100010001", 
    188 => "00111100011101011111011111111100", 
    189 => "10111011011111111010101011101111", 
    190 => "00111011100100100000111100010111", 
    191 => "00111010000001001001011010000011", 
    192 => "00111011010111110001111101000110", 
    193 => "10111011010010011001100000001110", 
    194 => "10111011101000100110110110110001", 
    195 => "10111011111110100010011100100111", 
    196 => "00111010111110010010110101110110", 
    197 => "00111011111110111110110100001001", 
    198 => "10111011100111111100100101010101", 
    199 => "10111011111000011000100000100101", 
    200 => "10111100010001000001001100101010", 
    201 => "10111010110010111100110111111011", 
    202 => "00111011110000111011010101101001", 
    203 => "10111011111001100100010111001011", 
    204 => "10111011100110000110111000001000", 
    205 => "10111011100011011010110000100101", 
    206 => "10111100001010010101100011010110", 
    207 => "00111011010000100001100010100001", 
    208 => "10111011110101011000010011111100", 
    209 => "00111011100011011110001010010100", 
    210 => "00111100100111000111011101111010", 
    211 => "10111100001000100100111001100011", 
    212 => "00111011110011101101001111100010", 
    213 => "10111100011010111110001110101101", 
    214 => "00111100010100001001000011010011", 
    215 => "10111010110100101010111100110110", 
    216 => "00111100011101100000011000101110", 
    217 => "10111011101000101011111010001011", 
    218 => "00111011100010110101010000111011", 
    219 => "10111011100010111110101000110100", 
    220 => "10111011100011111010110010011001", 
    221 => "00111100001000011101111010001101", 
    222 => "10111011101010100110001011111001", 
    223 => "10111001001011000110100000011101", 
    224 => "00111100100100011011000000111010", 
    225 => "00111011101101101111110111111100", 
    226 => "10111011101001000011100111000110", 
    227 => "10111011100010101101100101110010", 
    228 => "10111011010111111111011010011101", 
    229 => "10111011111100011100000011101101", 
    230 => "00111011110110010000110110100000", 
    231 => "10111100010100100101110101001101", 
    232 => "00111100010011000111111100111011", 
    233 => "10111001100001100010110111100011", 
    234 => "10111011101010100100111001011010", 
    235 => "10111100100010001000111011011011", 
    236 => "10111010000001011001001010011101", 
    237 => "10111011011001001110011100110011", 
    238 => "00111010100100110011100111011100", 
    239 => "00111011111001010100001110010111", 
    240 => "10111100000111110000010110111101", 
    241 => "10111010100001011011111111110100", 
    242 => "00111011000100100100000010101111", 
    243 => "00111011000000010001101000100010", 
    244 => "00111001110011100010101101000110", 
    245 => "00111100010110000101101111000101", 
    246 => "10111100100010010010111110101000", 
    247 => "10111011111110101110101100000111", 
    248 => "10111100010010011000110110011000", 
    249 => "00111100110011100010001111110011", 
    250 => "10111011101011011001011010011101", 
    251 => "10111011100000101100110011000011", 
    252 => "00111010011000111000100111001001", 
    253 => "10111011000101111011100010101000", 
    254 => "00111011100110100111001000110010", 
    255 => "00111011111101100110010100100000", 
    256 => "10111100011000010100111001110001", 
    257 => "00111100100100011101011010000100", 
    258 => "10111100000001011110110101011110", 
    259 => "00111100010011111011000111011111", 
    260 => "10111100001101101000101010000111", 
    261 => "00111100000110110010010001011001", 
    262 => "00111011100101010111111001011001", 
    263 => "00111010110111101011100011101111", 
    264 => "00111011100111001000000011010001", 
    265 => "00111100011001011000100000000011", 
    266 => "10111100010111011100010000000001", 
    267 => "00111100100001111001001011010011", 
    268 => "00111011110101010001110110100100", 
    269 => "10111011111000110110100011010111", 
    270 => "10111100100110001011001110011010", 
    271 => "10111011010111111010110001111010", 
    272 => "00111100010000000110000010100101", 
    273 => "00111001101000100101010111010100", 
    274 => "10111011110110110011101110000111", 
    275 => "00111011000000110111111001001011", 
    276 => "00111010100011000100110001110001", 
    277 => "00111100101011110010001001100010", 
    278 => "10111011000000111111110001011100", 
    279 => "00111100101000110101111010010001", 
    280 => "10111000010100110000010101000110", 
    281 => "00111010111110100101101110001001", 
    282 => "00111100000100100111000111110110", 
    283 => "00111011001100011000011001111010", 
    284 => "10111100000110101010000111010000", 
    285 => "10111100101000000100101010010100", 
    286 => "10111100100011001101110101100000", 
    287 => "00111001000110101101001010010000", 
    288 => "00111011101010100000001000110111", 
    289 => "10111100011011111100010100101010", 
    290 => "00111010000101110100111001100111", 
    291 => "10111010110000011111101010101011", 
    292 => "00111001010100010001000101100011", 
    293 => "00111100010110111011111011110101", 
    294 => "10111011110111001111100100110100", 
    295 => "10111011111111100000101011100000", 
    296 => "10111100100000011011110101011001", 
    297 => "00111100100011111100011011110000", 
    298 => "10111100001011110001100000101100", 
    299 => "10111011100000110010010110001001" );

attribute syn_ramstyle : string; 
attribute syn_ramstyle of ram : variable is "block_ram";
attribute ram_style : string;
attribute ram_style of ram : variable is mem_type;
attribute EQUIVALENT_REGISTER_REMOVAL : string;

begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_memory_access_0: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            if (we0 = '1') then 
                ram(CONV_INTEGER(addr0_tmp)) := d0; 
            end if;
            q0 <= ram(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;


end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity dateport_output_wei is
    generic (
        DataWidth : INTEGER := 32;
        AddressRange : INTEGER := 300;
        AddressWidth : INTEGER := 9);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0);
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of dateport_output_wei is
    component dateport_output_wei_ram is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            d0 : IN STD_LOGIC_VECTOR;
            we0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    dateport_output_wei_ram_U :  component dateport_output_wei_ram
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        d0 => d0,
        we0 => we0,
        q0 => q0);

end architecture;


