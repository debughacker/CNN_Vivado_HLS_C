// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dateport_DC3_layer (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        C3_bias_address0,
        C3_bias_ce0,
        C3_bias_q0,
        S4_d_address0,
        S4_d_ce0,
        S4_d_q0,
        C3_y_address0,
        C3_y_ce0,
        C3_y_q0,
        C3_y_address1,
        C3_y_ce1,
        C3_y_q1,
        C3_d_address0,
        C3_d_ce0,
        C3_d_we0,
        C3_d_d0,
        C3_d_address1,
        C3_d_ce1,
        C3_d_we1,
        C3_d_d1
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 21'b1;
parameter    ap_ST_st2_fsm_1 = 21'b10;
parameter    ap_ST_st3_fsm_2 = 21'b100;
parameter    ap_ST_st4_fsm_3 = 21'b1000;
parameter    ap_ST_st5_fsm_4 = 21'b10000;
parameter    ap_ST_st6_fsm_5 = 21'b100000;
parameter    ap_ST_st7_fsm_6 = 21'b1000000;
parameter    ap_ST_st8_fsm_7 = 21'b10000000;
parameter    ap_ST_st9_fsm_8 = 21'b100000000;
parameter    ap_ST_st10_fsm_9 = 21'b1000000000;
parameter    ap_ST_st11_fsm_10 = 21'b10000000000;
parameter    ap_ST_st12_fsm_11 = 21'b100000000000;
parameter    ap_ST_st13_fsm_12 = 21'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 21'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 21'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 21'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 21'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 21'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 21'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 21'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 21'b100000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_3E800000 = 32'b111110100000000000000000000000;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv4_A = 4'b1010;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv4_2 = 4'b10;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv32_3F800000 = 32'b111111100000000000000000000000;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] C3_bias_address0;
output   C3_bias_ce0;
input  [31:0] C3_bias_q0;
output  [8:0] S4_d_address0;
output   S4_d_ce0;
input  [31:0] S4_d_q0;
output  [10:0] C3_y_address0;
output   C3_y_ce0;
input  [31:0] C3_y_q0;
output  [10:0] C3_y_address1;
output   C3_y_ce1;
input  [31:0] C3_y_q1;
output  [10:0] C3_d_address0;
output   C3_d_ce0;
output   C3_d_we0;
output  [31:0] C3_d_d0;
output  [10:0] C3_d_address1;
output   C3_d_ce1;
output   C3_d_we1;
output  [31:0] C3_d_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg C3_bias_ce0;
reg S4_d_ce0;
reg[10:0] C3_y_address0;
reg C3_y_ce0;
reg[10:0] C3_y_address1;
reg C3_y_ce1;
reg[10:0] C3_d_address0;
reg C3_d_ce0;
reg C3_d_we0;
reg[10:0] C3_d_address1;
reg C3_d_ce1;
reg C3_d_we1;
(* fsm_encoding = "none" *) reg   [20:0] ap_CS_fsm = 21'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_39;
wire   [31:0] grp_fu_207_p2;
reg   [31:0] reg_239;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_bdd_83;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_bdd_90;
wire   [31:0] grp_fu_211_p2;
reg   [31:0] reg_244;
wire   [4:0] i_13_fu_255_p2;
reg   [4:0] i_13_reg_745;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_102;
wire   [0:0] exitcond_fu_249_p2;
reg   [31:0] C3_bias_load_reg_755;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_116;
wire   [7:0] S4_d_addr12_fu_282_p2;
reg   [7:0] S4_d_addr12_reg_761;
wire   [8:0] C3_y_addr5_fu_312_p2;
reg   [8:0] C3_y_addr5_reg_766;
wire   [31:0] S4_d_addr14_fu_365_p2;
reg   [31:0] S4_d_addr14_reg_775;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_129;
wire   [0:0] tmp_s_fu_318_p2;
wire   [31:0] C3_y_addr7_fu_404_p2;
reg   [31:0] C3_y_addr7_reg_780;
wire   [31:0] C3_y_addr9_fu_443_p2;
reg   [31:0] C3_y_addr9_reg_786;
wire   [31:0] S4_d_addr15_fu_469_p2;
reg   [31:0] S4_d_addr15_reg_795;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_146;
wire   [0:0] tmp_62_fu_449_p2;
wire   [63:0] tmp_112_fu_483_p1;
reg   [63:0] tmp_112_reg_800;
wire   [63:0] tmp_113_fu_503_p1;
reg   [63:0] tmp_113_reg_810;
wire   [31:0] C3_y_addr10_fu_508_p2;
reg   [31:0] C3_y_addr10_reg_820;
wire   [31:0] C3_y_addr4_fu_513_p2;
reg   [31:0] C3_y_addr4_reg_825;
wire   [3:0] k_9_fu_518_p2;
reg   [3:0] k_9_reg_830;
wire   [3:0] j_10_fu_524_p2;
reg   [31:0] C3_y_load_reg_840;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_175;
reg   [31:0] C3_y_load_4_reg_845;
wire   [63:0] tmp_114_fu_530_p1;
reg   [63:0] tmp_114_reg_850;
wire   [63:0] tmp_115_fu_534_p1;
reg   [63:0] tmp_115_reg_860;
reg   [31:0] C3_y_load_5_reg_870;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_192;
reg   [31:0] C3_y_load_6_reg_875;
wire   [0:0] tmp_44_fu_578_p2;
reg   [0:0] tmp_44_reg_885;
wire   [0:0] tmp_49_fu_620_p2;
reg   [0:0] tmp_49_reg_890;
reg   [31:0] S4_d_load_reg_895;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_bdd_207;
wire   [31:0] p_0_i_fu_626_p3;
wire   [31:0] p_0_i3_fu_634_p3;
wire   [0:0] tmp_54_fu_678_p2;
reg   [0:0] tmp_54_reg_911;
wire   [0:0] tmp_59_fu_720_p2;
reg   [0:0] tmp_59_reg_916;
wire   [31:0] p_0_i6_fu_726_p3;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_bdd_224;
wire   [31:0] p_0_i9_fu_734_p3;
wire   [31:0] grp_fu_215_p2;
reg   [31:0] tmp_64_reg_931;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_bdd_235;
wire   [31:0] grp_fu_220_p2;
reg   [31:0] tmp_67_reg_936;
reg   [31:0] tmp_69_reg_941;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_bdd_245;
reg   [31:0] tmp_71_reg_946;
reg   [4:0] i_reg_172;
reg   [3:0] j_reg_184;
reg   [3:0] k_reg_196;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_bdd_265;
wire   [63:0] tmp_fu_261_p1;
wire   [63:0] tmp_111_fu_538_p1;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_bdd_275;
reg   [31:0] grp_fu_207_p0;
wire   [31:0] grp_fu_207_p1;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_289;
reg   [31:0] grp_fu_211_p0;
wire   [31:0] grp_fu_211_p1;
reg   [31:0] grp_fu_215_p0;
reg   [31:0] grp_fu_215_p1;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_bdd_302;
reg   [31:0] grp_fu_220_p0;
reg   [31:0] grp_fu_220_p1;
wire   [31:0] grp_fu_229_p0;
wire   [31:0] grp_fu_229_p1;
wire   [31:0] grp_fu_234_p0;
wire   [31:0] grp_fu_234_p1;
wire   [6:0] tmp_108_fu_270_p3;
wire   [7:0] tmp_trn_cast_fu_266_p1;
wire   [7:0] p_shl41_cast_fu_278_p1;
wire   [7:0] tmp_109_fu_288_p3;
wire   [5:0] tmp_110_fu_300_p3;
wire   [8:0] p_shl42_cast_fu_308_p1;
wire   [8:0] p_shl_cast_fu_296_p1;
wire   [2:0] tmp_87_fu_330_p4;
wire   [7:0] tmp_76_trn_cast_fu_340_p1;
wire   [7:0] S4_d_addr13_fu_344_p2;
wire   [9:0] tmp_88_fu_353_p3;
wire   [31:0] p_shl_fu_361_p1;
wire   [31:0] S4_d_addr13_cast_fu_349_p1;
wire   [8:0] tmp_77_trn_cast_fu_371_p1;
wire   [8:0] C3_y_addr6_fu_375_p2;
wire   [11:0] tmp_89_fu_380_p3;
wire   [9:0] tmp_90_fu_392_p3;
wire   [31:0] p_shl16_fu_388_p1;
wire   [31:0] p_shl17_fu_400_p1;
wire   [3:0] tmp_61_fu_324_p2;
wire   [8:0] tmp_79_trn6_cast_fu_410_p1;
wire   [8:0] C3_y_addr8_fu_414_p2;
wire   [11:0] tmp_91_fu_419_p3;
wire   [9:0] tmp_92_fu_431_p3;
wire   [31:0] p_shl18_fu_427_p1;
wire   [31:0] p_shl19_fu_439_p1;
wire   [2:0] tmp_63_fu_455_p4;
wire   [31:0] tmp_82_trn_fu_465_p1;
wire   [31:0] tmp_83_trn_fu_474_p1;
wire   [31:0] C3_y_addr11_fu_478_p2;
wire   [3:0] tmp_66_fu_488_p2;
wire   [31:0] tmp_87_trn_fu_494_p1;
wire   [31:0] C3_y_addr12_fu_498_p2;
wire   [31:0] temp_to_int_fu_542_p1;
wire   [7:0] tmp_40_fu_546_p4;
wire   [22:0] tmp_93_fu_556_p1;
wire   [0:0] notrhs_fu_566_p2;
wire   [0:0] notlhs_fu_560_p2;
wire   [0:0] tmp_42_fu_572_p2;
wire   [0:0] grp_fu_229_p2;
wire   [31:0] temp_3_to_int_fu_584_p1;
wire   [7:0] tmp_45_fu_588_p4;
wire   [22:0] tmp_94_fu_598_p1;
wire   [0:0] notrhs6_fu_608_p2;
wire   [0:0] notlhs5_fu_602_p2;
wire   [0:0] tmp_47_fu_614_p2;
wire   [0:0] grp_fu_234_p2;
wire   [31:0] temp_4_to_int_fu_642_p1;
wire   [7:0] tmp_50_fu_646_p4;
wire   [22:0] tmp_95_fu_656_p1;
wire   [0:0] notrhs8_fu_666_p2;
wire   [0:0] notlhs7_fu_660_p2;
wire   [0:0] tmp_52_fu_672_p2;
wire   [31:0] temp_5_to_int_fu_684_p1;
wire   [7:0] tmp_55_fu_688_p4;
wire   [22:0] tmp_96_fu_698_p1;
wire   [0:0] notrhs1_fu_708_p2;
wire   [0:0] notlhs9_fu_702_p2;
wire   [0:0] tmp_57_fu_714_p2;
wire    grp_fu_207_ce;
wire    grp_fu_211_ce;
wire    grp_fu_215_ce;
wire    grp_fu_220_ce;
wire   [4:0] grp_fu_229_opcode;
wire   [4:0] grp_fu_234_opcode;
reg   [20:0] ap_NS_fsm;


dateport_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dateport_fadd_32ns_32ns_32_5_full_dsp_U54(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_207_p0 ),
    .din1( grp_fu_207_p1 ),
    .ce( grp_fu_207_ce ),
    .dout( grp_fu_207_p2 )
);

dateport_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dateport_fadd_32ns_32ns_32_5_full_dsp_U55(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_211_p0 ),
    .din1( grp_fu_211_p1 ),
    .ce( grp_fu_211_ce ),
    .dout( grp_fu_211_p2 )
);

dateport_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dateport_fmul_32ns_32ns_32_4_max_dsp_U56(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_215_p0 ),
    .din1( grp_fu_215_p1 ),
    .ce( grp_fu_215_ce ),
    .dout( grp_fu_215_p2 )
);

dateport_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dateport_fmul_32ns_32ns_32_4_max_dsp_U57(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_220_p0 ),
    .din1( grp_fu_220_p1 ),
    .ce( grp_fu_220_ce ),
    .dout( grp_fu_220_p2 )
);

dateport_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
dateport_fcmp_32ns_32ns_1_1_U58(
    .din0( grp_fu_229_p0 ),
    .din1( grp_fu_229_p1 ),
    .opcode( grp_fu_229_opcode ),
    .dout( grp_fu_229_p2 )
);

dateport_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
dateport_fcmp_32ns_32ns_1_1_U59(
    .din0( grp_fu_234_p0 ),
    .din1( grp_fu_234_p1 ),
    .opcode( grp_fu_234_opcode ),
    .dout( grp_fu_234_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == tmp_s_fu_318_p2))) begin
        i_reg_172 <= i_13_reg_745;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_172 <= ap_const_lv5_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        j_reg_184 <= ap_const_lv4_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (ap_const_lv1_0 == tmp_62_fu_449_p2))) begin
        j_reg_184 <= j_10_fu_524_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == tmp_s_fu_318_p2))) begin
        k_reg_196 <= ap_const_lv4_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        k_reg_196 <= k_9_reg_830;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        C3_bias_load_reg_755 <= C3_bias_q0;
        C3_y_addr5_reg_766[8 : 1] <= C3_y_addr5_fu_312_p2[8 : 1];
        S4_d_addr12_reg_761 <= S4_d_addr12_fu_282_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & ~(ap_const_lv1_0 == tmp_62_fu_449_p2))) begin
        C3_y_addr10_reg_820 <= C3_y_addr10_fu_508_p2;
        C3_y_addr4_reg_825[31 : 1] <= C3_y_addr4_fu_513_p2[31 : 1];
        S4_d_addr15_reg_795 <= S4_d_addr15_fu_469_p2;
        k_9_reg_830 <= k_9_fu_518_p2;
        tmp_112_reg_800[31 : 0] <= tmp_112_fu_483_p1[31 : 0];
        tmp_113_reg_810[31 : 1] <= tmp_113_fu_503_p1[31 : 1];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == tmp_s_fu_318_p2))) begin
        C3_y_addr7_reg_780[31 : 1] <= C3_y_addr7_fu_404_p2[31 : 1];
        C3_y_addr9_reg_786[31 : 2] <= C3_y_addr9_fu_443_p2[31 : 2];
        S4_d_addr14_reg_775 <= S4_d_addr14_fu_365_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        C3_y_load_4_reg_845 <= C3_y_q1;
        C3_y_load_reg_840 <= C3_y_q0;
        tmp_114_reg_850[31 : 0] <= tmp_114_fu_530_p1[31 : 0];
        tmp_115_reg_860[31 : 1] <= tmp_115_fu_534_p1[31 : 1];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        C3_y_load_5_reg_870 <= C3_y_q0;
        C3_y_load_6_reg_875 <= C3_y_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        S4_d_load_reg_895 <= S4_d_q0;
        tmp_54_reg_911 <= tmp_54_fu_678_p2;
        tmp_59_reg_916 <= tmp_59_fu_720_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_13_reg_745 <= i_13_fu_255_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) | (ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11))) begin
        reg_239 <= grp_fu_207_p2;
        reg_244 <= grp_fu_211_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        tmp_44_reg_885 <= tmp_44_fu_578_p2;
        tmp_49_reg_890 <= tmp_49_fu_620_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        tmp_64_reg_931 <= grp_fu_215_p2;
        tmp_67_reg_936 <= grp_fu_220_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        tmp_69_reg_941 <= grp_fu_215_p2;
        tmp_71_reg_946 <= grp_fu_220_p2;
    end
end

/// C3_bias_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        C3_bias_ce0 = ap_const_logic_1;
    end else begin
        C3_bias_ce0 = ap_const_logic_0;
    end
end

/// C3_d_address0 assign process. ///
always @ (tmp_112_reg_800 or tmp_114_reg_850 or ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st20_fsm_19)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        C3_d_address0 = tmp_114_reg_850;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        C3_d_address0 = tmp_112_reg_800;
    end else begin
        C3_d_address0 = 'bx;
    end
end

/// C3_d_address1 assign process. ///
always @ (tmp_113_reg_810 or tmp_115_reg_860 or ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st20_fsm_19)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        C3_d_address1 = tmp_115_reg_860;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        C3_d_address1 = tmp_113_reg_810;
    end else begin
        C3_d_address1 = 'bx;
    end
end

/// C3_d_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st20_fsm_19)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20) | (ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19))) begin
        C3_d_ce0 = ap_const_logic_1;
    end else begin
        C3_d_ce0 = ap_const_logic_0;
    end
end

/// C3_d_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st20_fsm_19)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20) | (ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19))) begin
        C3_d_ce1 = ap_const_logic_1;
    end else begin
        C3_d_ce1 = ap_const_logic_0;
    end
end

/// C3_d_we0 assign process. ///
always @ (ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st20_fsm_19)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20) | (ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19))) begin
        C3_d_we0 = ap_const_logic_1;
    end else begin
        C3_d_we0 = ap_const_logic_0;
    end
end

/// C3_d_we1 assign process. ///
always @ (ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st20_fsm_19)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20) | (ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19))) begin
        C3_d_we1 = ap_const_logic_1;
    end else begin
        C3_d_we1 = ap_const_logic_0;
    end
end

/// C3_y_address0 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4 or tmp_112_fu_483_p1 or ap_sig_cseq_ST_st6_fsm_5 or tmp_114_fu_530_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        C3_y_address0 = tmp_114_fu_530_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        C3_y_address0 = tmp_112_fu_483_p1;
    end else begin
        C3_y_address0 = 'bx;
    end
end

/// C3_y_address1 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4 or tmp_113_fu_503_p1 or ap_sig_cseq_ST_st6_fsm_5 or tmp_115_fu_534_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        C3_y_address1 = tmp_115_fu_534_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        C3_y_address1 = tmp_113_fu_503_p1;
    end else begin
        C3_y_address1 = 'bx;
    end
end

/// C3_y_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st6_fsm_5)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5))) begin
        C3_y_ce0 = ap_const_logic_1;
    end else begin
        C3_y_ce0 = ap_const_logic_0;
    end
end

/// C3_y_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st6_fsm_5)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5))) begin
        C3_y_ce1 = ap_const_logic_1;
    end else begin
        C3_y_ce1 = ap_const_logic_0;
    end
end

/// S4_d_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st12_fsm_11)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        S4_d_ce0 = ap_const_logic_1;
    end else begin
        S4_d_ce0 = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st2_fsm_1 or exitcond_fu_249_p2)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond_fu_249_p2 == ap_const_lv1_0)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or exitcond_fu_249_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond_fu_249_p2 == ap_const_lv1_0))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st11_fsm_10 assign process. ///
always @ (ap_sig_bdd_83)
begin
    if (ap_sig_bdd_83) begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st12_fsm_11 assign process. ///
always @ (ap_sig_bdd_90)
begin
    if (ap_sig_bdd_90) begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st13_fsm_12 assign process. ///
always @ (ap_sig_bdd_207)
begin
    if (ap_sig_bdd_207) begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st14_fsm_13 assign process. ///
always @ (ap_sig_bdd_224)
begin
    if (ap_sig_bdd_224) begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st16_fsm_15 assign process. ///
always @ (ap_sig_bdd_235)
begin
    if (ap_sig_bdd_235) begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st17_fsm_16 assign process. ///
always @ (ap_sig_bdd_245)
begin
    if (ap_sig_bdd_245) begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st18_fsm_17 assign process. ///
always @ (ap_sig_bdd_302)
begin
    if (ap_sig_bdd_302) begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_39)
begin
    if (ap_sig_bdd_39) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st20_fsm_19 assign process. ///
always @ (ap_sig_bdd_275)
begin
    if (ap_sig_bdd_275) begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st21_fsm_20 assign process. ///
always @ (ap_sig_bdd_265)
begin
    if (ap_sig_bdd_265) begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_102)
begin
    if (ap_sig_bdd_102) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_116)
begin
    if (ap_sig_bdd_116) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_129)
begin
    if (ap_sig_bdd_129) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_146)
begin
    if (ap_sig_bdd_146) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_175)
begin
    if (ap_sig_bdd_175) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_192)
begin
    if (ap_sig_bdd_192) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_7 assign process. ///
always @ (ap_sig_bdd_289)
begin
    if (ap_sig_bdd_289) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

/// grp_fu_207_p0 assign process. ///
always @ (C3_y_load_reg_840 or C3_y_load_5_reg_870 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        grp_fu_207_p0 = C3_y_load_5_reg_870;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        grp_fu_207_p0 = C3_y_load_reg_840;
    end else begin
        grp_fu_207_p0 = 'bx;
    end
end

/// grp_fu_211_p0 assign process. ///
always @ (C3_y_load_4_reg_845 or ap_sig_cseq_ST_st7_fsm_6 or C3_y_load_6_reg_875 or ap_sig_cseq_ST_st8_fsm_7)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        grp_fu_211_p0 = C3_y_load_6_reg_875;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        grp_fu_211_p0 = C3_y_load_4_reg_845;
    end else begin
        grp_fu_211_p0 = 'bx;
    end
end

/// grp_fu_215_p0 assign process. ///
always @ (S4_d_q0 or S4_d_load_reg_895 or ap_sig_cseq_ST_st13_fsm_12 or ap_sig_cseq_ST_st14_fsm_13 or tmp_64_reg_931 or tmp_69_reg_941 or ap_sig_cseq_ST_st17_fsm_16 or ap_sig_cseq_ST_st18_fsm_17)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        grp_fu_215_p0 = tmp_69_reg_941;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        grp_fu_215_p0 = tmp_64_reg_931;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        grp_fu_215_p0 = S4_d_load_reg_895;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        grp_fu_215_p0 = S4_d_q0;
    end else begin
        grp_fu_215_p0 = 'bx;
    end
end

/// grp_fu_215_p1 assign process. ///
always @ (ap_sig_cseq_ST_st13_fsm_12 or p_0_i_fu_626_p3 or p_0_i6_fu_726_p3 or ap_sig_cseq_ST_st14_fsm_13 or ap_sig_cseq_ST_st17_fsm_16 or ap_sig_cseq_ST_st18_fsm_17)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16) | (ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17))) begin
        grp_fu_215_p1 = ap_const_lv32_3E800000;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        grp_fu_215_p1 = p_0_i6_fu_726_p3;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        grp_fu_215_p1 = p_0_i_fu_626_p3;
    end else begin
        grp_fu_215_p1 = 'bx;
    end
end

/// grp_fu_220_p0 assign process. ///
always @ (S4_d_q0 or S4_d_load_reg_895 or ap_sig_cseq_ST_st13_fsm_12 or ap_sig_cseq_ST_st14_fsm_13 or tmp_67_reg_936 or ap_sig_cseq_ST_st17_fsm_16 or tmp_71_reg_946 or ap_sig_cseq_ST_st18_fsm_17)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        grp_fu_220_p0 = tmp_71_reg_946;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        grp_fu_220_p0 = tmp_67_reg_936;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        grp_fu_220_p0 = S4_d_load_reg_895;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        grp_fu_220_p0 = S4_d_q0;
    end else begin
        grp_fu_220_p0 = 'bx;
    end
end

/// grp_fu_220_p1 assign process. ///
always @ (ap_sig_cseq_ST_st13_fsm_12 or p_0_i3_fu_634_p3 or ap_sig_cseq_ST_st14_fsm_13 or p_0_i9_fu_734_p3 or ap_sig_cseq_ST_st17_fsm_16 or ap_sig_cseq_ST_st18_fsm_17)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16) | (ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17))) begin
        grp_fu_220_p1 = ap_const_lv32_3E800000;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        grp_fu_220_p1 = p_0_i9_fu_734_p3;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        grp_fu_220_p1 = p_0_i3_fu_634_p3;
    end else begin
        grp_fu_220_p1 = 'bx;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or exitcond_fu_249_p2 or tmp_s_fu_318_p2 or tmp_62_fu_449_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(exitcond_fu_249_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            if (~(ap_const_lv1_0 == tmp_s_fu_318_p2)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st5_fsm_4 : 
        begin
            if ((ap_const_lv1_0 == tmp_62_fu_449_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C3_bias_address0 = tmp_fu_261_p1;
assign C3_d_d0 = grp_fu_215_p2;
assign C3_d_d1 = grp_fu_220_p2;
assign C3_y_addr10_fu_508_p2 = (tmp_83_trn_fu_474_p1 + C3_y_addr9_reg_786);
assign C3_y_addr11_fu_478_p2 = (tmp_83_trn_fu_474_p1 + C3_y_addr7_reg_780);
assign C3_y_addr12_fu_498_p2 = (tmp_87_trn_fu_494_p1 + C3_y_addr7_reg_780);
assign C3_y_addr4_fu_513_p2 = (tmp_87_trn_fu_494_p1 + C3_y_addr9_reg_786);
assign C3_y_addr5_fu_312_p2 = (p_shl42_cast_fu_308_p1 + p_shl_cast_fu_296_p1);
assign C3_y_addr6_fu_375_p2 = (tmp_77_trn_cast_fu_371_p1 + C3_y_addr5_reg_766);
assign C3_y_addr7_fu_404_p2 = (p_shl16_fu_388_p1 + p_shl17_fu_400_p1);
assign C3_y_addr8_fu_414_p2 = (tmp_79_trn6_cast_fu_410_p1 + C3_y_addr5_reg_766);
assign C3_y_addr9_fu_443_p2 = (p_shl18_fu_427_p1 + p_shl19_fu_439_p1);
assign S4_d_addr12_fu_282_p2 = (tmp_trn_cast_fu_266_p1 + p_shl41_cast_fu_278_p1);
assign S4_d_addr13_cast_fu_349_p1 = S4_d_addr13_fu_344_p2;
assign S4_d_addr13_fu_344_p2 = (tmp_76_trn_cast_fu_340_p1 + S4_d_addr12_reg_761);
assign S4_d_addr14_fu_365_p2 = (p_shl_fu_361_p1 + S4_d_addr13_cast_fu_349_p1);
assign S4_d_addr15_fu_469_p2 = (tmp_82_trn_fu_465_p1 + S4_d_addr14_reg_775);
assign S4_d_address0 = tmp_111_fu_538_p1;

/// ap_sig_bdd_102 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_102 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_116 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_116 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_129 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_129 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_146 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_146 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_175 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_175 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_192 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_192 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_207 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_207 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end

/// ap_sig_bdd_224 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_224 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end

/// ap_sig_bdd_235 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_235 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end

/// ap_sig_bdd_245 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_245 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_10]);
end

/// ap_sig_bdd_265 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_265 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_14]);
end

/// ap_sig_bdd_275 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_275 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_13]);
end

/// ap_sig_bdd_289 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_289 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_302 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_302 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_11]);
end

/// ap_sig_bdd_39 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_39 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_83 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_83 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end

/// ap_sig_bdd_90 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_90 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end
assign exitcond_fu_249_p2 = (i_reg_172 == ap_const_lv5_10? 1'b1: 1'b0);
assign grp_fu_207_ce = ap_const_logic_1;
assign grp_fu_207_p1 = C3_bias_load_reg_755;
assign grp_fu_211_ce = ap_const_logic_1;
assign grp_fu_211_p1 = C3_bias_load_reg_755;
assign grp_fu_215_ce = ap_const_logic_1;
assign grp_fu_220_ce = ap_const_logic_1;
assign grp_fu_229_opcode = ap_const_lv5_2;
assign grp_fu_229_p0 = reg_239;
assign grp_fu_229_p1 = ap_const_lv32_0;
assign grp_fu_234_opcode = ap_const_lv5_2;
assign grp_fu_234_p0 = reg_244;
assign grp_fu_234_p1 = ap_const_lv32_0;
assign i_13_fu_255_p2 = (i_reg_172 + ap_const_lv5_1);
assign j_10_fu_524_p2 = (j_reg_184 + ap_const_lv4_2);
assign k_9_fu_518_p2 = (ap_const_lv4_2 + k_reg_196);
assign notlhs5_fu_602_p2 = (tmp_45_fu_588_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs7_fu_660_p2 = (tmp_50_fu_646_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs9_fu_702_p2 = (tmp_55_fu_688_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs_fu_560_p2 = (tmp_40_fu_546_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notrhs1_fu_708_p2 = (tmp_96_fu_698_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs6_fu_608_p2 = (tmp_94_fu_598_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs8_fu_666_p2 = (tmp_95_fu_656_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs_fu_566_p2 = (tmp_93_fu_556_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign p_0_i3_fu_634_p3 = ((tmp_49_reg_890[0:0]===1'b1)? ap_const_lv32_3F800000: ap_const_lv32_0);
assign p_0_i6_fu_726_p3 = ((tmp_54_reg_911[0:0]===1'b1)? ap_const_lv32_3F800000: ap_const_lv32_0);
assign p_0_i9_fu_734_p3 = ((tmp_59_reg_916[0:0]===1'b1)? ap_const_lv32_3F800000: ap_const_lv32_0);
assign p_0_i_fu_626_p3 = ((tmp_44_reg_885[0:0]===1'b1)? ap_const_lv32_3F800000: ap_const_lv32_0);
assign p_shl16_fu_388_p1 = tmp_89_fu_380_p3;
assign p_shl17_fu_400_p1 = tmp_90_fu_392_p3;
assign p_shl18_fu_427_p1 = tmp_91_fu_419_p3;
assign p_shl19_fu_439_p1 = tmp_92_fu_431_p3;
assign p_shl41_cast_fu_278_p1 = tmp_108_fu_270_p3;
assign p_shl42_cast_fu_308_p1 = tmp_110_fu_300_p3;
assign p_shl_cast_fu_296_p1 = tmp_109_fu_288_p3;
assign p_shl_fu_361_p1 = tmp_88_fu_353_p3;
assign temp_3_to_int_fu_584_p1 = reg_244;
assign temp_4_to_int_fu_642_p1 = reg_239;
assign temp_5_to_int_fu_684_p1 = reg_244;
assign temp_to_int_fu_542_p1 = reg_239;
assign tmp_108_fu_270_p3 = {{i_reg_172}, {ap_const_lv2_0}};
assign tmp_109_fu_288_p3 = {{i_reg_172}, {ap_const_lv3_0}};
assign tmp_110_fu_300_p3 = {{i_reg_172}, {ap_const_lv1_0}};
assign tmp_111_fu_538_p1 = S4_d_addr15_reg_795;
assign tmp_112_fu_483_p1 = C3_y_addr11_fu_478_p2;
assign tmp_113_fu_503_p1 = C3_y_addr12_fu_498_p2;
assign tmp_114_fu_530_p1 = C3_y_addr10_reg_820;
assign tmp_115_fu_534_p1 = C3_y_addr4_reg_825;
assign tmp_40_fu_546_p4 = {{temp_to_int_fu_542_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_42_fu_572_p2 = (notrhs_fu_566_p2 | notlhs_fu_560_p2);
assign tmp_44_fu_578_p2 = (tmp_42_fu_572_p2 & grp_fu_229_p2);
assign tmp_45_fu_588_p4 = {{temp_3_to_int_fu_584_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_47_fu_614_p2 = (notrhs6_fu_608_p2 | notlhs5_fu_602_p2);
assign tmp_49_fu_620_p2 = (tmp_47_fu_614_p2 & grp_fu_234_p2);
assign tmp_50_fu_646_p4 = {{temp_4_to_int_fu_642_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_52_fu_672_p2 = (notrhs8_fu_666_p2 | notlhs7_fu_660_p2);
assign tmp_54_fu_678_p2 = (tmp_52_fu_672_p2 & grp_fu_229_p2);
assign tmp_55_fu_688_p4 = {{temp_5_to_int_fu_684_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_57_fu_714_p2 = (notrhs1_fu_708_p2 | notlhs9_fu_702_p2);
assign tmp_59_fu_720_p2 = (tmp_57_fu_714_p2 & grp_fu_234_p2);
assign tmp_61_fu_324_p2 = (j_reg_184 | ap_const_lv4_1);
assign tmp_62_fu_449_p2 = (k_reg_196 < ap_const_lv4_A? 1'b1: 1'b0);
assign tmp_63_fu_455_p4 = {{k_reg_196[ap_const_lv32_3 : ap_const_lv32_1]}};
assign tmp_66_fu_488_p2 = (k_reg_196 | ap_const_lv4_1);
assign tmp_76_trn_cast_fu_340_p1 = tmp_87_fu_330_p4;
assign tmp_77_trn_cast_fu_371_p1 = j_reg_184;
assign tmp_79_trn6_cast_fu_410_p1 = tmp_61_fu_324_p2;
assign tmp_82_trn_fu_465_p1 = tmp_63_fu_455_p4;
assign tmp_83_trn_fu_474_p1 = k_reg_196;
assign tmp_87_fu_330_p4 = {{j_reg_184[ap_const_lv32_3 : ap_const_lv32_1]}};
assign tmp_87_trn_fu_494_p1 = tmp_66_fu_488_p2;
assign tmp_88_fu_353_p3 = {{S4_d_addr13_fu_344_p2}, {ap_const_lv2_0}};
assign tmp_89_fu_380_p3 = {{C3_y_addr6_fu_375_p2}, {ap_const_lv3_0}};
assign tmp_90_fu_392_p3 = {{C3_y_addr6_fu_375_p2}, {ap_const_lv1_0}};
assign tmp_91_fu_419_p3 = {{C3_y_addr8_fu_414_p2}, {ap_const_lv3_0}};
assign tmp_92_fu_431_p3 = {{C3_y_addr8_fu_414_p2}, {ap_const_lv1_0}};
assign tmp_93_fu_556_p1 = temp_to_int_fu_542_p1[22:0];
assign tmp_94_fu_598_p1 = temp_3_to_int_fu_584_p1[22:0];
assign tmp_95_fu_656_p1 = temp_4_to_int_fu_642_p1[22:0];
assign tmp_96_fu_698_p1 = temp_5_to_int_fu_684_p1[22:0];
assign tmp_fu_261_p1 = i_reg_172;
assign tmp_s_fu_318_p2 = (j_reg_184 < ap_const_lv4_A? 1'b1: 1'b0);
assign tmp_trn_cast_fu_266_p1 = i_reg_172;
always @ (posedge ap_clk)
begin
    C3_y_addr5_reg_766[0] <= 1'b0;
    C3_y_addr7_reg_780[0] <= 1'b0;
    C3_y_addr9_reg_786[1:0] <= 2'b10;
    tmp_112_reg_800[63:32] <= 32'b00000000000000000000000000000000;
    tmp_113_reg_810[0] <= 1'b1;
    tmp_113_reg_810[63:32] <= 32'b00000000000000000000000000000000;
    C3_y_addr4_reg_825[0] <= 1'b1;
    tmp_114_reg_850[63:32] <= 32'b00000000000000000000000000000000;
    tmp_115_reg_860[0] <= 1'b1;
    tmp_115_reg_860[63:32] <= 32'b00000000000000000000000000000000;
end



endmodule //dateport_DC3_layer

