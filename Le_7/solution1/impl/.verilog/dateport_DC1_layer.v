// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dateport_DC1_layer (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        C1_bias_address0,
        C1_bias_ce0,
        C1_bias_q0,
        S2_d_address0,
        S2_d_ce0,
        S2_d_q0,
        C1_v_address0,
        C1_v_ce0,
        C1_v_q0,
        C1_v_address1,
        C1_v_ce1,
        C1_v_q1,
        C1_d_address0,
        C1_d_ce0,
        C1_d_we0,
        C1_d_d0,
        C1_d_address1,
        C1_d_ce1,
        C1_d_we1,
        C1_d_d1
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 21'b1;
parameter    ap_ST_st2_fsm_1 = 21'b10;
parameter    ap_ST_st3_fsm_2 = 21'b100;
parameter    ap_ST_st4_fsm_3 = 21'b1000;
parameter    ap_ST_st5_fsm_4 = 21'b10000;
parameter    ap_ST_st6_fsm_5 = 21'b100000;
parameter    ap_ST_st7_fsm_6 = 21'b1000000;
parameter    ap_ST_st8_fsm_7 = 21'b10000000;
parameter    ap_ST_st9_fsm_8 = 21'b100000000;
parameter    ap_ST_st10_fsm_9 = 21'b1000000000;
parameter    ap_ST_st11_fsm_10 = 21'b10000000000;
parameter    ap_ST_st12_fsm_11 = 21'b100000000000;
parameter    ap_ST_st13_fsm_12 = 21'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 21'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 21'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 21'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 21'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 21'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 21'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 21'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 21'b100000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_3E800000 = 32'b111110100000000000000000000000;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv3_6 = 3'b110;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv5_1C = 5'b11100;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv32_3F800000 = 32'b111111100000000000000000000000;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] C1_bias_address0;
output   C1_bias_ce0;
input  [31:0] C1_bias_q0;
output  [10:0] S2_d_address0;
output   S2_d_ce0;
input  [31:0] S2_d_q0;
output  [12:0] C1_v_address0;
output   C1_v_ce0;
input  [31:0] C1_v_q0;
output  [12:0] C1_v_address1;
output   C1_v_ce1;
input  [31:0] C1_v_q1;
output  [12:0] C1_d_address0;
output   C1_d_ce0;
output   C1_d_we0;
output  [31:0] C1_d_d0;
output  [12:0] C1_d_address1;
output   C1_d_ce1;
output   C1_d_we1;
output  [31:0] C1_d_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg C1_bias_ce0;
reg S2_d_ce0;
reg[12:0] C1_v_address0;
reg C1_v_ce0;
reg[12:0] C1_v_address1;
reg C1_v_ce1;
reg[12:0] C1_d_address0;
reg C1_d_ce0;
reg C1_d_we0;
reg[12:0] C1_d_address1;
reg C1_d_ce1;
reg C1_d_we1;
(* fsm_encoding = "none" *) reg   [20:0] ap_CS_fsm = 21'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_39;
wire   [31:0] grp_fu_211_p2;
reg   [31:0] reg_243;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_bdd_83;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_bdd_90;
wire   [31:0] grp_fu_215_p2;
reg   [31:0] reg_248;
wire   [2:0] i_17_fu_259_p2;
reg   [2:0] i_17_reg_773;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_102;
wire   [0:0] exitcond_fu_253_p2;
reg   [31:0] C1_bias_load_reg_783;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_116;
wire  signed [8:0] S2_d_addr10_cast_fu_300_p1;
reg  signed [8:0] S2_d_addr10_cast_reg_789;
wire  signed [9:0] C1_v_addr1_cast_fu_334_p1;
reg  signed [9:0] C1_v_addr1_cast_reg_794;
wire  signed [31:0] S2_d_addr4_fu_393_p2;
reg  signed [31:0] S2_d_addr4_reg_803;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_129;
wire   [0:0] tmp_s_fu_338_p2;
wire  signed [31:0] C1_v_addr3_fu_432_p2;
reg  signed [31:0] C1_v_addr3_reg_808;
wire  signed [31:0] C1_v_addr9_fu_471_p2;
reg  signed [31:0] C1_v_addr9_reg_814;
wire  signed [31:0] S2_d_addr5_fu_497_p2;
reg  signed [31:0] S2_d_addr5_reg_823;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_146;
wire   [0:0] tmp_81_fu_477_p2;
wire   [63:0] tmp_150_fu_511_p1;
reg   [63:0] tmp_150_reg_828;
wire   [63:0] tmp_151_fu_531_p1;
reg   [63:0] tmp_151_reg_838;
wire  signed [31:0] C1_v_addr7_fu_536_p2;
reg  signed [31:0] C1_v_addr7_reg_848;
wire  signed [31:0] C1_v_addr4_fu_541_p2;
reg  signed [31:0] C1_v_addr4_reg_853;
wire   [4:0] k_12_fu_546_p2;
reg   [4:0] k_12_reg_858;
wire   [4:0] j_13_fu_552_p2;
reg   [31:0] C1_v_load_reg_868;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_175;
reg   [31:0] C1_v_load_1_reg_873;
wire   [63:0] tmp_152_fu_558_p1;
reg   [63:0] tmp_152_reg_878;
wire   [63:0] tmp_153_fu_562_p1;
reg   [63:0] tmp_153_reg_888;
reg   [31:0] C1_v_load_2_reg_898;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_192;
reg   [31:0] C1_v_load_3_reg_903;
wire   [0:0] tmp_64_fu_606_p2;
reg   [0:0] tmp_64_reg_913;
wire   [0:0] tmp_69_fu_648_p2;
reg   [0:0] tmp_69_reg_918;
reg   [31:0] S2_d_load_reg_923;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_bdd_207;
wire   [31:0] p_0_i_fu_654_p3;
wire   [31:0] p_0_i1_fu_662_p3;
wire   [0:0] tmp_74_fu_706_p2;
reg   [0:0] tmp_74_reg_939;
wire   [0:0] tmp_79_fu_748_p2;
reg   [0:0] tmp_79_reg_944;
wire   [31:0] p_0_i2_fu_754_p3;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_bdd_224;
wire   [31:0] p_0_i3_fu_762_p3;
wire   [31:0] grp_fu_219_p2;
reg   [31:0] tmp_82_reg_959;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_bdd_235;
wire   [31:0] grp_fu_224_p2;
reg   [31:0] tmp_85_reg_964;
reg   [31:0] tmp_87_reg_969;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_bdd_245;
reg   [31:0] tmp_89_reg_974;
reg   [2:0] i_reg_176;
reg   [4:0] j_reg_188;
reg   [4:0] k_reg_200;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_bdd_265;
wire   [63:0] tmp_fu_265_p1;
wire   [63:0] tmp_149_fu_566_p1;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_bdd_275;
reg   [31:0] grp_fu_211_p0;
wire   [31:0] grp_fu_211_p1;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_289;
reg   [31:0] grp_fu_215_p0;
wire   [31:0] grp_fu_215_p1;
reg   [31:0] grp_fu_219_p0;
reg   [31:0] grp_fu_219_p1;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_bdd_302;
reg   [31:0] grp_fu_224_p0;
reg   [31:0] grp_fu_224_p1;
wire   [31:0] grp_fu_233_p0;
wire   [31:0] grp_fu_233_p1;
wire   [31:0] grp_fu_238_p0;
wire   [31:0] grp_fu_238_p1;
wire   [6:0] tmp_145_fu_270_p3;
wire   [3:0] tmp_146_fu_282_p3;
wire   [7:0] p_shl58_cast_fu_278_p1;
wire   [7:0] p_shl59_cast_fu_290_p1;
wire   [7:0] S2_d_addr2_fu_294_p2;
wire   [7:0] tmp_147_fu_304_p3;
wire   [4:0] tmp_148_fu_316_p3;
wire   [8:0] p_shl_cast_fu_312_p1;
wire   [8:0] p_shl57_cast_fu_324_p1;
wire   [8:0] C1_v_addr1_fu_328_p2;
wire   [3:0] tmp_113_fu_350_p4;
wire   [8:0] tmp_114_trn_cast_fu_360_p1;
wire  signed [8:0] S2_d_addr3_fu_364_p2;
wire   [12:0] tmp_114_fu_369_p3;
wire   [9:0] tmp_115_fu_381_p3;
wire  signed [31:0] p_shl_fu_377_p1;
wire  signed [31:0] p_shl32_fu_389_p1;
wire   [9:0] tmp_115_trn_cast_fu_399_p1;
wire  signed [9:0] C1_v_addr2_fu_403_p2;
wire   [14:0] tmp_116_fu_408_p3;
wire   [11:0] tmp_117_fu_420_p3;
wire  signed [31:0] p_shl33_fu_416_p1;
wire  signed [31:0] p_shl34_fu_428_p1;
wire   [4:0] tmp_80_fu_344_p2;
wire   [9:0] tmp_117_trn6_cast_fu_438_p1;
wire  signed [9:0] C1_v_addr8_fu_442_p2;
wire   [14:0] tmp_118_fu_447_p3;
wire   [11:0] tmp_119_fu_459_p3;
wire  signed [31:0] p_shl35_fu_455_p1;
wire  signed [31:0] p_shl36_fu_467_p1;
wire   [3:0] p_lshr_f7_cast_fu_483_p4;
wire   [31:0] tmp_119_trn_fu_493_p1;
wire   [31:0] tmp_120_trn_fu_502_p1;
wire  signed [31:0] C1_v_addr5_fu_506_p2;
wire   [4:0] tmp_84_fu_516_p2;
wire   [31:0] tmp_124_trn_fu_522_p1;
wire  signed [31:0] C1_v_addr6_fu_526_p2;
wire   [31:0] temp_to_int_fu_570_p1;
wire   [7:0] tmp_60_fu_574_p4;
wire   [22:0] tmp_120_fu_584_p1;
wire   [0:0] notrhs_fu_594_p2;
wire   [0:0] notlhs_fu_588_p2;
wire   [0:0] tmp_62_fu_600_p2;
wire   [0:0] grp_fu_233_p2;
wire   [31:0] temp_6_to_int_fu_612_p1;
wire   [7:0] tmp_65_fu_616_p4;
wire   [22:0] tmp_121_fu_626_p1;
wire   [0:0] notrhs8_fu_636_p2;
wire   [0:0] notlhs7_fu_630_p2;
wire   [0:0] tmp_67_fu_642_p2;
wire   [0:0] grp_fu_238_p2;
wire   [31:0] temp_7_to_int_fu_670_p1;
wire   [7:0] tmp_70_fu_674_p4;
wire   [22:0] tmp_122_fu_684_p1;
wire   [0:0] notrhs2_fu_694_p2;
wire   [0:0] notlhs9_fu_688_p2;
wire   [0:0] tmp_72_fu_700_p2;
wire   [31:0] temp_8_to_int_fu_712_p1;
wire   [7:0] tmp_75_fu_716_p4;
wire   [22:0] tmp_123_fu_726_p1;
wire   [0:0] notrhs3_fu_736_p2;
wire   [0:0] notlhs1_fu_730_p2;
wire   [0:0] tmp_77_fu_742_p2;
wire    grp_fu_211_ce;
wire    grp_fu_215_ce;
wire    grp_fu_219_ce;
wire    grp_fu_224_ce;
wire   [4:0] grp_fu_233_opcode;
wire   [4:0] grp_fu_238_opcode;
reg   [20:0] ap_NS_fsm;


dateport_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dateport_fadd_32ns_32ns_32_5_full_dsp_U70(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_211_p0 ),
    .din1( grp_fu_211_p1 ),
    .ce( grp_fu_211_ce ),
    .dout( grp_fu_211_p2 )
);

dateport_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dateport_fadd_32ns_32ns_32_5_full_dsp_U71(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_215_p0 ),
    .din1( grp_fu_215_p1 ),
    .ce( grp_fu_215_ce ),
    .dout( grp_fu_215_p2 )
);

dateport_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dateport_fmul_32ns_32ns_32_4_max_dsp_U72(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_219_p0 ),
    .din1( grp_fu_219_p1 ),
    .ce( grp_fu_219_ce ),
    .dout( grp_fu_219_p2 )
);

dateport_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dateport_fmul_32ns_32ns_32_4_max_dsp_U73(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_224_p0 ),
    .din1( grp_fu_224_p1 ),
    .ce( grp_fu_224_ce ),
    .dout( grp_fu_224_p2 )
);

dateport_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
dateport_fcmp_32ns_32ns_1_1_U74(
    .din0( grp_fu_233_p0 ),
    .din1( grp_fu_233_p1 ),
    .opcode( grp_fu_233_opcode ),
    .dout( grp_fu_233_p2 )
);

dateport_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
dateport_fcmp_32ns_32ns_1_1_U75(
    .din0( grp_fu_238_p0 ),
    .din1( grp_fu_238_p1 ),
    .opcode( grp_fu_238_opcode ),
    .dout( grp_fu_238_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == tmp_s_fu_338_p2))) begin
        i_reg_176 <= i_17_reg_773;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_176 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        j_reg_188 <= ap_const_lv5_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (ap_const_lv1_0 == tmp_81_fu_477_p2))) begin
        j_reg_188 <= j_13_fu_552_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == tmp_s_fu_338_p2))) begin
        k_reg_200 <= ap_const_lv5_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        k_reg_200 <= k_12_reg_858;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        C1_bias_load_reg_783 <= C1_bias_q0;
        C1_v_addr1_cast_reg_794[9 : 2] <= C1_v_addr1_cast_fu_334_p1[9 : 2];
        S2_d_addr10_cast_reg_789[8 : 1] <= S2_d_addr10_cast_fu_300_p1[8 : 1];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == tmp_s_fu_338_p2))) begin
        C1_v_addr3_reg_808[31 : 2] <= C1_v_addr3_fu_432_p2[31 : 2];
        C1_v_addr9_reg_814[31 : 3] <= C1_v_addr9_fu_471_p2[31 : 3];
        S2_d_addr4_reg_803[31 : 1] <= S2_d_addr4_fu_393_p2[31 : 1];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & ~(ap_const_lv1_0 == tmp_81_fu_477_p2))) begin
        C1_v_addr4_reg_853[31 : 1] <= C1_v_addr4_fu_541_p2[31 : 1];
        C1_v_addr7_reg_848 <= C1_v_addr7_fu_536_p2;
        S2_d_addr5_reg_823 <= S2_d_addr5_fu_497_p2;
        k_12_reg_858 <= k_12_fu_546_p2;
        tmp_150_reg_828[31 : 0] <= tmp_150_fu_511_p1[31 : 0];
        tmp_151_reg_838[31 : 1] <= tmp_151_fu_531_p1[31 : 1];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        C1_v_load_1_reg_873 <= C1_v_q1;
        C1_v_load_reg_868 <= C1_v_q0;
        tmp_152_reg_878[31 : 0] <= tmp_152_fu_558_p1[31 : 0];
        tmp_153_reg_888[31 : 1] <= tmp_153_fu_562_p1[31 : 1];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        C1_v_load_2_reg_898 <= C1_v_q0;
        C1_v_load_3_reg_903 <= C1_v_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        S2_d_load_reg_923 <= S2_d_q0;
        tmp_74_reg_939 <= tmp_74_fu_706_p2;
        tmp_79_reg_944 <= tmp_79_fu_748_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_17_reg_773 <= i_17_fu_259_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) | (ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11))) begin
        reg_243 <= grp_fu_211_p2;
        reg_248 <= grp_fu_215_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        tmp_64_reg_913 <= tmp_64_fu_606_p2;
        tmp_69_reg_918 <= tmp_69_fu_648_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        tmp_82_reg_959 <= grp_fu_219_p2;
        tmp_85_reg_964 <= grp_fu_224_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        tmp_87_reg_969 <= grp_fu_219_p2;
        tmp_89_reg_974 <= grp_fu_224_p2;
    end
end

/// C1_bias_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        C1_bias_ce0 = ap_const_logic_1;
    end else begin
        C1_bias_ce0 = ap_const_logic_0;
    end
end

/// C1_d_address0 assign process. ///
always @ (tmp_150_reg_828 or tmp_152_reg_878 or ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st20_fsm_19)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        C1_d_address0 = tmp_152_reg_878;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        C1_d_address0 = tmp_150_reg_828;
    end else begin
        C1_d_address0 = 'bx;
    end
end

/// C1_d_address1 assign process. ///
always @ (tmp_151_reg_838 or tmp_153_reg_888 or ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st20_fsm_19)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        C1_d_address1 = tmp_153_reg_888;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        C1_d_address1 = tmp_151_reg_838;
    end else begin
        C1_d_address1 = 'bx;
    end
end

/// C1_d_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st20_fsm_19)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20) | (ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19))) begin
        C1_d_ce0 = ap_const_logic_1;
    end else begin
        C1_d_ce0 = ap_const_logic_0;
    end
end

/// C1_d_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st20_fsm_19)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20) | (ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19))) begin
        C1_d_ce1 = ap_const_logic_1;
    end else begin
        C1_d_ce1 = ap_const_logic_0;
    end
end

/// C1_d_we0 assign process. ///
always @ (ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st20_fsm_19)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20) | (ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19))) begin
        C1_d_we0 = ap_const_logic_1;
    end else begin
        C1_d_we0 = ap_const_logic_0;
    end
end

/// C1_d_we1 assign process. ///
always @ (ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st20_fsm_19)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20) | (ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19))) begin
        C1_d_we1 = ap_const_logic_1;
    end else begin
        C1_d_we1 = ap_const_logic_0;
    end
end

/// C1_v_address0 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4 or tmp_150_fu_511_p1 or ap_sig_cseq_ST_st6_fsm_5 or tmp_152_fu_558_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        C1_v_address0 = tmp_152_fu_558_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        C1_v_address0 = tmp_150_fu_511_p1;
    end else begin
        C1_v_address0 = 'bx;
    end
end

/// C1_v_address1 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4 or tmp_151_fu_531_p1 or ap_sig_cseq_ST_st6_fsm_5 or tmp_153_fu_562_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        C1_v_address1 = tmp_153_fu_562_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        C1_v_address1 = tmp_151_fu_531_p1;
    end else begin
        C1_v_address1 = 'bx;
    end
end

/// C1_v_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st6_fsm_5)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5))) begin
        C1_v_ce0 = ap_const_logic_1;
    end else begin
        C1_v_ce0 = ap_const_logic_0;
    end
end

/// C1_v_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st6_fsm_5)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5))) begin
        C1_v_ce1 = ap_const_logic_1;
    end else begin
        C1_v_ce1 = ap_const_logic_0;
    end
end

/// S2_d_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st12_fsm_11)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        S2_d_ce0 = ap_const_logic_1;
    end else begin
        S2_d_ce0 = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st2_fsm_1 or exitcond_fu_253_p2)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond_fu_253_p2 == ap_const_lv1_0)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or exitcond_fu_253_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond_fu_253_p2 == ap_const_lv1_0))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st11_fsm_10 assign process. ///
always @ (ap_sig_bdd_83)
begin
    if (ap_sig_bdd_83) begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st12_fsm_11 assign process. ///
always @ (ap_sig_bdd_90)
begin
    if (ap_sig_bdd_90) begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st13_fsm_12 assign process. ///
always @ (ap_sig_bdd_207)
begin
    if (ap_sig_bdd_207) begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st14_fsm_13 assign process. ///
always @ (ap_sig_bdd_224)
begin
    if (ap_sig_bdd_224) begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st16_fsm_15 assign process. ///
always @ (ap_sig_bdd_235)
begin
    if (ap_sig_bdd_235) begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st17_fsm_16 assign process. ///
always @ (ap_sig_bdd_245)
begin
    if (ap_sig_bdd_245) begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st18_fsm_17 assign process. ///
always @ (ap_sig_bdd_302)
begin
    if (ap_sig_bdd_302) begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_39)
begin
    if (ap_sig_bdd_39) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st20_fsm_19 assign process. ///
always @ (ap_sig_bdd_275)
begin
    if (ap_sig_bdd_275) begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st21_fsm_20 assign process. ///
always @ (ap_sig_bdd_265)
begin
    if (ap_sig_bdd_265) begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_102)
begin
    if (ap_sig_bdd_102) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_116)
begin
    if (ap_sig_bdd_116) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_129)
begin
    if (ap_sig_bdd_129) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_146)
begin
    if (ap_sig_bdd_146) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_175)
begin
    if (ap_sig_bdd_175) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_192)
begin
    if (ap_sig_bdd_192) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_7 assign process. ///
always @ (ap_sig_bdd_289)
begin
    if (ap_sig_bdd_289) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

/// grp_fu_211_p0 assign process. ///
always @ (C1_v_load_reg_868 or C1_v_load_2_reg_898 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        grp_fu_211_p0 = C1_v_load_2_reg_898;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        grp_fu_211_p0 = C1_v_load_reg_868;
    end else begin
        grp_fu_211_p0 = 'bx;
    end
end

/// grp_fu_215_p0 assign process. ///
always @ (C1_v_load_1_reg_873 or ap_sig_cseq_ST_st7_fsm_6 or C1_v_load_3_reg_903 or ap_sig_cseq_ST_st8_fsm_7)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        grp_fu_215_p0 = C1_v_load_3_reg_903;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        grp_fu_215_p0 = C1_v_load_1_reg_873;
    end else begin
        grp_fu_215_p0 = 'bx;
    end
end

/// grp_fu_219_p0 assign process. ///
always @ (S2_d_q0 or S2_d_load_reg_923 or ap_sig_cseq_ST_st13_fsm_12 or ap_sig_cseq_ST_st14_fsm_13 or tmp_82_reg_959 or tmp_87_reg_969 or ap_sig_cseq_ST_st17_fsm_16 or ap_sig_cseq_ST_st18_fsm_17)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        grp_fu_219_p0 = tmp_87_reg_969;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        grp_fu_219_p0 = tmp_82_reg_959;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        grp_fu_219_p0 = S2_d_load_reg_923;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        grp_fu_219_p0 = S2_d_q0;
    end else begin
        grp_fu_219_p0 = 'bx;
    end
end

/// grp_fu_219_p1 assign process. ///
always @ (ap_sig_cseq_ST_st13_fsm_12 or p_0_i_fu_654_p3 or p_0_i2_fu_754_p3 or ap_sig_cseq_ST_st14_fsm_13 or ap_sig_cseq_ST_st17_fsm_16 or ap_sig_cseq_ST_st18_fsm_17)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16) | (ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17))) begin
        grp_fu_219_p1 = ap_const_lv32_3E800000;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        grp_fu_219_p1 = p_0_i2_fu_754_p3;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        grp_fu_219_p1 = p_0_i_fu_654_p3;
    end else begin
        grp_fu_219_p1 = 'bx;
    end
end

/// grp_fu_224_p0 assign process. ///
always @ (S2_d_q0 or S2_d_load_reg_923 or ap_sig_cseq_ST_st13_fsm_12 or ap_sig_cseq_ST_st14_fsm_13 or tmp_85_reg_964 or ap_sig_cseq_ST_st17_fsm_16 or tmp_89_reg_974 or ap_sig_cseq_ST_st18_fsm_17)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        grp_fu_224_p0 = tmp_89_reg_974;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        grp_fu_224_p0 = tmp_85_reg_964;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        grp_fu_224_p0 = S2_d_load_reg_923;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        grp_fu_224_p0 = S2_d_q0;
    end else begin
        grp_fu_224_p0 = 'bx;
    end
end

/// grp_fu_224_p1 assign process. ///
always @ (ap_sig_cseq_ST_st13_fsm_12 or p_0_i1_fu_662_p3 or ap_sig_cseq_ST_st14_fsm_13 or p_0_i3_fu_762_p3 or ap_sig_cseq_ST_st17_fsm_16 or ap_sig_cseq_ST_st18_fsm_17)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16) | (ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17))) begin
        grp_fu_224_p1 = ap_const_lv32_3E800000;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        grp_fu_224_p1 = p_0_i3_fu_762_p3;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        grp_fu_224_p1 = p_0_i1_fu_662_p3;
    end else begin
        grp_fu_224_p1 = 'bx;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or exitcond_fu_253_p2 or tmp_s_fu_338_p2 or tmp_81_fu_477_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(exitcond_fu_253_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            if (~(ap_const_lv1_0 == tmp_s_fu_338_p2)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st5_fsm_4 : 
        begin
            if ((ap_const_lv1_0 == tmp_81_fu_477_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C1_bias_address0 = tmp_fu_265_p1;
assign C1_d_d0 = grp_fu_219_p2;
assign C1_d_d1 = grp_fu_224_p2;
assign C1_v_addr1_cast_fu_334_p1 = $signed(C1_v_addr1_fu_328_p2);
assign C1_v_addr1_fu_328_p2 = (p_shl_cast_fu_312_p1 - p_shl57_cast_fu_324_p1);
assign C1_v_addr2_fu_403_p2 = ($signed(C1_v_addr1_cast_reg_794) + $signed(tmp_115_trn_cast_fu_399_p1));
assign C1_v_addr3_fu_432_p2 = ($signed(p_shl33_fu_416_p1) - $signed(p_shl34_fu_428_p1));
assign C1_v_addr4_fu_541_p2 = ($signed(C1_v_addr9_reg_814) + $signed(tmp_124_trn_fu_522_p1));
assign C1_v_addr5_fu_506_p2 = ($signed(C1_v_addr3_reg_808) + $signed(tmp_120_trn_fu_502_p1));
assign C1_v_addr6_fu_526_p2 = ($signed(C1_v_addr3_reg_808) + $signed(tmp_124_trn_fu_522_p1));
assign C1_v_addr7_fu_536_p2 = ($signed(C1_v_addr9_reg_814) + $signed(tmp_120_trn_fu_502_p1));
assign C1_v_addr8_fu_442_p2 = ($signed(C1_v_addr1_cast_reg_794) + $signed(tmp_117_trn6_cast_fu_438_p1));
assign C1_v_addr9_fu_471_p2 = ($signed(p_shl35_fu_455_p1) - $signed(p_shl36_fu_467_p1));
assign S2_d_addr10_cast_fu_300_p1 = $signed(S2_d_addr2_fu_294_p2);
assign S2_d_addr2_fu_294_p2 = (p_shl58_cast_fu_278_p1 - p_shl59_cast_fu_290_p1);
assign S2_d_addr3_fu_364_p2 = ($signed(S2_d_addr10_cast_reg_789) + $signed(tmp_114_trn_cast_fu_360_p1));
assign S2_d_addr4_fu_393_p2 = ($signed(p_shl_fu_377_p1) - $signed(p_shl32_fu_389_p1));
assign S2_d_addr5_fu_497_p2 = ($signed(S2_d_addr4_reg_803) + $signed(tmp_119_trn_fu_493_p1));
assign S2_d_address0 = tmp_149_fu_566_p1;

/// ap_sig_bdd_102 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_102 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_116 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_116 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_129 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_129 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_146 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_146 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_175 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_175 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_192 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_192 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_207 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_207 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end

/// ap_sig_bdd_224 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_224 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end

/// ap_sig_bdd_235 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_235 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end

/// ap_sig_bdd_245 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_245 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_10]);
end

/// ap_sig_bdd_265 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_265 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_14]);
end

/// ap_sig_bdd_275 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_275 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_13]);
end

/// ap_sig_bdd_289 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_289 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_302 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_302 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_11]);
end

/// ap_sig_bdd_39 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_39 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_83 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_83 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end

/// ap_sig_bdd_90 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_90 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end
assign exitcond_fu_253_p2 = (i_reg_176 == ap_const_lv3_6? 1'b1: 1'b0);
assign grp_fu_211_ce = ap_const_logic_1;
assign grp_fu_211_p1 = C1_bias_load_reg_783;
assign grp_fu_215_ce = ap_const_logic_1;
assign grp_fu_215_p1 = C1_bias_load_reg_783;
assign grp_fu_219_ce = ap_const_logic_1;
assign grp_fu_224_ce = ap_const_logic_1;
assign grp_fu_233_opcode = ap_const_lv5_2;
assign grp_fu_233_p0 = reg_243;
assign grp_fu_233_p1 = ap_const_lv32_0;
assign grp_fu_238_opcode = ap_const_lv5_2;
assign grp_fu_238_p0 = reg_248;
assign grp_fu_238_p1 = ap_const_lv32_0;
assign i_17_fu_259_p2 = (i_reg_176 + ap_const_lv3_1);
assign j_13_fu_552_p2 = (j_reg_188 + ap_const_lv5_2);
assign k_12_fu_546_p2 = (ap_const_lv5_2 + k_reg_200);
assign notlhs1_fu_730_p2 = (tmp_75_fu_716_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs7_fu_630_p2 = (tmp_65_fu_616_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs9_fu_688_p2 = (tmp_70_fu_674_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs_fu_588_p2 = (tmp_60_fu_574_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notrhs2_fu_694_p2 = (tmp_122_fu_684_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs3_fu_736_p2 = (tmp_123_fu_726_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs8_fu_636_p2 = (tmp_121_fu_626_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs_fu_594_p2 = (tmp_120_fu_584_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign p_0_i1_fu_662_p3 = ((tmp_69_reg_918[0:0]===1'b1)? ap_const_lv32_3F800000: ap_const_lv32_0);
assign p_0_i2_fu_754_p3 = ((tmp_74_reg_939[0:0]===1'b1)? ap_const_lv32_3F800000: ap_const_lv32_0);
assign p_0_i3_fu_762_p3 = ((tmp_79_reg_944[0:0]===1'b1)? ap_const_lv32_3F800000: ap_const_lv32_0);
assign p_0_i_fu_654_p3 = ((tmp_64_reg_913[0:0]===1'b1)? ap_const_lv32_3F800000: ap_const_lv32_0);
assign p_lshr_f7_cast_fu_483_p4 = {{k_reg_200[ap_const_lv32_4 : ap_const_lv32_1]}};
assign p_shl32_fu_389_p1 = $signed(tmp_115_fu_381_p3);
assign p_shl33_fu_416_p1 = $signed(tmp_116_fu_408_p3);
assign p_shl34_fu_428_p1 = $signed(tmp_117_fu_420_p3);
assign p_shl35_fu_455_p1 = $signed(tmp_118_fu_447_p3);
assign p_shl36_fu_467_p1 = $signed(tmp_119_fu_459_p3);
assign p_shl57_cast_fu_324_p1 = tmp_148_fu_316_p3;
assign p_shl58_cast_fu_278_p1 = tmp_145_fu_270_p3;
assign p_shl59_cast_fu_290_p1 = tmp_146_fu_282_p3;
assign p_shl_cast_fu_312_p1 = tmp_147_fu_304_p3;
assign p_shl_fu_377_p1 = $signed(tmp_114_fu_369_p3);
assign temp_6_to_int_fu_612_p1 = reg_248;
assign temp_7_to_int_fu_670_p1 = reg_243;
assign temp_8_to_int_fu_712_p1 = reg_248;
assign temp_to_int_fu_570_p1 = reg_243;
assign tmp_113_fu_350_p4 = {{j_reg_188[ap_const_lv32_4 : ap_const_lv32_1]}};
assign tmp_114_fu_369_p3 = {{S2_d_addr3_fu_364_p2}, {ap_const_lv4_0}};
assign tmp_114_trn_cast_fu_360_p1 = tmp_113_fu_350_p4;
assign tmp_115_fu_381_p3 = {{S2_d_addr3_fu_364_p2}, {ap_const_lv1_0}};
assign tmp_115_trn_cast_fu_399_p1 = j_reg_188;
assign tmp_116_fu_408_p3 = {{C1_v_addr2_fu_403_p2}, {ap_const_lv5_0}};
assign tmp_117_fu_420_p3 = {{C1_v_addr2_fu_403_p2}, {ap_const_lv2_0}};
assign tmp_117_trn6_cast_fu_438_p1 = tmp_80_fu_344_p2;
assign tmp_118_fu_447_p3 = {{C1_v_addr8_fu_442_p2}, {ap_const_lv5_0}};
assign tmp_119_fu_459_p3 = {{C1_v_addr8_fu_442_p2}, {ap_const_lv2_0}};
assign tmp_119_trn_fu_493_p1 = p_lshr_f7_cast_fu_483_p4;
assign tmp_120_fu_584_p1 = temp_to_int_fu_570_p1[22:0];
assign tmp_120_trn_fu_502_p1 = k_reg_200;
assign tmp_121_fu_626_p1 = temp_6_to_int_fu_612_p1[22:0];
assign tmp_122_fu_684_p1 = temp_7_to_int_fu_670_p1[22:0];
assign tmp_123_fu_726_p1 = temp_8_to_int_fu_712_p1[22:0];
assign tmp_124_trn_fu_522_p1 = tmp_84_fu_516_p2;
assign tmp_145_fu_270_p3 = {{i_reg_176}, {ap_const_lv4_0}};
assign tmp_146_fu_282_p3 = {{i_reg_176}, {ap_const_lv1_0}};
assign tmp_147_fu_304_p3 = {{i_reg_176}, {ap_const_lv5_0}};
assign tmp_148_fu_316_p3 = {{i_reg_176}, {ap_const_lv2_0}};
assign tmp_149_fu_566_p1 = $unsigned(S2_d_addr5_reg_823);
assign tmp_150_fu_511_p1 = $unsigned(C1_v_addr5_fu_506_p2);
assign tmp_151_fu_531_p1 = $unsigned(C1_v_addr6_fu_526_p2);
assign tmp_152_fu_558_p1 = $unsigned(C1_v_addr7_reg_848);
assign tmp_153_fu_562_p1 = $unsigned(C1_v_addr4_reg_853);
assign tmp_60_fu_574_p4 = {{temp_to_int_fu_570_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_62_fu_600_p2 = (notrhs_fu_594_p2 | notlhs_fu_588_p2);
assign tmp_64_fu_606_p2 = (tmp_62_fu_600_p2 & grp_fu_233_p2);
assign tmp_65_fu_616_p4 = {{temp_6_to_int_fu_612_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_67_fu_642_p2 = (notrhs8_fu_636_p2 | notlhs7_fu_630_p2);
assign tmp_69_fu_648_p2 = (tmp_67_fu_642_p2 & grp_fu_238_p2);
assign tmp_70_fu_674_p4 = {{temp_7_to_int_fu_670_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_72_fu_700_p2 = (notrhs2_fu_694_p2 | notlhs9_fu_688_p2);
assign tmp_74_fu_706_p2 = (tmp_72_fu_700_p2 & grp_fu_233_p2);
assign tmp_75_fu_716_p4 = {{temp_8_to_int_fu_712_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_77_fu_742_p2 = (notrhs3_fu_736_p2 | notlhs1_fu_730_p2);
assign tmp_79_fu_748_p2 = (tmp_77_fu_742_p2 & grp_fu_238_p2);
assign tmp_80_fu_344_p2 = (j_reg_188 | ap_const_lv5_1);
assign tmp_81_fu_477_p2 = (k_reg_200 < ap_const_lv5_1C? 1'b1: 1'b0);
assign tmp_84_fu_516_p2 = (k_reg_200 | ap_const_lv5_1);
assign tmp_fu_265_p1 = i_reg_176;
assign tmp_s_fu_338_p2 = (j_reg_188 < ap_const_lv5_1C? 1'b1: 1'b0);
always @ (posedge ap_clk)
begin
    S2_d_addr10_cast_reg_789[0] <= 1'b0;
    C1_v_addr1_cast_reg_794[1:0] <= 2'b00;
    S2_d_addr4_reg_803[0] <= 1'b0;
    C1_v_addr3_reg_808[1:0] <= 2'b00;
    C1_v_addr9_reg_814[2:0] <= 3'b100;
    tmp_150_reg_828[63:32] <= 32'b00000000000000000000000000000000;
    tmp_151_reg_838[0] <= 1'b1;
    tmp_151_reg_838[63:32] <= 32'b00000000000000000000000000000000;
    C1_v_addr4_reg_853[0] <= 1'b1;
    tmp_152_reg_878[63:32] <= 32'b00000000000000000000000000000000;
    tmp_153_reg_888[0] <= 1'b1;
    tmp_153_reg_888[63:32] <= 32'b00000000000000000000000000000000;
end



endmodule //dateport_DC1_layer

