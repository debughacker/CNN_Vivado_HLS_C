// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dateport_DS4_layer (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        S4_d_address0,
        S4_d_ce0,
        S4_d_we0,
        S4_d_d0,
        S4_d_q0,
        S4_d_address1,
        S4_d_ce1,
        S4_d_we1,
        S4_d_d1,
        S4_d_q1,
        C5_d_address0,
        C5_d_ce0,
        C5_d_q0,
        C5_mapData_address0,
        C5_mapData_ce0,
        C5_mapData_q0,
        C5_mapData_address1,
        C5_mapData_ce1,
        C5_mapData_q1
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 10'b1;
parameter    ap_ST_st2_fsm_1 = 10'b10;
parameter    ap_ST_st3_fsm_2 = 10'b100;
parameter    ap_ST_st4_fsm_3 = 10'b1000;
parameter    ap_ST_pp0_stg0_fsm_4 = 10'b10000;
parameter    ap_ST_pp0_stg1_fsm_5 = 10'b100000;
parameter    ap_ST_pp0_stg2_fsm_6 = 10'b1000000;
parameter    ap_ST_pp0_stg3_fsm_7 = 10'b10000000;
parameter    ap_ST_pp0_stg4_fsm_8 = 10'b100000000;
parameter    ap_ST_st21_fsm_9 = 10'b1000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv12_0 = 12'b000000000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv3_5 = 3'b101;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv12_960 = 12'b100101100000;
parameter    ap_const_lv12_1 = 12'b1;
parameter    ap_const_lv8_96 = 8'b10010110;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] S4_d_address0;
output   S4_d_ce0;
output   S4_d_we0;
output  [31:0] S4_d_d0;
input  [31:0] S4_d_q0;
output  [8:0] S4_d_address1;
output   S4_d_ce1;
output   S4_d_we1;
output  [31:0] S4_d_d1;
input  [31:0] S4_d_q1;
output  [4:0] C5_d_address0;
output   C5_d_ce0;
input  [31:0] C5_d_q0;
output  [13:0] C5_mapData_address0;
output   C5_mapData_ce0;
input  [31:0] C5_mapData_q0;
output  [13:0] C5_mapData_address1;
output   C5_mapData_ce1;
input  [31:0] C5_mapData_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[8:0] S4_d_address0;
reg S4_d_ce0;
reg S4_d_we0;
reg[31:0] S4_d_d0;
reg[8:0] S4_d_address1;
reg S4_d_ce1;
reg S4_d_we1;
reg C5_d_ce0;
reg[13:0] C5_mapData_address0;
reg C5_mapData_ce0;
reg[13:0] C5_mapData_address1;
reg C5_mapData_ce1;
(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm = 10'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_28;
reg   [11:0] indvar_flatten5_reg_228;
reg   [4:0] i_1_reg_239;
reg   [7:0] indvar_flatten_reg_250;
reg   [4:0] j_reg_261;
reg   [2:0] k_reg_272;
wire   [31:0] grp_fu_283_p2;
reg   [31:0] reg_293;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_4;
reg    ap_sig_bdd_78;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg    ap_reg_ppiten_pp0_it3 = 1'b0;
reg   [0:0] exitcond_flatten5_reg_750;
reg   [0:0] ap_reg_ppstg_exitcond_flatten5_reg_750_pp0_it1;
reg    ap_sig_cseq_ST_pp0_stg1_fsm_5;
reg    ap_sig_bdd_98;
reg   [0:0] ap_reg_ppstg_exitcond_flatten5_reg_750_pp0_it2;
reg    ap_sig_cseq_ST_pp0_stg4_fsm_8;
reg    ap_sig_bdd_109;
wire   [0:0] exitcond6_fu_299_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_120;
wire   [4:0] i_12_fu_305_p2;
reg   [4:0] i_12_reg_719;
wire   [7:0] S4_d_addr1_fu_327_p2;
reg   [7:0] S4_d_addr1_reg_724;
wire   [2:0] p_1_fu_339_p2;
reg   [2:0] p_1_reg_732;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_135;
wire   [31:0] S4_d_addr10_fu_370_p2;
reg   [31:0] S4_d_addr10_reg_737;
wire   [0:0] exitcond5_fu_333_p2;
wire   [2:0] q_1_fu_382_p2;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_149;
wire   [0:0] exitcond_flatten5_fu_402_p2;
wire   [11:0] indvar_flatten_next5_fu_408_p2;
reg   [11:0] indvar_flatten_next5_reg_754;
wire   [4:0] i_1_mid2_fu_452_p3;
reg   [4:0] i_1_mid2_reg_759;
wire   [2:0] k_mid2_fu_472_p3;
reg   [2:0] k_mid2_reg_766;
wire   [4:0] j_mid2_fu_480_p3;
reg   [4:0] j_mid2_reg_773;
wire   [9:0] C5_mapData_addr8_fu_504_p2;
reg   [9:0] C5_mapData_addr8_reg_779;
wire   [7:0] indvar_flatten_next_fu_516_p3;
reg   [7:0] indvar_flatten_next_reg_785;
wire   [31:0] C5_mapData_addr2_fu_569_p2;
reg   [31:0] C5_mapData_addr2_reg_795;
wire   [31:0] S4_d_addr4_fu_619_p2;
reg   [31:0] S4_d_addr4_reg_808;
reg   [8:0] S4_d_addr_1_reg_816;
reg   [8:0] ap_reg_ppstg_S4_d_addr_1_reg_816_pp0_it1;
wire   [2:0] k_8_fu_630_p2;
reg   [2:0] k_8_reg_822;
reg   [31:0] C5_d_load_reg_827;
reg    ap_sig_cseq_ST_pp0_stg2_fsm_6;
reg    ap_sig_bdd_193;
reg   [31:0] S4_d_load_reg_837;
reg   [8:0] S4_d_addr_2_reg_847;
reg   [8:0] ap_reg_ppstg_S4_d_addr_2_reg_847_pp0_it1;
reg   [8:0] ap_reg_ppstg_S4_d_addr_2_reg_847_pp0_it2;
reg   [8:0] S4_d_addr_3_reg_857;
reg   [8:0] ap_reg_ppstg_S4_d_addr_3_reg_857_pp0_it1;
reg   [8:0] ap_reg_ppstg_S4_d_addr_3_reg_857_pp0_it2;
reg   [8:0] S4_d_addr_4_reg_862;
reg   [8:0] ap_reg_ppstg_S4_d_addr_4_reg_862_pp0_it1;
reg   [8:0] ap_reg_ppstg_S4_d_addr_4_reg_862_pp0_it2;
reg   [8:0] S4_d_addr_5_reg_868;
reg   [8:0] ap_reg_ppstg_S4_d_addr_5_reg_868_pp0_it1;
reg   [8:0] ap_reg_ppstg_S4_d_addr_5_reg_868_pp0_it2;
reg    ap_sig_cseq_ST_pp0_stg3_fsm_7;
reg    ap_sig_bdd_232;
reg   [31:0] S4_d_load_1_reg_879;
reg   [31:0] C5_mapData_load_2_reg_884;
reg   [31:0] S4_d_load_2_reg_889;
reg   [31:0] C5_mapData_load_3_reg_904;
reg   [31:0] S4_d_load_3_reg_909;
reg   [31:0] C5_mapData_load_4_reg_914;
wire   [31:0] grp_fu_287_p2;
reg   [31:0] tmp_48_reg_919;
reg   [31:0] tmp_119_1_reg_924;
reg   [31:0] tmp_119_2_reg_929;
reg   [31:0] tmp_119_3_reg_934;
reg   [31:0] tmp_119_4_reg_939;
reg   [31:0] S4_d_load_4_reg_944;
reg   [31:0] tmp_120_2_reg_949;
reg   [31:0] tmp_120_3_reg_954;
reg   [4:0] i_reg_195;
reg   [2:0] p_reg_206;
wire   [0:0] exitcond4_fu_376_p2;
reg   [2:0] q_reg_217;
reg   [11:0] indvar_flatten5_phi_fu_232_p4;
reg   [4:0] i_1_phi_fu_243_p4;
reg   [7:0] indvar_flatten_phi_fu_254_p4;
reg   [4:0] j_phi_fu_265_p4;
reg   [2:0] k_phi_fu_276_p4;
wire   [63:0] tmp_107_fu_397_p1;
wire   [63:0] tmp_s_fu_524_p1;
wire   [63:0] tmp_96_fu_575_p1;
wire   [63:0] tmp_98_fu_625_p1;
wire   [63:0] tmp_99_fu_640_p1;
wire   [63:0] tmp_100_fu_650_p1;
wire   [63:0] tmp_101_fu_660_p1;
wire   [63:0] tmp_102_fu_670_p1;
wire   [63:0] tmp_104_fu_680_p1;
wire   [63:0] tmp_106_fu_690_p1;
wire   [63:0] tmp_103_fu_700_p1;
wire   [63:0] tmp_105_fu_710_p1;
reg   [31:0] grp_fu_283_p0;
reg   [31:0] grp_fu_283_p1;
reg   [31:0] grp_fu_287_p0;
reg   [31:0] grp_fu_287_p1;
wire   [6:0] tmp_fu_315_p3;
wire   [7:0] tmp_trn_cast_fu_311_p1;
wire   [7:0] p_shl_cast_fu_323_p1;
wire   [7:0] tmp_69_trn_cast_fu_345_p1;
wire   [7:0] S4_d_addr9_fu_349_p2;
wire   [9:0] tmp_86_fu_358_p3;
wire   [31:0] S4_d_addr9_cast_fu_354_p1;
wire   [31:0] p_shl15_fu_366_p1;
wire   [31:0] tmp_71_trn_fu_388_p1;
wire   [31:0] S4_d_addr11_fu_392_p2;
wire   [0:0] exitcond_flatten_fu_414_p2;
wire   [0:0] exitcond_fu_434_p2;
wire   [0:0] not_exitcond_flatten_fu_428_p2;
wire   [4:0] i_s_fu_446_p2;
wire   [4:0] j_mid_fu_420_p3;
wire   [0:0] exitcond1_mid_fu_440_p2;
wire   [0:0] tmp_94_fu_466_p2;
wire   [4:0] j_9_fu_460_p2;
wire   [8:0] tmp_95_fu_492_p3;
wire   [9:0] tmp_trn_cast_34_fu_488_p1;
wire   [9:0] C5_mapData_addr7_cast_fu_500_p1;
wire   [7:0] indvar_flatten_op_fu_510_p2;
wire   [11:0] tmp_83_fu_540_p3;
wire   [31:0] p_shl_fu_547_p1;
wire   [31:0] C5_mapData_addr8_cast_fu_531_p1;
wire   [31:0] tmp_72_trn_fu_534_p1;
wire   [31:0] C5_mapData_addr9_fu_551_p2;
wire   [31:0] C5_mapData_addr1_fu_557_p2;
wire   [31:0] tmp_84_fu_563_p2;
wire   [6:0] tmp_97_fu_580_p3;
wire   [7:0] p_shl38_cast_fu_587_p1;
wire   [7:0] tmp_trn_cast1_fu_528_p1;
wire   [7:0] tmp_72_trn_cast_fu_537_p1;
wire   [7:0] S4_d_addr2_fu_591_p2;
wire   [7:0] S4_d_addr3_fu_597_p2;
wire   [9:0] tmp_85_fu_607_p3;
wire   [31:0] p_shl14_fu_615_p1;
wire   [31:0] S4_d_addr3_cast_fu_603_p1;
wire   [31:0] C5_mapData_addr3_fu_635_p2;
wire   [31:0] S4_d_addr5_fu_645_p2;
wire   [31:0] C5_mapData_addr4_fu_655_p2;
wire   [31:0] S4_d_addr6_fu_665_p2;
wire   [31:0] S4_d_addr7_fu_675_p2;
wire   [31:0] S4_d_addr8_fu_685_p2;
wire   [31:0] C5_mapData_addr5_fu_695_p2;
wire   [31:0] C5_mapData_addr6_fu_705_p2;
wire    grp_fu_283_ce;
wire    grp_fu_287_ce;
reg    ap_sig_cseq_ST_st21_fsm_9;
reg    ap_sig_bdd_625;
reg   [9:0] ap_NS_fsm;


dateport_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dateport_fadd_32ns_32ns_32_5_full_dsp_U49(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_283_p0 ),
    .din1( grp_fu_283_p1 ),
    .ce( grp_fu_283_ce ),
    .dout( grp_fu_283_p2 )
);

dateport_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dateport_fmul_32ns_32ns_32_4_max_dsp_U50(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_287_p0 ),
    .din1( grp_fu_287_p1 ),
    .ce( grp_fu_287_ce ),
    .dout( grp_fu_287_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & ~(ap_const_lv1_0 == exitcond_flatten5_fu_402_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond6_fu_299_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8) & (exitcond_flatten5_reg_750 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond6_fu_299_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8) & ~(exitcond_flatten5_reg_750 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8)) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end
    end
end

/// ap_reg_ppiten_pp0_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it3
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8)) begin
            ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond6_fu_299_p2))) begin
            ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond6_fu_299_p2))) begin
        i_1_reg_239 <= ap_const_lv5_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten5_reg_750 == ap_const_lv1_0))) begin
        i_1_reg_239 <= i_1_mid2_reg_759;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == exitcond5_fu_333_p2))) begin
        i_reg_195 <= i_12_reg_719;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_195 <= ap_const_lv5_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond6_fu_299_p2))) begin
        indvar_flatten5_reg_228 <= ap_const_lv12_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten5_reg_750 == ap_const_lv1_0))) begin
        indvar_flatten5_reg_228 <= indvar_flatten_next5_reg_754;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond6_fu_299_p2))) begin
        indvar_flatten_reg_250 <= ap_const_lv8_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten5_reg_750 == ap_const_lv1_0))) begin
        indvar_flatten_reg_250 <= indvar_flatten_next_reg_785;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond6_fu_299_p2))) begin
        j_reg_261 <= ap_const_lv5_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten5_reg_750 == ap_const_lv1_0))) begin
        j_reg_261 <= j_mid2_reg_773;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond6_fu_299_p2))) begin
        k_reg_272 <= ap_const_lv3_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten5_reg_750 == ap_const_lv1_0))) begin
        k_reg_272 <= k_8_reg_822;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == exitcond4_fu_376_p2))) begin
        p_reg_206 <= p_1_reg_732;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond6_fu_299_p2))) begin
        p_reg_206 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond5_fu_333_p2))) begin
        q_reg_217 <= ap_const_lv3_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == exitcond4_fu_376_p2))) begin
        q_reg_217 <= q_1_fu_382_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten5_reg_750 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6))) begin
        C5_d_load_reg_827 <= C5_d_q0;
        S4_d_addr_2_reg_847 <= tmp_100_fu_650_p1;
        S4_d_addr_3_reg_857 <= tmp_102_fu_670_p1;
        S4_d_addr_4_reg_862 <= tmp_104_fu_680_p1;
        S4_d_addr_5_reg_868 <= tmp_106_fu_690_p1;
        S4_d_load_reg_837 <= S4_d_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5) & (exitcond_flatten5_reg_750 == ap_const_lv1_0))) begin
        C5_mapData_addr2_reg_795 <= C5_mapData_addr2_fu_569_p2;
        S4_d_addr4_reg_808 <= S4_d_addr4_fu_619_p2;
        S4_d_addr_1_reg_816 <= tmp_98_fu_625_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_lv1_0 == exitcond_flatten5_fu_402_p2))) begin
        C5_mapData_addr8_reg_779 <= C5_mapData_addr8_fu_504_p2;
        k_mid2_reg_766 <= k_mid2_fu_472_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten5_reg_750 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7))) begin
        C5_mapData_load_2_reg_884 <= C5_mapData_q1;
        S4_d_load_1_reg_879 <= S4_d_q1;
        S4_d_load_2_reg_889 <= S4_d_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8) & (exitcond_flatten5_reg_750 == ap_const_lv1_0))) begin
        C5_mapData_load_3_reg_904 <= C5_mapData_q1;
        C5_mapData_load_4_reg_914 <= C5_mapData_q0;
        S4_d_load_3_reg_909 <= S4_d_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond5_fu_333_p2))) begin
        S4_d_addr10_reg_737 <= S4_d_addr10_fu_370_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond6_fu_299_p2))) begin
        S4_d_addr1_reg_724 <= S4_d_addr1_fu_327_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_reg_ppstg_exitcond_flatten5_reg_750_pp0_it1 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8))) begin
        S4_d_load_4_reg_944 <= S4_d_q0;
        tmp_119_4_reg_939 <= grp_fu_287_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5)) begin
        ap_reg_ppstg_S4_d_addr_1_reg_816_pp0_it1 <= S4_d_addr_1_reg_816;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6)) begin
        ap_reg_ppstg_S4_d_addr_2_reg_847_pp0_it1 <= S4_d_addr_2_reg_847;
        ap_reg_ppstg_S4_d_addr_2_reg_847_pp0_it2 <= ap_reg_ppstg_S4_d_addr_2_reg_847_pp0_it1;
        ap_reg_ppstg_S4_d_addr_3_reg_857_pp0_it1 <= S4_d_addr_3_reg_857;
        ap_reg_ppstg_S4_d_addr_3_reg_857_pp0_it2 <= ap_reg_ppstg_S4_d_addr_3_reg_857_pp0_it1;
        ap_reg_ppstg_S4_d_addr_4_reg_862_pp0_it1 <= S4_d_addr_4_reg_862;
        ap_reg_ppstg_S4_d_addr_4_reg_862_pp0_it2 <= ap_reg_ppstg_S4_d_addr_4_reg_862_pp0_it1;
        ap_reg_ppstg_S4_d_addr_5_reg_868_pp0_it1 <= S4_d_addr_5_reg_868;
        ap_reg_ppstg_S4_d_addr_5_reg_868_pp0_it2 <= ap_reg_ppstg_S4_d_addr_5_reg_868_pp0_it1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4)) begin
        ap_reg_ppstg_exitcond_flatten5_reg_750_pp0_it1 <= exitcond_flatten5_reg_750;
        ap_reg_ppstg_exitcond_flatten5_reg_750_pp0_it2 <= ap_reg_ppstg_exitcond_flatten5_reg_750_pp0_it1;
        exitcond_flatten5_reg_750 <= exitcond_flatten5_fu_402_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_12_reg_719 <= i_12_fu_305_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_lv1_0 == exitcond_flatten5_fu_402_p2))) begin
        i_1_mid2_reg_759 <= i_1_mid2_fu_452_p3;
        indvar_flatten_next_reg_785 <= indvar_flatten_next_fu_516_p3;
        j_mid2_reg_773 <= j_mid2_fu_480_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        indvar_flatten_next5_reg_754 <= indvar_flatten_next5_fu_408_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5) & (exitcond_flatten5_reg_750 == ap_const_lv1_0))) begin
        k_8_reg_822 <= k_8_fu_630_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        p_1_reg_732 <= p_1_fu_339_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_reg_ppstg_exitcond_flatten5_reg_750_pp0_it1 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten5_reg_750_pp0_it2)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten5_reg_750_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8)))) begin
        reg_293 <= grp_fu_283_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_reg_ppstg_exitcond_flatten5_reg_750_pp0_it1 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5))) begin
        tmp_119_1_reg_924 <= grp_fu_287_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_reg_ppstg_exitcond_flatten5_reg_750_pp0_it1 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6))) begin
        tmp_119_2_reg_929 <= grp_fu_287_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_reg_ppstg_exitcond_flatten5_reg_750_pp0_it1 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7))) begin
        tmp_119_3_reg_934 <= grp_fu_287_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten5_reg_750_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6))) begin
        tmp_120_2_reg_949 <= grp_fu_283_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten5_reg_750_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7))) begin
        tmp_120_3_reg_954 <= grp_fu_283_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (exitcond_flatten5_reg_750 == ap_const_lv1_0))) begin
        tmp_48_reg_919 <= grp_fu_287_p2;
    end
end

/// C5_d_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg1_fsm_5)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5))) begin
        C5_d_ce0 = ap_const_logic_1;
    end else begin
        C5_d_ce0 = ap_const_logic_0;
    end
end

/// C5_mapData_address0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg1_fsm_5 or ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_sig_cseq_ST_pp0_stg3_fsm_7 or tmp_96_fu_575_p1 or tmp_99_fu_640_p1 or tmp_105_fu_710_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)) begin
            C5_mapData_address0 = tmp_105_fu_710_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6)) begin
            C5_mapData_address0 = tmp_99_fu_640_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5)) begin
            C5_mapData_address0 = tmp_96_fu_575_p1;
        end else begin
            C5_mapData_address0 = 'bx;
        end
    end else begin
        C5_mapData_address0 = 'bx;
    end
end

/// C5_mapData_address1 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_sig_cseq_ST_pp0_stg3_fsm_7 or tmp_101_fu_660_p1 or tmp_103_fu_700_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)) begin
            C5_mapData_address1 = tmp_103_fu_700_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6)) begin
            C5_mapData_address1 = tmp_101_fu_660_p1;
        end else begin
            C5_mapData_address1 = 'bx;
        end
    end else begin
        C5_mapData_address1 = 'bx;
    end
end

/// C5_mapData_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg1_fsm_5 or ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_sig_cseq_ST_pp0_stg3_fsm_7)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)))) begin
        C5_mapData_ce0 = ap_const_logic_1;
    end else begin
        C5_mapData_ce0 = ap_const_logic_0;
    end
end

/// C5_mapData_ce1 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_sig_cseq_ST_pp0_stg3_fsm_7)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)))) begin
        C5_mapData_ce1 = ap_const_logic_1;
    end else begin
        C5_mapData_ce1 = ap_const_logic_0;
    end
end

/// S4_d_address0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp0_it3 or ap_sig_cseq_ST_pp0_stg1_fsm_5 or ap_sig_cseq_ST_pp0_stg4_fsm_8 or ap_sig_cseq_ST_st4_fsm_3 or ap_reg_ppstg_S4_d_addr_1_reg_816_pp0_it1 or ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_reg_ppstg_S4_d_addr_3_reg_857_pp0_it2 or ap_reg_ppstg_S4_d_addr_4_reg_862_pp0_it2 or ap_reg_ppstg_S4_d_addr_5_reg_868_pp0_it1 or ap_sig_cseq_ST_pp0_stg3_fsm_7 or tmp_107_fu_397_p1 or tmp_102_fu_670_p1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3))) begin
        S4_d_address0 = ap_reg_ppstg_S4_d_addr_4_reg_862_pp0_it2;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8))) begin
        S4_d_address0 = ap_reg_ppstg_S4_d_addr_3_reg_857_pp0_it2;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5))) begin
        S4_d_address0 = ap_reg_ppstg_S4_d_addr_1_reg_816_pp0_it1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        S4_d_address0 = tmp_107_fu_397_p1;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7))) begin
        S4_d_address0 = ap_reg_ppstg_S4_d_addr_5_reg_868_pp0_it1;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6))) begin
        S4_d_address0 = tmp_102_fu_670_p1;
    end else begin
        S4_d_address0 = 'bx;
    end
end

/// S4_d_address1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp0_it3 or ap_sig_cseq_ST_pp0_stg1_fsm_5 or ap_sig_cseq_ST_pp0_stg4_fsm_8 or ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_reg_ppstg_S4_d_addr_2_reg_847_pp0_it2 or S4_d_addr_4_reg_862 or ap_reg_ppstg_S4_d_addr_5_reg_868_pp0_it2 or ap_sig_cseq_ST_pp0_stg3_fsm_7 or tmp_98_fu_625_p1 or tmp_100_fu_650_p1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3))) begin
        S4_d_address1 = ap_reg_ppstg_S4_d_addr_5_reg_868_pp0_it2;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8))) begin
        S4_d_address1 = ap_reg_ppstg_S4_d_addr_2_reg_847_pp0_it2;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7))) begin
        S4_d_address1 = S4_d_addr_4_reg_862;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6))) begin
        S4_d_address1 = tmp_100_fu_650_p1;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5))) begin
        S4_d_address1 = tmp_98_fu_625_p1;
    end else begin
        S4_d_address1 = 'bx;
    end
end

/// S4_d_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp0_it3 or ap_sig_cseq_ST_pp0_stg1_fsm_5 or ap_sig_cseq_ST_pp0_stg4_fsm_8 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_sig_cseq_ST_pp0_stg3_fsm_7)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3)))) begin
        S4_d_ce0 = ap_const_logic_1;
    end else begin
        S4_d_ce0 = ap_const_logic_0;
    end
end

/// S4_d_ce1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp0_it3 or ap_sig_cseq_ST_pp0_stg1_fsm_5 or ap_sig_cseq_ST_pp0_stg4_fsm_8 or ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_sig_cseq_ST_pp0_stg3_fsm_7)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3)))) begin
        S4_d_ce1 = ap_const_logic_1;
    end else begin
        S4_d_ce1 = ap_const_logic_0;
    end
end

/// S4_d_d0 assign process. ///
always @ (reg_293 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp0_it3 or ap_sig_cseq_ST_pp0_stg1_fsm_5 or ap_sig_cseq_ST_pp0_stg4_fsm_8 or ap_sig_cseq_ST_st4_fsm_3 or tmp_120_2_reg_949 or tmp_120_3_reg_954)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3))) begin
        S4_d_d0 = tmp_120_3_reg_954;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8))) begin
        S4_d_d0 = tmp_120_2_reg_949;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5))) begin
        S4_d_d0 = reg_293;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        S4_d_d0 = ap_const_lv32_0;
    end else begin
        S4_d_d0 = 'bx;
    end
end

/// S4_d_we0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp0_it3 or ap_sig_cseq_ST_pp0_stg1_fsm_5 or ap_reg_ppstg_exitcond_flatten5_reg_750_pp0_it2 or ap_sig_cseq_ST_pp0_stg4_fsm_8 or ap_sig_cseq_ST_st4_fsm_3 or exitcond4_fu_376_p2)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == exitcond4_fu_376_p2)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten5_reg_750_pp0_it2)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten5_reg_750_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten5_reg_750_pp0_it2)))) begin
        S4_d_we0 = ap_const_logic_1;
    end else begin
        S4_d_we0 = ap_const_logic_0;
    end
end

/// S4_d_we1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp0_it3 or ap_reg_ppstg_exitcond_flatten5_reg_750_pp0_it2 or ap_sig_cseq_ST_pp0_stg4_fsm_8)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten5_reg_750_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten5_reg_750_pp0_it2)))) begin
        S4_d_we1 = ap_const_logic_1;
    end else begin
        S4_d_we1 = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st21_fsm_9)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_9))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st21_fsm_9)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_9)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_4 assign process. ///
always @ (ap_sig_bdd_78)
begin
    if (ap_sig_bdd_78) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg1_fsm_5 assign process. ///
always @ (ap_sig_bdd_98)
begin
    if (ap_sig_bdd_98) begin
        ap_sig_cseq_ST_pp0_stg1_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg1_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg2_fsm_6 assign process. ///
always @ (ap_sig_bdd_193)
begin
    if (ap_sig_bdd_193) begin
        ap_sig_cseq_ST_pp0_stg2_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg2_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg3_fsm_7 assign process. ///
always @ (ap_sig_bdd_232)
begin
    if (ap_sig_bdd_232) begin
        ap_sig_cseq_ST_pp0_stg3_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg3_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg4_fsm_8 assign process. ///
always @ (ap_sig_bdd_109)
begin
    if (ap_sig_bdd_109) begin
        ap_sig_cseq_ST_pp0_stg4_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg4_fsm_8 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_28)
begin
    if (ap_sig_bdd_28) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st21_fsm_9 assign process. ///
always @ (ap_sig_bdd_625)
begin
    if (ap_sig_bdd_625) begin
        ap_sig_cseq_ST_st21_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_9 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_120)
begin
    if (ap_sig_bdd_120) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_135)
begin
    if (ap_sig_bdd_135) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_149)
begin
    if (ap_sig_bdd_149) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// grp_fu_283_p0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_pp0_stg1_fsm_5 or ap_sig_cseq_ST_pp0_stg4_fsm_8 or ap_sig_cseq_ST_pp0_stg2_fsm_6 or S4_d_load_reg_837 or ap_sig_cseq_ST_pp0_stg3_fsm_7 or S4_d_load_1_reg_879 or S4_d_load_2_reg_889 or S4_d_load_3_reg_909 or S4_d_load_4_reg_944)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) begin
        grp_fu_283_p0 = S4_d_load_4_reg_944;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8))) begin
        grp_fu_283_p0 = S4_d_load_3_reg_909;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7))) begin
        grp_fu_283_p0 = S4_d_load_2_reg_889;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6))) begin
        grp_fu_283_p0 = S4_d_load_1_reg_879;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5))) begin
        grp_fu_283_p0 = S4_d_load_reg_837;
    end else begin
        grp_fu_283_p0 = 'bx;
    end
end

/// grp_fu_283_p1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_pp0_stg1_fsm_5 or ap_sig_cseq_ST_pp0_stg4_fsm_8 or ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_sig_cseq_ST_pp0_stg3_fsm_7 or tmp_48_reg_919 or tmp_119_1_reg_924 or tmp_119_2_reg_929 or tmp_119_3_reg_934 or tmp_119_4_reg_939)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) begin
        grp_fu_283_p1 = tmp_119_4_reg_939;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8))) begin
        grp_fu_283_p1 = tmp_119_3_reg_934;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7))) begin
        grp_fu_283_p1 = tmp_119_2_reg_929;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6))) begin
        grp_fu_283_p1 = tmp_119_1_reg_924;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5))) begin
        grp_fu_283_p1 = tmp_48_reg_919;
    end else begin
        grp_fu_283_p1 = 'bx;
    end
end

/// grp_fu_287_p0 assign process. ///
always @ (C5_d_q0 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg1_fsm_5 or ap_sig_cseq_ST_pp0_stg4_fsm_8 or C5_d_load_reg_827 or ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_sig_cseq_ST_pp0_stg3_fsm_7)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8)))) begin
        grp_fu_287_p0 = C5_d_load_reg_827;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6))) begin
        grp_fu_287_p0 = C5_d_q0;
    end else begin
        grp_fu_287_p0 = 'bx;
    end
end

/// grp_fu_287_p1 assign process. ///
always @ (C5_mapData_q0 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg1_fsm_5 or ap_sig_cseq_ST_pp0_stg4_fsm_8 or ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_sig_cseq_ST_pp0_stg3_fsm_7 or C5_mapData_load_2_reg_884 or C5_mapData_load_3_reg_904 or C5_mapData_load_4_reg_914)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5))) begin
        grp_fu_287_p1 = C5_mapData_load_4_reg_914;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        grp_fu_287_p1 = C5_mapData_load_3_reg_904;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8))) begin
        grp_fu_287_p1 = C5_mapData_load_2_reg_884;
    end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)))) begin
        grp_fu_287_p1 = C5_mapData_q0;
    end else begin
        grp_fu_287_p1 = 'bx;
    end
end

/// i_1_phi_fu_243_p4 assign process. ///
always @ (i_1_reg_239 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_reg_ppiten_pp0_it1 or exitcond_flatten5_reg_750 or i_1_mid2_reg_759)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten5_reg_750 == ap_const_lv1_0))) begin
        i_1_phi_fu_243_p4 = i_1_mid2_reg_759;
    end else begin
        i_1_phi_fu_243_p4 = i_1_reg_239;
    end
end

/// indvar_flatten5_phi_fu_232_p4 assign process. ///
always @ (indvar_flatten5_reg_228 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_reg_ppiten_pp0_it1 or exitcond_flatten5_reg_750 or indvar_flatten_next5_reg_754)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten5_reg_750 == ap_const_lv1_0))) begin
        indvar_flatten5_phi_fu_232_p4 = indvar_flatten_next5_reg_754;
    end else begin
        indvar_flatten5_phi_fu_232_p4 = indvar_flatten5_reg_228;
    end
end

/// indvar_flatten_phi_fu_254_p4 assign process. ///
always @ (indvar_flatten_reg_250 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_reg_ppiten_pp0_it1 or exitcond_flatten5_reg_750 or indvar_flatten_next_reg_785)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten5_reg_750 == ap_const_lv1_0))) begin
        indvar_flatten_phi_fu_254_p4 = indvar_flatten_next_reg_785;
    end else begin
        indvar_flatten_phi_fu_254_p4 = indvar_flatten_reg_250;
    end
end

/// j_phi_fu_265_p4 assign process. ///
always @ (j_reg_261 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_reg_ppiten_pp0_it1 or exitcond_flatten5_reg_750 or j_mid2_reg_773)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten5_reg_750 == ap_const_lv1_0))) begin
        j_phi_fu_265_p4 = j_mid2_reg_773;
    end else begin
        j_phi_fu_265_p4 = j_reg_261;
    end
end

/// k_phi_fu_276_p4 assign process. ///
always @ (k_reg_272 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_reg_ppiten_pp0_it1 or exitcond_flatten5_reg_750 or k_8_reg_822)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten5_reg_750 == ap_const_lv1_0))) begin
        k_phi_fu_276_p4 = k_8_reg_822;
    end else begin
        k_phi_fu_276_p4 = k_reg_272;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or ap_sig_cseq_ST_pp0_stg0_fsm_4 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp0_it3 or exitcond6_fu_299_p2 or exitcond5_fu_333_p2 or exitcond_flatten5_fu_402_p2 or exitcond4_fu_376_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if ((ap_const_lv1_0 == exitcond6_fu_299_p2)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_4;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if ((ap_const_lv1_0 == exitcond5_fu_333_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            if ((ap_const_lv1_0 == exitcond4_fu_376_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_pp0_stg0_fsm_4 : 
        begin
            if ((~((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond_flatten5_fu_402_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_5;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond_flatten5_fu_402_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_st21_fsm_9;
            end else begin
                ap_NS_fsm = ap_ST_st21_fsm_9;
            end
        end
        ap_ST_pp0_stg1_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg2_fsm_6;
        end
        ap_ST_pp0_stg2_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg3_fsm_7;
        end
        ap_ST_pp0_stg3_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg4_fsm_8;
        end
        ap_ST_pp0_stg4_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_4;
        end
        ap_ST_st21_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C5_d_address0 = tmp_s_fu_524_p1;
assign C5_mapData_addr1_fu_557_p2 = (tmp_72_trn_fu_534_p1 + C5_mapData_addr9_fu_551_p2);
assign C5_mapData_addr2_fu_569_p2 = (tmp_84_fu_563_p2 + C5_mapData_addr1_fu_557_p2);
assign C5_mapData_addr3_fu_635_p2 = (ap_const_lv32_1 + C5_mapData_addr2_reg_795);
assign C5_mapData_addr4_fu_655_p2 = (ap_const_lv32_2 + C5_mapData_addr2_reg_795);
assign C5_mapData_addr5_fu_695_p2 = (ap_const_lv32_3 + C5_mapData_addr2_reg_795);
assign C5_mapData_addr6_fu_705_p2 = (ap_const_lv32_4 + C5_mapData_addr2_reg_795);
assign C5_mapData_addr7_cast_fu_500_p1 = tmp_95_fu_492_p3;
assign C5_mapData_addr8_cast_fu_531_p1 = C5_mapData_addr8_reg_779;
assign C5_mapData_addr8_fu_504_p2 = (tmp_trn_cast_34_fu_488_p1 + C5_mapData_addr7_cast_fu_500_p1);
assign C5_mapData_addr9_fu_551_p2 = (p_shl_fu_547_p1 + C5_mapData_addr8_cast_fu_531_p1);
assign S4_d_addr10_fu_370_p2 = (S4_d_addr9_cast_fu_354_p1 + p_shl15_fu_366_p1);
assign S4_d_addr11_fu_392_p2 = (S4_d_addr10_reg_737 + tmp_71_trn_fu_388_p1);
assign S4_d_addr1_fu_327_p2 = (tmp_trn_cast_fu_311_p1 + p_shl_cast_fu_323_p1);
assign S4_d_addr2_fu_591_p2 = (p_shl38_cast_fu_587_p1 + tmp_trn_cast1_fu_528_p1);
assign S4_d_addr3_cast_fu_603_p1 = S4_d_addr3_fu_597_p2;
assign S4_d_addr3_fu_597_p2 = (tmp_72_trn_cast_fu_537_p1 + S4_d_addr2_fu_591_p2);
assign S4_d_addr4_fu_619_p2 = (p_shl14_fu_615_p1 + S4_d_addr3_cast_fu_603_p1);
assign S4_d_addr5_fu_645_p2 = (ap_const_lv32_1 + S4_d_addr4_reg_808);
assign S4_d_addr6_fu_665_p2 = (ap_const_lv32_2 + S4_d_addr4_reg_808);
assign S4_d_addr7_fu_675_p2 = (ap_const_lv32_3 + S4_d_addr4_reg_808);
assign S4_d_addr8_fu_685_p2 = (ap_const_lv32_4 + S4_d_addr4_reg_808);
assign S4_d_addr9_cast_fu_354_p1 = S4_d_addr9_fu_349_p2;
assign S4_d_addr9_fu_349_p2 = (S4_d_addr1_reg_724 + tmp_69_trn_cast_fu_345_p1);
assign S4_d_d1 = reg_293;

/// ap_sig_bdd_109 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_109 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_120 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_120 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_135 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_135 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_149 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_149 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_193 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_193 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_232 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_232 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_28 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_28 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_625 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_625 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end

/// ap_sig_bdd_78 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_78 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_98 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_98 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end
assign exitcond1_mid_fu_440_p2 = (exitcond_fu_434_p2 & not_exitcond_flatten_fu_428_p2);
assign exitcond4_fu_376_p2 = (q_reg_217 == ap_const_lv3_5? 1'b1: 1'b0);
assign exitcond5_fu_333_p2 = (p_reg_206 == ap_const_lv3_5? 1'b1: 1'b0);
assign exitcond6_fu_299_p2 = (i_reg_195 == ap_const_lv5_10? 1'b1: 1'b0);
assign exitcond_flatten5_fu_402_p2 = (indvar_flatten5_phi_fu_232_p4 == ap_const_lv12_960? 1'b1: 1'b0);
assign exitcond_flatten_fu_414_p2 = (indvar_flatten_phi_fu_254_p4 == ap_const_lv8_96? 1'b1: 1'b0);
assign exitcond_fu_434_p2 = (k_phi_fu_276_p4 == ap_const_lv3_5? 1'b1: 1'b0);
assign grp_fu_283_ce = ap_const_logic_1;
assign grp_fu_287_ce = ap_const_logic_1;
assign i_12_fu_305_p2 = (i_reg_195 + ap_const_lv5_1);
assign i_1_mid2_fu_452_p3 = ((exitcond_flatten_fu_414_p2[0:0]===1'b1)? i_s_fu_446_p2: i_1_phi_fu_243_p4);
assign i_s_fu_446_p2 = (ap_const_lv5_1 + i_1_phi_fu_243_p4);
assign indvar_flatten_next5_fu_408_p2 = (indvar_flatten5_phi_fu_232_p4 + ap_const_lv12_1);
assign indvar_flatten_next_fu_516_p3 = ((exitcond_flatten_fu_414_p2[0:0]===1'b1)? ap_const_lv8_1: indvar_flatten_op_fu_510_p2);
assign indvar_flatten_op_fu_510_p2 = (ap_const_lv8_1 + indvar_flatten_phi_fu_254_p4);
assign j_9_fu_460_p2 = (ap_const_lv5_1 + j_mid_fu_420_p3);
assign j_mid2_fu_480_p3 = ((exitcond1_mid_fu_440_p2[0:0]===1'b1)? j_9_fu_460_p2: j_mid_fu_420_p3);
assign j_mid_fu_420_p3 = ((exitcond_flatten_fu_414_p2[0:0]===1'b1)? ap_const_lv5_0: j_phi_fu_265_p4);
assign k_8_fu_630_p2 = (ap_const_lv3_1 + k_mid2_reg_766);
assign k_mid2_fu_472_p3 = ((tmp_94_fu_466_p2[0:0]===1'b1)? ap_const_lv3_0: k_phi_fu_276_p4);
assign not_exitcond_flatten_fu_428_p2 = (exitcond_flatten_fu_414_p2 ^ ap_const_lv1_1);
assign p_1_fu_339_p2 = (p_reg_206 + ap_const_lv3_1);
assign p_shl14_fu_615_p1 = tmp_85_fu_607_p3;
assign p_shl15_fu_366_p1 = tmp_86_fu_358_p3;
assign p_shl38_cast_fu_587_p1 = tmp_97_fu_580_p3;
assign p_shl_cast_fu_323_p1 = tmp_fu_315_p3;
assign p_shl_fu_547_p1 = tmp_83_fu_540_p3;
assign q_1_fu_382_p2 = (q_reg_217 + ap_const_lv3_1);
assign tmp_100_fu_650_p1 = S4_d_addr5_fu_645_p2;
assign tmp_101_fu_660_p1 = C5_mapData_addr4_fu_655_p2;
assign tmp_102_fu_670_p1 = S4_d_addr6_fu_665_p2;
assign tmp_103_fu_700_p1 = C5_mapData_addr5_fu_695_p2;
assign tmp_104_fu_680_p1 = S4_d_addr7_fu_675_p2;
assign tmp_105_fu_710_p1 = C5_mapData_addr6_fu_705_p2;
assign tmp_106_fu_690_p1 = S4_d_addr8_fu_685_p2;
assign tmp_107_fu_397_p1 = S4_d_addr11_fu_392_p2;
assign tmp_69_trn_cast_fu_345_p1 = p_reg_206;
assign tmp_71_trn_fu_388_p1 = q_reg_217;
assign tmp_72_trn_cast_fu_537_p1 = k_mid2_reg_766;
assign tmp_72_trn_fu_534_p1 = k_mid2_reg_766;
assign tmp_83_fu_540_p3 = {{C5_mapData_addr8_reg_779}, {ap_const_lv2_0}};
assign tmp_84_fu_563_p2 = C5_mapData_addr1_fu_557_p2 << ap_const_lv32_2;
assign tmp_85_fu_607_p3 = {{S4_d_addr3_fu_597_p2}, {ap_const_lv2_0}};
assign tmp_86_fu_358_p3 = {{S4_d_addr9_fu_349_p2}, {ap_const_lv2_0}};
assign tmp_94_fu_466_p2 = (exitcond1_mid_fu_440_p2 | exitcond_flatten_fu_414_p2);
assign tmp_95_fu_492_p3 = {{j_mid2_fu_480_p3}, {ap_const_lv4_0}};
assign tmp_96_fu_575_p1 = C5_mapData_addr2_fu_569_p2;
assign tmp_97_fu_580_p3 = {{i_1_mid2_reg_759}, {ap_const_lv2_0}};
assign tmp_98_fu_625_p1 = S4_d_addr4_fu_619_p2;
assign tmp_99_fu_640_p1 = C5_mapData_addr3_fu_635_p2;
assign tmp_fu_315_p3 = {{i_reg_195}, {ap_const_lv2_0}};
assign tmp_s_fu_524_p1 = j_mid2_reg_773;
assign tmp_trn_cast1_fu_528_p1 = i_1_mid2_reg_759;
assign tmp_trn_cast_34_fu_488_p1 = i_1_mid2_fu_452_p3;
assign tmp_trn_cast_fu_311_p1 = i_reg_195;


endmodule //dateport_DS4_layer

