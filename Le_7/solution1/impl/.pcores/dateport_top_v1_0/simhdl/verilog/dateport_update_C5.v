// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dateport_update_C5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        S4_y_address0,
        S4_y_ce0,
        S4_y_q0,
        C5_dmapData_address0,
        C5_dmapData_ce0,
        C5_dmapData_we0,
        C5_dmapData_d0,
        C5_dmapData_q0,
        C5_d_address0,
        C5_d_ce0,
        C5_d_q0,
        C5_dbias_address0,
        C5_dbias_ce0,
        C5_dbias_we0,
        C5_dbias_d0,
        C5_dbias_q0
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 22'b1;
parameter    ap_ST_st2_fsm_1 = 22'b10;
parameter    ap_ST_st3_fsm_2 = 22'b100;
parameter    ap_ST_pp0_stg0_fsm_3 = 22'b1000;
parameter    ap_ST_st10_fsm_4 = 22'b10000;
parameter    ap_ST_st11_fsm_5 = 22'b100000;
parameter    ap_ST_st12_fsm_6 = 22'b1000000;
parameter    ap_ST_st13_fsm_7 = 22'b10000000;
parameter    ap_ST_st14_fsm_8 = 22'b100000000;
parameter    ap_ST_st15_fsm_9 = 22'b1000000000;
parameter    ap_ST_st16_fsm_10 = 22'b10000000000;
parameter    ap_ST_st17_fsm_11 = 22'b100000000000;
parameter    ap_ST_st18_fsm_12 = 22'b1000000000000;
parameter    ap_ST_st19_fsm_13 = 22'b10000000000000;
parameter    ap_ST_st20_fsm_14 = 22'b100000000000000;
parameter    ap_ST_st21_fsm_15 = 22'b1000000000000000;
parameter    ap_ST_st22_fsm_16 = 22'b10000000000000000;
parameter    ap_ST_st23_fsm_17 = 22'b100000000000000000;
parameter    ap_ST_st24_fsm_18 = 22'b1000000000000000000;
parameter    ap_ST_st25_fsm_19 = 22'b10000000000000000000;
parameter    ap_ST_st26_fsm_20 = 22'b100000000000000000000;
parameter    ap_ST_st27_fsm_21 = 22'b1000000000000000000000;
parameter    ap_true = 1'b1;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv9_1E0 = 9'b111100000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv5_19 = 5'b11001;
parameter    ap_const_lv3_5 = 3'b101;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv5_1E = 5'b11110;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] S4_y_address0;
output   S4_y_ce0;
input  [31:0] S4_y_q0;
output  [13:0] C5_dmapData_address0;
output   C5_dmapData_ce0;
output   C5_dmapData_we0;
output  [31:0] C5_dmapData_d0;
input  [31:0] C5_dmapData_q0;
output  [4:0] C5_d_address0;
output   C5_d_ce0;
input  [31:0] C5_d_q0;
output  [4:0] C5_dbias_address0;
output   C5_dbias_ce0;
output   C5_dbias_we0;
output  [31:0] C5_dbias_d0;
input  [31:0] C5_dbias_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg S4_y_ce0;
reg[13:0] C5_dmapData_address0;
reg C5_dmapData_ce0;
reg C5_dmapData_we0;
reg[4:0] C5_d_address0;
reg C5_d_ce0;
reg[4:0] C5_dbias_address0;
reg C5_dbias_ce0;
reg C5_dbias_we0;
(* fsm_encoding = "none" *) reg   [21:0] ap_CS_fsm = 22'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_40;
reg   [4:0] indvar_flatten_reg_191;
reg   [2:0] k_reg_202;
reg   [2:0] m_reg_213;
reg   [31:0] reg_267;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_85;
reg    ap_sig_cseq_ST_st21_fsm_15;
reg    ap_sig_bdd_92;
wire   [31:0] grp_fu_257_p2;
reg   [31:0] reg_273;
reg    ap_sig_cseq_ST_st18_fsm_12;
reg    ap_sig_bdd_102;
reg    ap_sig_cseq_ST_st26_fsm_20;
reg    ap_sig_bdd_109;
wire   [8:0] indvar_flatten_next8_fu_285_p2;
reg   [8:0] indvar_flatten_next8_reg_642;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_119;
wire   [4:0] j_mid2_fu_297_p3;
reg   [4:0] j_mid2_reg_647;
wire   [0:0] exitcond_flatten9_fu_279_p2;
wire   [4:0] i_mid2_fu_311_p3;
reg   [4:0] i_mid2_reg_655;
wire   [9:0] tmp_154_trn_cast1_fu_324_p1;
reg   [9:0] tmp_154_trn_cast1_reg_666;
wire   [7:0] S4_y_addr9_fu_341_p2;
reg   [7:0] S4_y_addr9_reg_671;
wire   [0:0] exitcond_flatten_fu_347_p2;
reg   [0:0] exitcond_flatten_reg_676;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_3;
reg    ap_sig_bdd_142;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg    ap_reg_ppiten_pp0_it3 = 1'b0;
reg    ap_reg_ppiten_pp0_it4 = 1'b0;
reg    ap_reg_ppiten_pp0_it5 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_676_pp0_it1;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_676_pp0_it2;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_676_pp0_it3;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_676_pp0_it4;
wire   [4:0] indvar_flatten_next_fu_353_p2;
wire   [2:0] m_mid2_fu_365_p3;
reg   [2:0] m_mid2_reg_685;
reg   [2:0] ap_reg_ppstg_m_mid2_reg_685_pp0_it1;
reg   [2:0] ap_reg_ppstg_m_mid2_reg_685_pp0_it2;
reg   [2:0] ap_reg_ppstg_m_mid2_reg_685_pp0_it3;
reg   [2:0] ap_reg_ppstg_m_mid2_reg_685_pp0_it4;
wire   [2:0] k_mid2_fu_379_p3;
reg   [2:0] k_mid2_reg_691;
reg   [2:0] ap_reg_ppstg_k_mid2_reg_691_pp0_it1;
reg   [2:0] ap_reg_ppstg_k_mid2_reg_691_pp0_it2;
reg   [2:0] ap_reg_ppstg_k_mid2_reg_691_pp0_it3;
reg   [2:0] ap_reg_ppstg_k_mid2_reg_691_pp0_it4;
wire   [2:0] m_7_fu_387_p2;
wire   [31:0] C5_dmapData_addr3_fu_503_p2;
reg   [31:0] C5_dmapData_addr3_reg_714;
reg    ap_sig_cseq_ST_st10_fsm_4;
reg    ap_sig_bdd_199;
wire   [2:0] k_5_fu_515_p2;
reg   [2:0] k_5_reg_722;
reg    ap_sig_cseq_ST_st11_fsm_5;
reg    ap_sig_bdd_208;
wire   [31:0] C5_dmapData_addr5_fu_542_p2;
reg   [31:0] C5_dmapData_addr5_reg_727;
wire   [0:0] exitcond2_fu_509_p2;
wire   [5:0] p_addr_fu_564_p2;
reg   [5:0] p_addr_reg_732;
wire   [4:0] j_16_fu_570_p2;
wire   [2:0] m_8_fu_581_p2;
reg   [2:0] m_8_reg_745;
reg    ap_sig_cseq_ST_st12_fsm_6;
reg    ap_sig_bdd_228;
reg   [13:0] C5_dmapData_addr_reg_750;
wire   [0:0] exitcond1_fu_575_p2;
reg   [31:0] C5_dmapData_load_reg_760;
reg    ap_sig_cseq_ST_st13_fsm_7;
reg    ap_sig_bdd_243;
wire   [31:0] tmp_q0;
reg   [31:0] empty_69_reg_765;
wire   [4:0] i_19_fu_627_p2;
reg   [4:0] i_19_reg_773;
reg    ap_sig_cseq_ST_st20_fsm_14;
reg    ap_sig_bdd_254;
reg   [4:0] C5_dbias_addr_reg_778;
wire   [0:0] exitcond_fu_621_p2;
reg   [31:0] C5_dbias_load_reg_788;
reg   [4:0] tmp_address0;
reg    tmp_ce0;
reg    tmp_we0;
wire   [31:0] tmp_d0;
reg   [8:0] indvar_flatten7_reg_158;
reg   [4:0] i_reg_169;
reg   [4:0] j_reg_180;
reg   [2:0] k_phi_fu_206_p4;
reg   [2:0] k_1_reg_224;
reg   [2:0] m_1_reg_235;
reg    ap_sig_cseq_ST_st19_fsm_13;
reg    ap_sig_bdd_304;
reg   [4:0] i_1_reg_246;
reg    ap_sig_cseq_ST_st27_fsm_21;
reg    ap_sig_bdd_313;
wire   [63:0] tmp_s_fu_319_p1;
wire   [63:0] tmp_191_fu_432_p1;
wire   [63:0] tmp_193_fu_466_p1;
wire   [63:0] tmp_195_fu_596_p1;
wire   [63:0] tmp_196_fu_616_p1;
wire   [63:0] tmp_98_fu_633_p1;
wire   [31:0] grp_fu_261_p2;
reg   [31:0] grp_fu_257_p0;
reg   [31:0] grp_fu_257_p1;
reg    ap_sig_cseq_ST_st14_fsm_8;
reg    ap_sig_bdd_341;
reg    ap_sig_cseq_ST_st22_fsm_16;
reg    ap_sig_bdd_348;
wire   [31:0] grp_fu_261_p0;
wire   [31:0] grp_fu_261_p1;
wire   [0:0] exitcond16_fu_291_p2;
wire   [4:0] i_4_fu_305_p2;
wire   [6:0] tmp_189_fu_330_p3;
wire   [7:0] tmp_154_trn_cast_fu_327_p1;
wire   [7:0] p_shl_cast_fu_337_p1;
wire   [0:0] exitcond17_fu_359_p2;
wire   [2:0] k_s_fu_373_p2;
wire   [7:0] tmp_155_trn_cast_fu_393_p1;
wire   [7:0] S4_y_addr1_fu_396_p2;
wire   [9:0] tmp_133_fu_408_p3;
wire   [31:0] S4_y_addr10_cast_fu_401_p1;
wire   [31:0] p_shl28_fu_416_p1;
wire   [31:0] S4_y_addr2_fu_420_p2;
wire   [31:0] tmp_159_trn_fu_405_p1;
wire   [31:0] S4_y_addr3_fu_426_p2;
wire   [4:0] tmp_192_fu_443_p3;
wire   [5:0] tmp_155_trn_cast1_fu_437_p1;
wire   [5:0] p_shl27_cast_fu_450_p1;
wire   [5:0] p_addr11_fu_454_p2;
wire   [5:0] tmp_159_trn_cast_fu_440_p1;
wire   [5:0] p_addr12_fu_460_p2;
wire   [8:0] tmp_190_fu_471_p3;
wire   [9:0] C5_dmapData_addr1_cast_fu_478_p1;
wire   [9:0] C5_dmapData_addr2_fu_482_p2;
wire   [11:0] tmp_132_fu_491_p3;
wire   [31:0] p_shl26_fu_499_p1;
wire   [31:0] C5_dmapData_addr2_cast_fu_487_p1;
wire   [31:0] tmp_156_trn_fu_527_p1;
wire   [31:0] C5_dmapData_addr4_fu_531_p2;
wire   [31:0] tmp_134_fu_536_p2;
wire  signed [2:0] tmp_101_fu_521_p2;
wire   [4:0] tmp_194_fu_552_p3;
wire   [5:0] p_shl29_cast_fu_560_p1;
wire   [5:0] tmp_158_trn_cast_fu_548_p1;
wire   [31:0] tmp_161_trn_fu_587_p1;
wire   [31:0] C5_dmapData_addr6_fu_591_p2;
wire  signed [2:0] tmp_102_fu_601_p2;
wire   [5:0] tmp_163_trn_cast_fu_607_p1;
wire   [5:0] p_addr10_fu_611_p2;
wire    grp_fu_257_ce;
wire    grp_fu_261_ce;
reg   [21:0] ap_NS_fsm;


dateport_update_C1_tmp #(
    .DataWidth( 32 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
tmp_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( tmp_address0 ),
    .ce0( tmp_ce0 ),
    .we0( tmp_we0 ),
    .d0( tmp_d0 ),
    .q0( tmp_q0 )
);

dateport_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dateport_fadd_32ns_32ns_32_5_full_dsp_U93(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_257_p0 ),
    .din1( grp_fu_257_p1 ),
    .ce( grp_fu_257_ce ),
    .dout( grp_fu_257_p2 )
);

dateport_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dateport_fmul_32ns_32ns_32_4_max_dsp_U94(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_261_p0 ),
    .din1( grp_fu_261_p1 ),
    .ce( grp_fu_261_ce ),
    .dout( grp_fu_261_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & ~(ap_const_lv1_0 == exitcond_flatten_fu_347_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (ap_const_lv1_0 == exitcond_flatten_fu_347_p2))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & ~(ap_const_lv1_0 == exitcond_flatten_fu_347_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
    end
end

/// ap_reg_ppiten_pp0_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it3
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
    end
end

/// ap_reg_ppiten_pp0_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it4
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
    end
end

/// ap_reg_ppiten_pp0_it5 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it5
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond_flatten9_fu_279_p2 == ap_const_lv1_0))) begin
        i_1_reg_246 <= ap_const_lv5_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_21)) begin
        i_1_reg_246 <= i_19_reg_773;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_5) & ~(ap_const_lv1_0 == exitcond2_fu_509_p2))) begin
        i_reg_169 <= i_mid2_reg_655;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_169 <= ap_const_lv5_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_5) & ~(ap_const_lv1_0 == exitcond2_fu_509_p2))) begin
        indvar_flatten7_reg_158 <= indvar_flatten_next8_reg_642;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        indvar_flatten7_reg_158 <= ap_const_lv9_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_lv1_0 == exitcond_flatten_fu_347_p2))) begin
        indvar_flatten_reg_191 <= indvar_flatten_next_fu_353_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        indvar_flatten_reg_191 <= ap_const_lv5_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_5) & ~(ap_const_lv1_0 == exitcond2_fu_509_p2))) begin
        j_reg_180 <= j_16_fu_570_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        j_reg_180 <= ap_const_lv5_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_6) & ~(ap_const_lv1_0 == exitcond1_fu_575_p2))) begin
        k_1_reg_224 <= k_5_reg_722;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_4)) begin
        k_1_reg_224 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == exitcond_flatten_reg_676))) begin
        k_reg_202 <= k_mid2_reg_691;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        k_reg_202 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_5) & (ap_const_lv1_0 == exitcond2_fu_509_p2))) begin
        m_1_reg_235 <= ap_const_lv3_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_13)) begin
        m_1_reg_235 <= m_8_reg_745;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_lv1_0 == exitcond_flatten_fu_347_p2))) begin
        m_reg_213 <= m_7_fu_387_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        m_reg_213 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_14) & (ap_const_lv1_0 == exitcond_fu_621_p2))) begin
        C5_dbias_addr_reg_778 <= tmp_98_fu_633_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_15)) begin
        C5_dbias_load_reg_788 <= C5_dbias_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_4)) begin
        C5_dmapData_addr3_reg_714 <= C5_dmapData_addr3_fu_503_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_5) & (ap_const_lv1_0 == exitcond2_fu_509_p2))) begin
        C5_dmapData_addr5_reg_727 <= C5_dmapData_addr5_fu_542_p2;
        p_addr_reg_732 <= p_addr_fu_564_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_6) & (ap_const_lv1_0 == exitcond1_fu_575_p2))) begin
        C5_dmapData_addr_reg_750 <= tmp_195_fu_596_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_7)) begin
        C5_dmapData_load_reg_760 <= C5_dmapData_q0;
        empty_69_reg_765 <= tmp_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        S4_y_addr9_reg_671 <= S4_y_addr9_fu_341_p2;
        tmp_154_trn_cast1_reg_666[4 : 0] <= tmp_154_trn_cast1_fu_324_p1[4 : 0];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3)) begin
        ap_reg_ppstg_exitcond_flatten_reg_676_pp0_it1 <= exitcond_flatten_reg_676;
        ap_reg_ppstg_k_mid2_reg_691_pp0_it1 <= k_mid2_reg_691;
        ap_reg_ppstg_m_mid2_reg_685_pp0_it1 <= m_mid2_reg_685;
        exitcond_flatten_reg_676 <= exitcond_flatten_fu_347_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_true == ap_true)) begin
        ap_reg_ppstg_exitcond_flatten_reg_676_pp0_it2 <= ap_reg_ppstg_exitcond_flatten_reg_676_pp0_it1;
        ap_reg_ppstg_exitcond_flatten_reg_676_pp0_it3 <= ap_reg_ppstg_exitcond_flatten_reg_676_pp0_it2;
        ap_reg_ppstg_exitcond_flatten_reg_676_pp0_it4 <= ap_reg_ppstg_exitcond_flatten_reg_676_pp0_it3;
        ap_reg_ppstg_k_mid2_reg_691_pp0_it2 <= ap_reg_ppstg_k_mid2_reg_691_pp0_it1;
        ap_reg_ppstg_k_mid2_reg_691_pp0_it3 <= ap_reg_ppstg_k_mid2_reg_691_pp0_it2;
        ap_reg_ppstg_k_mid2_reg_691_pp0_it4 <= ap_reg_ppstg_k_mid2_reg_691_pp0_it3;
        ap_reg_ppstg_m_mid2_reg_685_pp0_it2 <= ap_reg_ppstg_m_mid2_reg_685_pp0_it1;
        ap_reg_ppstg_m_mid2_reg_685_pp0_it3 <= ap_reg_ppstg_m_mid2_reg_685_pp0_it2;
        ap_reg_ppstg_m_mid2_reg_685_pp0_it4 <= ap_reg_ppstg_m_mid2_reg_685_pp0_it3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_14)) begin
        i_19_reg_773 <= i_19_fu_627_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond_flatten9_fu_279_p2 == ap_const_lv1_0))) begin
        i_mid2_reg_655 <= i_mid2_fu_311_p3;
        j_mid2_reg_647 <= j_mid2_fu_297_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        indvar_flatten_next8_reg_642 <= indvar_flatten_next8_fu_285_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_5)) begin
        k_5_reg_722 <= k_5_fu_515_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_lv1_0 == exitcond_flatten_fu_347_p2))) begin
        k_mid2_reg_691 <= k_mid2_fu_379_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_6)) begin
        m_8_reg_745 <= m_8_fu_581_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (ap_const_lv1_0 == exitcond_flatten_fu_347_p2))) begin
        m_mid2_reg_685 <= m_mid2_fu_365_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_15))) begin
        reg_267 <= C5_d_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_12) | (ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_20))) begin
        reg_273 <= grp_fu_257_p2;
    end
end

/// C5_d_address0 assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st20_fsm_14 or tmp_s_fu_319_p1 or tmp_98_fu_633_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_14)) begin
        C5_d_address0 = tmp_98_fu_633_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        C5_d_address0 = tmp_s_fu_319_p1;
    end else begin
        C5_d_address0 = 'bx;
    end
end

/// C5_d_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st20_fsm_14)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | (ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_14))) begin
        C5_d_ce0 = ap_const_logic_1;
    end else begin
        C5_d_ce0 = ap_const_logic_0;
    end
end

/// C5_dbias_address0 assign process. ///
always @ (ap_sig_cseq_ST_st20_fsm_14 or C5_dbias_addr_reg_778 or ap_sig_cseq_ST_st27_fsm_21 or tmp_98_fu_633_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_21)) begin
        C5_dbias_address0 = C5_dbias_addr_reg_778;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_14)) begin
        C5_dbias_address0 = tmp_98_fu_633_p1;
    end else begin
        C5_dbias_address0 = 'bx;
    end
end

/// C5_dbias_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st20_fsm_14 or ap_sig_cseq_ST_st27_fsm_21)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_14) | (ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_21))) begin
        C5_dbias_ce0 = ap_const_logic_1;
    end else begin
        C5_dbias_ce0 = ap_const_logic_0;
    end
end

/// C5_dbias_we0 assign process. ///
always @ (ap_sig_cseq_ST_st27_fsm_21)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_21)) begin
        C5_dbias_we0 = ap_const_logic_1;
    end else begin
        C5_dbias_we0 = ap_const_logic_0;
    end
end

/// C5_dmapData_address0 assign process. ///
always @ (ap_sig_cseq_ST_st12_fsm_6 or C5_dmapData_addr_reg_750 or ap_sig_cseq_ST_st19_fsm_13 or tmp_195_fu_596_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_13)) begin
        C5_dmapData_address0 = C5_dmapData_addr_reg_750;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_6)) begin
        C5_dmapData_address0 = tmp_195_fu_596_p1;
    end else begin
        C5_dmapData_address0 = 'bx;
    end
end

/// C5_dmapData_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st12_fsm_6 or ap_sig_cseq_ST_st19_fsm_13)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_13))) begin
        C5_dmapData_ce0 = ap_const_logic_1;
    end else begin
        C5_dmapData_ce0 = ap_const_logic_0;
    end
end

/// C5_dmapData_we0 assign process. ///
always @ (ap_sig_cseq_ST_st19_fsm_13)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_13)) begin
        C5_dmapData_we0 = ap_const_logic_1;
    end else begin
        C5_dmapData_we0 = ap_const_logic_0;
    end
end

/// S4_y_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_3 or ap_reg_ppiten_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        S4_y_ce0 = ap_const_logic_1;
    end else begin
        S4_y_ce0 = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st20_fsm_14 or exitcond_fu_621_p2)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_14) & ~(ap_const_lv1_0 == exitcond_fu_621_p2)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st20_fsm_14 or exitcond_fu_621_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_14) & ~(ap_const_lv1_0 == exitcond_fu_621_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_3 assign process. ///
always @ (ap_sig_bdd_142)
begin
    if (ap_sig_bdd_142) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st10_fsm_4 assign process. ///
always @ (ap_sig_bdd_199)
begin
    if (ap_sig_bdd_199) begin
        ap_sig_cseq_ST_st10_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st11_fsm_5 assign process. ///
always @ (ap_sig_bdd_208)
begin
    if (ap_sig_bdd_208) begin
        ap_sig_cseq_ST_st11_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st12_fsm_6 assign process. ///
always @ (ap_sig_bdd_228)
begin
    if (ap_sig_bdd_228) begin
        ap_sig_cseq_ST_st12_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st13_fsm_7 assign process. ///
always @ (ap_sig_bdd_243)
begin
    if (ap_sig_bdd_243) begin
        ap_sig_cseq_ST_st13_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st14_fsm_8 assign process. ///
always @ (ap_sig_bdd_341)
begin
    if (ap_sig_bdd_341) begin
        ap_sig_cseq_ST_st14_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_8 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st18_fsm_12 assign process. ///
always @ (ap_sig_bdd_102)
begin
    if (ap_sig_bdd_102) begin
        ap_sig_cseq_ST_st18_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_12 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st19_fsm_13 assign process. ///
always @ (ap_sig_bdd_304)
begin
    if (ap_sig_bdd_304) begin
        ap_sig_cseq_ST_st19_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_13 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_40)
begin
    if (ap_sig_bdd_40) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st20_fsm_14 assign process. ///
always @ (ap_sig_bdd_254)
begin
    if (ap_sig_bdd_254) begin
        ap_sig_cseq_ST_st20_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_14 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st21_fsm_15 assign process. ///
always @ (ap_sig_bdd_92)
begin
    if (ap_sig_bdd_92) begin
        ap_sig_cseq_ST_st21_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_15 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st22_fsm_16 assign process. ///
always @ (ap_sig_bdd_348)
begin
    if (ap_sig_bdd_348) begin
        ap_sig_cseq_ST_st22_fsm_16 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_16 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st26_fsm_20 assign process. ///
always @ (ap_sig_bdd_109)
begin
    if (ap_sig_bdd_109) begin
        ap_sig_cseq_ST_st26_fsm_20 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_20 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st27_fsm_21 assign process. ///
always @ (ap_sig_bdd_313)
begin
    if (ap_sig_bdd_313) begin
        ap_sig_cseq_ST_st27_fsm_21 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_21 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_119)
begin
    if (ap_sig_bdd_119) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_85)
begin
    if (ap_sig_bdd_85) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// grp_fu_257_p0 assign process. ///
always @ (C5_dmapData_load_reg_760 or C5_dbias_load_reg_788 or ap_sig_cseq_ST_st14_fsm_8 or ap_sig_cseq_ST_st22_fsm_16)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_16)) begin
        grp_fu_257_p0 = C5_dbias_load_reg_788;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_8)) begin
        grp_fu_257_p0 = C5_dmapData_load_reg_760;
    end else begin
        grp_fu_257_p0 = 'bx;
    end
end

/// grp_fu_257_p1 assign process. ///
always @ (reg_267 or empty_69_reg_765 or ap_sig_cseq_ST_st14_fsm_8 or ap_sig_cseq_ST_st22_fsm_16)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_16)) begin
        grp_fu_257_p1 = reg_267;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_8)) begin
        grp_fu_257_p1 = empty_69_reg_765;
    end else begin
        grp_fu_257_p1 = 'bx;
    end
end

/// k_phi_fu_206_p4 assign process. ///
always @ (k_reg_202 or exitcond_flatten_reg_676 or ap_sig_cseq_ST_pp0_stg0_fsm_3 or ap_reg_ppiten_pp0_it1 or k_mid2_reg_691)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == exitcond_flatten_reg_676))) begin
        k_phi_fu_206_p4 = k_mid2_reg_691;
    end else begin
        k_phi_fu_206_p4 = k_reg_202;
    end
end

/// tmp_address0 assign process. ///
always @ (ap_reg_ppiten_pp0_it5 or ap_sig_cseq_ST_st12_fsm_6 or tmp_193_fu_466_p1 or tmp_196_fu_616_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it5)) begin
        tmp_address0 = tmp_193_fu_466_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_6)) begin
        tmp_address0 = tmp_196_fu_616_p1;
    end else begin
        tmp_address0 = 'bx;
    end
end

/// tmp_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it5 or ap_sig_cseq_ST_st12_fsm_6)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it5) | (ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_6))) begin
        tmp_ce0 = ap_const_logic_1;
    end else begin
        tmp_ce0 = ap_const_logic_0;
    end
end

/// tmp_we0 assign process. ///
always @ (ap_reg_ppiten_pp0_it5 or ap_reg_ppstg_exitcond_flatten_reg_676_pp0_it4)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it5) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_676_pp0_it4))) begin
        tmp_we0 = ap_const_logic_1;
    end else begin
        tmp_we0 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or exitcond_flatten9_fu_279_p2 or exitcond_flatten_fu_347_p2 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it4 or ap_reg_ppiten_pp0_it5 or exitcond2_fu_509_p2 or exitcond1_fu_575_p2 or exitcond_fu_621_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(exitcond_flatten9_fu_279_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st20_fsm_14;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_3;
        end
        ap_ST_pp0_stg0_fsm_3 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp0_it5) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it4)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond_flatten_fu_347_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_3;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond_flatten_fu_347_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_st10_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st10_fsm_4;
            end
        end
        ap_ST_st10_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_5;
        end
        ap_ST_st11_fsm_5 : 
        begin
            if (~(ap_const_lv1_0 == exitcond2_fu_509_p2)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st12_fsm_6;
            end
        end
        ap_ST_st12_fsm_6 : 
        begin
            if ((ap_const_lv1_0 == exitcond1_fu_575_p2)) begin
                ap_NS_fsm = ap_ST_st13_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st11_fsm_5;
            end
        end
        ap_ST_st13_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_8;
        end
        ap_ST_st14_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_9;
        end
        ap_ST_st15_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_10;
        end
        ap_ST_st16_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_11;
        end
        ap_ST_st17_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_12;
        end
        ap_ST_st18_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_13;
        end
        ap_ST_st19_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_6;
        end
        ap_ST_st20_fsm_14 : 
        begin
            if (~(ap_const_lv1_0 == exitcond_fu_621_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st21_fsm_15;
            end
        end
        ap_ST_st21_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_16;
        end
        ap_ST_st22_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_17;
        end
        ap_ST_st23_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_18;
        end
        ap_ST_st24_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_19;
        end
        ap_ST_st25_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_20;
        end
        ap_ST_st26_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_21;
        end
        ap_ST_st27_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_14;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C5_dbias_d0 = reg_273;
assign C5_dmapData_addr1_cast_fu_478_p1 = tmp_190_fu_471_p3;
assign C5_dmapData_addr2_cast_fu_487_p1 = C5_dmapData_addr2_fu_482_p2;
assign C5_dmapData_addr2_fu_482_p2 = (tmp_154_trn_cast1_reg_666 + C5_dmapData_addr1_cast_fu_478_p1);
assign C5_dmapData_addr3_fu_503_p2 = (p_shl26_fu_499_p1 + C5_dmapData_addr2_cast_fu_487_p1);
assign C5_dmapData_addr4_fu_531_p2 = (tmp_156_trn_fu_527_p1 + C5_dmapData_addr3_reg_714);
assign C5_dmapData_addr5_fu_542_p2 = (tmp_134_fu_536_p2 + C5_dmapData_addr4_fu_531_p2);
assign C5_dmapData_addr6_fu_591_p2 = (tmp_161_trn_fu_587_p1 + C5_dmapData_addr5_reg_727);
assign C5_dmapData_d0 = reg_273;
assign S4_y_addr10_cast_fu_401_p1 = S4_y_addr1_fu_396_p2;
assign S4_y_addr1_fu_396_p2 = (S4_y_addr9_reg_671 + tmp_155_trn_cast_fu_393_p1);
assign S4_y_addr2_fu_420_p2 = (S4_y_addr10_cast_fu_401_p1 + p_shl28_fu_416_p1);
assign S4_y_addr3_fu_426_p2 = (S4_y_addr2_fu_420_p2 + tmp_159_trn_fu_405_p1);
assign S4_y_addr9_fu_341_p2 = (tmp_154_trn_cast_fu_327_p1 + p_shl_cast_fu_337_p1);
assign S4_y_address0 = tmp_191_fu_432_p1;

/// ap_sig_bdd_102 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_102 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end

/// ap_sig_bdd_109 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_109 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_14]);
end

/// ap_sig_bdd_119 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_119 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_142 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_142 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_199 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_199 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_208 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_208 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_228 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_228 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_243 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_243 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_254 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_254 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end

/// ap_sig_bdd_304 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_304 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end

/// ap_sig_bdd_313 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_313 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_15]);
end

/// ap_sig_bdd_341 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_341 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_348 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_348 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_10]);
end

/// ap_sig_bdd_40 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_40 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_85 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_85 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_92 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_92 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end
assign exitcond16_fu_291_p2 = (j_reg_180 == ap_const_lv5_10? 1'b1: 1'b0);
assign exitcond17_fu_359_p2 = (m_reg_213 == ap_const_lv3_5? 1'b1: 1'b0);
assign exitcond1_fu_575_p2 = (m_1_reg_235 == ap_const_lv3_5? 1'b1: 1'b0);
assign exitcond2_fu_509_p2 = (k_1_reg_224 == ap_const_lv3_5? 1'b1: 1'b0);
assign exitcond_flatten9_fu_279_p2 = (indvar_flatten7_reg_158 == ap_const_lv9_1E0? 1'b1: 1'b0);
assign exitcond_flatten_fu_347_p2 = (indvar_flatten_reg_191 == ap_const_lv5_19? 1'b1: 1'b0);
assign exitcond_fu_621_p2 = (i_1_reg_246 == ap_const_lv5_1E? 1'b1: 1'b0);
assign grp_fu_257_ce = ap_const_logic_1;
assign grp_fu_261_ce = ap_const_logic_1;
assign grp_fu_261_p0 = S4_y_q0;
assign grp_fu_261_p1 = reg_267;
assign i_19_fu_627_p2 = (i_1_reg_246 + ap_const_lv5_1);
assign i_4_fu_305_p2 = (i_reg_169 + ap_const_lv5_1);
assign i_mid2_fu_311_p3 = ((exitcond16_fu_291_p2[0:0]===1'b1)? i_4_fu_305_p2: i_reg_169);
assign indvar_flatten_next8_fu_285_p2 = (indvar_flatten7_reg_158 + ap_const_lv9_1);
assign indvar_flatten_next_fu_353_p2 = (indvar_flatten_reg_191 + ap_const_lv5_1);
assign j_16_fu_570_p2 = (j_mid2_reg_647 + ap_const_lv5_1);
assign j_mid2_fu_297_p3 = ((exitcond16_fu_291_p2[0:0]===1'b1)? ap_const_lv5_0: j_reg_180);
assign k_5_fu_515_p2 = (k_1_reg_224 + ap_const_lv3_1);
assign k_mid2_fu_379_p3 = ((exitcond17_fu_359_p2[0:0]===1'b1)? k_s_fu_373_p2: k_phi_fu_206_p4);
assign k_s_fu_373_p2 = (k_phi_fu_206_p4 + ap_const_lv3_1);
assign m_7_fu_387_p2 = (m_mid2_fu_365_p3 + ap_const_lv3_1);
assign m_8_fu_581_p2 = (m_1_reg_235 + ap_const_lv3_1);
assign m_mid2_fu_365_p3 = ((exitcond17_fu_359_p2[0:0]===1'b1)? ap_const_lv3_0: m_reg_213);
assign p_addr10_fu_611_p2 = (tmp_163_trn_cast_fu_607_p1 + p_addr_reg_732);
assign p_addr11_fu_454_p2 = (tmp_155_trn_cast1_fu_437_p1 + p_shl27_cast_fu_450_p1);
assign p_addr12_fu_460_p2 = (p_addr11_fu_454_p2 + tmp_159_trn_cast_fu_440_p1);
assign p_addr_fu_564_p2 = (p_shl29_cast_fu_560_p1 + tmp_158_trn_cast_fu_548_p1);
assign p_shl26_fu_499_p1 = tmp_132_fu_491_p3;
assign p_shl27_cast_fu_450_p1 = tmp_192_fu_443_p3;
assign p_shl28_fu_416_p1 = tmp_133_fu_408_p3;
assign p_shl29_cast_fu_560_p1 = tmp_194_fu_552_p3;
assign p_shl_cast_fu_337_p1 = tmp_189_fu_330_p3;
assign tmp_101_fu_521_p2 = ($signed(ap_const_lv3_4) - $signed(k_1_reg_224));
assign tmp_102_fu_601_p2 = ($signed(ap_const_lv3_4) - $signed(m_1_reg_235));
assign tmp_132_fu_491_p3 = {{C5_dmapData_addr2_fu_482_p2}, {ap_const_lv2_0}};
assign tmp_133_fu_408_p3 = {{S4_y_addr1_fu_396_p2}, {ap_const_lv2_0}};
assign tmp_134_fu_536_p2 = C5_dmapData_addr4_fu_531_p2 << ap_const_lv32_2;
assign tmp_154_trn_cast1_fu_324_p1 = j_mid2_reg_647;
assign tmp_154_trn_cast_fu_327_p1 = j_mid2_reg_647;
assign tmp_155_trn_cast1_fu_437_p1 = ap_reg_ppstg_k_mid2_reg_691_pp0_it4;
assign tmp_155_trn_cast_fu_393_p1 = k_mid2_reg_691;
assign tmp_156_trn_fu_527_p1 = k_1_reg_224;
assign tmp_158_trn_cast_fu_548_p1 = $unsigned(tmp_101_fu_521_p2);
assign tmp_159_trn_cast_fu_440_p1 = ap_reg_ppstg_m_mid2_reg_685_pp0_it4;
assign tmp_159_trn_fu_405_p1 = m_mid2_reg_685;
assign tmp_161_trn_fu_587_p1 = m_1_reg_235;
assign tmp_163_trn_cast_fu_607_p1 = $unsigned(tmp_102_fu_601_p2);
assign tmp_189_fu_330_p3 = {{j_mid2_reg_647}, {ap_const_lv2_0}};
assign tmp_190_fu_471_p3 = {{i_mid2_reg_655}, {ap_const_lv4_0}};
assign tmp_191_fu_432_p1 = S4_y_addr3_fu_426_p2;
assign tmp_192_fu_443_p3 = {{ap_reg_ppstg_k_mid2_reg_691_pp0_it4}, {ap_const_lv2_0}};
assign tmp_193_fu_466_p1 = p_addr12_fu_460_p2;
assign tmp_194_fu_552_p3 = {{tmp_101_fu_521_p2}, {ap_const_lv2_0}};
assign tmp_195_fu_596_p1 = C5_dmapData_addr6_fu_591_p2;
assign tmp_196_fu_616_p1 = p_addr10_fu_611_p2;
assign tmp_98_fu_633_p1 = i_1_reg_246;
assign tmp_d0 = grp_fu_261_p2;
assign tmp_s_fu_319_p1 = i_mid2_fu_311_p3;
always @ (posedge ap_clk)
begin
    tmp_154_trn_cast1_reg_666[9:5] <= 5'b00000;
end



endmodule //dateport_update_C5

