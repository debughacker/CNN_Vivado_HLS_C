// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dateport_update_C3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        S2_y_address0,
        S2_y_ce0,
        S2_y_q0,
        S2_y_address1,
        S2_y_ce1,
        S2_y_q1,
        C3_d_address0,
        C3_d_ce0,
        C3_d_q0,
        C3_d_address1,
        C3_d_ce1,
        C3_d_q1,
        C3_dmapData_address0,
        C3_dmapData_ce0,
        C3_dmapData_we0,
        C3_dmapData_d0,
        C3_dmapData_q0,
        C3_dbias_address0,
        C3_dbias_ce0,
        C3_dbias_we0,
        C3_dbias_d0,
        C3_dbias_q0
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 72'b1;
parameter    ap_ST_st2_fsm_1 = 72'b10;
parameter    ap_ST_st3_fsm_2 = 72'b100;
parameter    ap_ST_st4_fsm_3 = 72'b1000;
parameter    ap_ST_pp0_stg0_fsm_4 = 72'b10000;
parameter    ap_ST_pp0_stg1_fsm_5 = 72'b100000;
parameter    ap_ST_pp0_stg2_fsm_6 = 72'b1000000;
parameter    ap_ST_pp0_stg3_fsm_7 = 72'b10000000;
parameter    ap_ST_pp0_stg4_fsm_8 = 72'b100000000;
parameter    ap_ST_pp0_stg5_fsm_9 = 72'b1000000000;
parameter    ap_ST_pp0_stg6_fsm_10 = 72'b10000000000;
parameter    ap_ST_pp0_stg7_fsm_11 = 72'b100000000000;
parameter    ap_ST_pp0_stg8_fsm_12 = 72'b1000000000000;
parameter    ap_ST_pp0_stg9_fsm_13 = 72'b10000000000000;
parameter    ap_ST_pp0_stg10_fsm_14 = 72'b100000000000000;
parameter    ap_ST_pp0_stg11_fsm_15 = 72'b1000000000000000;
parameter    ap_ST_pp0_stg12_fsm_16 = 72'b10000000000000000;
parameter    ap_ST_pp0_stg13_fsm_17 = 72'b100000000000000000;
parameter    ap_ST_pp0_stg14_fsm_18 = 72'b1000000000000000000;
parameter    ap_ST_pp0_stg15_fsm_19 = 72'b10000000000000000000;
parameter    ap_ST_pp0_stg16_fsm_20 = 72'b100000000000000000000;
parameter    ap_ST_pp0_stg17_fsm_21 = 72'b1000000000000000000000;
parameter    ap_ST_pp0_stg18_fsm_22 = 72'b10000000000000000000000;
parameter    ap_ST_pp0_stg19_fsm_23 = 72'b100000000000000000000000;
parameter    ap_ST_pp0_stg20_fsm_24 = 72'b1000000000000000000000000;
parameter    ap_ST_pp0_stg21_fsm_25 = 72'b10000000000000000000000000;
parameter    ap_ST_pp0_stg22_fsm_26 = 72'b100000000000000000000000000;
parameter    ap_ST_pp0_stg23_fsm_27 = 72'b1000000000000000000000000000;
parameter    ap_ST_pp0_stg24_fsm_28 = 72'b10000000000000000000000000000;
parameter    ap_ST_pp0_stg25_fsm_29 = 72'b100000000000000000000000000000;
parameter    ap_ST_pp0_stg26_fsm_30 = 72'b1000000000000000000000000000000;
parameter    ap_ST_pp0_stg27_fsm_31 = 72'b10000000000000000000000000000000;
parameter    ap_ST_pp0_stg28_fsm_32 = 72'b100000000000000000000000000000000;
parameter    ap_ST_pp0_stg29_fsm_33 = 72'b1000000000000000000000000000000000;
parameter    ap_ST_pp0_stg30_fsm_34 = 72'b10000000000000000000000000000000000;
parameter    ap_ST_pp0_stg31_fsm_35 = 72'b100000000000000000000000000000000000;
parameter    ap_ST_pp0_stg32_fsm_36 = 72'b1000000000000000000000000000000000000;
parameter    ap_ST_pp0_stg33_fsm_37 = 72'b10000000000000000000000000000000000000;
parameter    ap_ST_pp0_stg34_fsm_38 = 72'b100000000000000000000000000000000000000;
parameter    ap_ST_pp0_stg35_fsm_39 = 72'b1000000000000000000000000000000000000000;
parameter    ap_ST_pp0_stg36_fsm_40 = 72'b10000000000000000000000000000000000000000;
parameter    ap_ST_pp0_stg37_fsm_41 = 72'b100000000000000000000000000000000000000000;
parameter    ap_ST_pp0_stg38_fsm_42 = 72'b1000000000000000000000000000000000000000000;
parameter    ap_ST_pp0_stg39_fsm_43 = 72'b10000000000000000000000000000000000000000000;
parameter    ap_ST_pp0_stg40_fsm_44 = 72'b100000000000000000000000000000000000000000000;
parameter    ap_ST_pp0_stg41_fsm_45 = 72'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_46 = 72'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_47 = 72'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_48 = 72'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_49 = 72'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_50 = 72'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_51 = 72'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_52 = 72'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_53 = 72'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_54 = 72'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_55 = 72'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_56 = 72'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_57 = 72'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st64_fsm_58 = 72'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st65_fsm_59 = 72'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st66_fsm_60 = 72'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st67_fsm_61 = 72'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st68_fsm_62 = 72'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st69_fsm_63 = 72'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st70_fsm_64 = 72'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st71_fsm_65 = 72'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st72_fsm_66 = 72'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st73_fsm_67 = 72'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st74_fsm_68 = 72'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st75_fsm_69 = 72'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st76_fsm_70 = 72'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st77_fsm_71 = 72'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_3B = 32'b111011;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_31 = 32'b110001;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv32_2A = 32'b101010;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_36 = 32'b110110;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_2E = 32'b101110;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv32_30 = 32'b110000;
parameter    ap_const_lv32_38 = 32'b111000;
parameter    ap_const_lv32_39 = 32'b111001;
parameter    ap_const_lv32_3A = 32'b111010;
parameter    ap_const_lv32_41 = 32'b1000001;
parameter    ap_const_lv32_46 = 32'b1000110;
parameter    ap_const_lv32_2D = 32'b101101;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_37 = 32'b110111;
parameter    ap_const_lv32_47 = 32'b1000111;
parameter    ap_const_lv32_32 = 32'b110010;
parameter    ap_const_lv32_3C = 32'b111100;
parameter    ap_const_lv32_42 = 32'b1000010;
parameter    ap_const_lv7_60 = 7'b1100000;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv3_6 = 3'b110;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv3_5 = 3'b101;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv8_FA = 8'b11111010;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv7_32 = 7'b110010;
parameter    ap_const_lv4_A = 4'b1010;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv3_2 = 3'b10;
parameter    ap_const_lv3_3 = 3'b11;
parameter    ap_const_lv4_4 = 4'b100;
parameter    ap_const_lv4_5 = 4'b101;
parameter    ap_const_lv4_6 = 4'b110;
parameter    ap_const_lv4_7 = 4'b111;
parameter    ap_const_lv4_9 = 4'b1001;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] S2_y_address0;
output   S2_y_ce0;
input  [31:0] S2_y_q0;
output  [10:0] S2_y_address1;
output   S2_y_ce1;
input  [31:0] S2_y_q1;
output  [10:0] C3_d_address0;
output   C3_d_ce0;
input  [31:0] C3_d_q0;
output  [10:0] C3_d_address1;
output   C3_d_ce1;
input  [31:0] C3_d_q1;
output  [11:0] C3_dmapData_address0;
output   C3_dmapData_ce0;
output   C3_dmapData_we0;
output  [31:0] C3_dmapData_d0;
input  [31:0] C3_dmapData_q0;
output  [3:0] C3_dbias_address0;
output   C3_dbias_ce0;
output   C3_dbias_we0;
output  [31:0] C3_dbias_d0;
input  [31:0] C3_dbias_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[10:0] S2_y_address0;
reg S2_y_ce0;
reg[10:0] S2_y_address1;
reg S2_y_ce1;
reg[10:0] C3_d_address0;
reg C3_d_ce0;
reg[10:0] C3_d_address1;
reg C3_d_ce1;
reg[11:0] C3_dmapData_address0;
reg C3_dmapData_ce0;
reg C3_dmapData_we0;
reg[3:0] C3_dbias_address0;
reg C3_dbias_ce0;
reg C3_dbias_we0;
(* fsm_encoding = "none" *) reg   [71:0] ap_CS_fsm = 72'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_90;
reg   [7:0] indvar_flatten1_reg_429;
reg   [2:0] k_1_reg_440;
reg   [6:0] indvar_flatten_reg_451;
reg   [2:0] m_1_reg_462;
reg   [3:0] n_reg_473;
reg   [31:0] reg_578;
reg    ap_sig_cseq_ST_pp0_stg2_fsm_6;
reg    ap_sig_bdd_145;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg   [0:0] exitcond_flatten_reg_1637;
reg    ap_sig_cseq_ST_pp0_stg5_fsm_9;
reg    ap_sig_bdd_160;
reg   [31:0] reg_583;
reg    ap_sig_cseq_ST_st65_fsm_59;
reg    ap_sig_bdd_170;
reg   [31:0] reg_589;
reg    ap_sig_cseq_ST_pp0_stg6_fsm_10;
reg    ap_sig_bdd_179;
reg   [31:0] reg_595;
wire   [31:0] grp_fu_572_p2;
reg   [31:0] reg_601;
reg    ap_sig_cseq_ST_pp0_stg10_fsm_14;
reg    ap_sig_bdd_190;
wire   [31:0] tmp_q0;
reg   [31:0] reg_606;
reg    ap_sig_cseq_ST_st55_fsm_49;
reg    ap_sig_bdd_201;
reg   [31:0] reg_612;
reg    ap_sig_cseq_ST_pp0_stg14_fsm_18;
reg    ap_sig_bdd_210;
wire   [31:0] grp_fu_563_p2;
reg   [31:0] reg_617;
reg    ap_sig_cseq_ST_pp0_stg18_fsm_22;
reg    ap_sig_bdd_222;
reg    ap_sig_cseq_ST_pp0_stg22_fsm_26;
reg    ap_sig_bdd_231;
reg    ap_sig_cseq_ST_pp0_stg26_fsm_30;
reg    ap_sig_bdd_240;
reg    ap_sig_cseq_ST_pp0_stg30_fsm_34;
reg    ap_sig_bdd_249;
reg    ap_sig_cseq_ST_pp0_stg34_fsm_38;
reg    ap_sig_bdd_258;
reg    ap_sig_cseq_ST_pp0_stg38_fsm_42;
reg    ap_sig_bdd_267;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_4;
reg    ap_sig_bdd_276;
reg    ap_sig_cseq_ST_st60_fsm_54;
reg    ap_sig_bdd_285;
reg    ap_sig_cseq_ST_st70_fsm_64;
reg    ap_sig_bdd_293;
wire   [6:0] indvar_flatten_next1_fu_630_p2;
reg   [6:0] indvar_flatten_next1_reg_1575;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_303;
wire   [2:0] j_mid2_fu_642_p3;
reg   [2:0] j_mid2_reg_1580;
wire   [0:0] exitcond_flatten9_fu_624_p2;
wire   [4:0] i_mid2_fu_656_p3;
reg   [4:0] i_mid2_reg_1588;
wire   [0:0] exitcond10_fu_664_p2;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_319;
wire   [2:0] k_13_fu_670_p2;
reg   [2:0] k_13_reg_1599;
wire   [5:0] p_addr16_fu_692_p2;
reg   [5:0] p_addr16_reg_1604;
wire  signed [8:0] S2_y_addr13_cast_fu_726_p1;
reg  signed [8:0] S2_y_addr13_cast_reg_1609;
wire   [8:0] p_shl79_cast_fu_737_p1;
reg   [8:0] p_shl79_cast_reg_1614;
wire   [8:0] p_shl80_cast_fu_748_p1;
reg   [8:0] p_shl80_cast_reg_1619;
wire   [8:0] C3_d_addr9_fu_752_p2;
reg   [8:0] C3_d_addr9_reg_1624;
wire   [2:0] m_4_fu_764_p2;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_344;
wire   [0:0] exitcond_flatten_fu_784_p2;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1637_pp0_it1;
wire   [7:0] indvar_flatten_next9_fu_790_p2;
reg   [7:0] indvar_flatten_next9_reg_1641;
wire   [2:0] k_1_mid2_fu_834_p3;
reg   [2:0] k_1_mid2_reg_1646;
wire   [3:0] n_mid2_fu_858_p3;
reg   [3:0] n_mid2_reg_1653;
wire   [2:0] m_1_mid2_fu_866_p3;
reg   [2:0] m_1_mid2_reg_1659;
wire   [3:0] tmp_92_fu_874_p2;
reg   [3:0] tmp_92_reg_1671;
wire   [6:0] indvar_flatten_next_fu_886_p3;
reg   [6:0] indvar_flatten_next_reg_1676;
wire  signed [31:0] S2_y_addr7_fu_934_p2;
reg  signed [31:0] S2_y_addr7_reg_1681;
reg    ap_sig_cseq_ST_pp0_stg1_fsm_5;
reg    ap_sig_bdd_372;
wire   [31:0] C3_d_addr7_fu_983_p2;
reg   [31:0] C3_d_addr7_reg_1698;
wire   [3:0] n_2_fu_1020_p2;
reg   [3:0] n_2_reg_1725;
wire   [3:0] m_1_cast_fu_1083_p1;
reg   [3:0] m_1_cast_reg_1750;
reg    ap_sig_cseq_ST_pp0_stg3_fsm_7;
reg    ap_sig_bdd_404;
reg   [31:0] S2_y_load_2_reg_1757;
reg   [31:0] C3_d_load_3_reg_1762;
reg   [31:0] S2_y_load_3_reg_1767;
reg   [31:0] C3_d_load_4_reg_1772;
reg   [31:0] S2_y_load_4_reg_1797;
reg    ap_sig_cseq_ST_pp0_stg4_fsm_8;
reg    ap_sig_bdd_425;
reg   [31:0] C3_d_load_5_reg_1802;
reg   [31:0] S2_y_load_5_reg_1807;
reg   [31:0] C3_d_load_6_reg_1812;
reg   [4:0] tmp_addr_1_reg_1837;
reg   [31:0] S2_y_load_7_reg_1842;
reg   [31:0] C3_d_load_8_reg_1847;
reg   [31:0] S2_y_load_9_reg_1872;
reg   [31:0] C3_d_load_10_reg_1877;
reg   [31:0] tmp_243_2_reg_1882;
reg    ap_sig_cseq_ST_pp0_stg7_fsm_11;
reg    ap_sig_bdd_459;
reg   [31:0] tmp_243_3_reg_1887;
reg    ap_sig_cseq_ST_pp0_stg8_fsm_12;
reg    ap_sig_bdd_468;
reg   [31:0] tmp_243_4_reg_1892;
reg    ap_sig_cseq_ST_pp0_stg9_fsm_13;
reg    ap_sig_bdd_477;
reg   [31:0] tmp_243_6_reg_1897;
reg    ap_sig_cseq_ST_pp0_stg11_fsm_15;
reg    ap_sig_bdd_486;
reg   [31:0] tmp_243_7_reg_1902;
reg    ap_sig_cseq_ST_pp0_stg12_fsm_16;
reg    ap_sig_bdd_495;
reg   [31:0] tmp_243_8_reg_1907;
reg    ap_sig_cseq_ST_pp0_stg13_fsm_17;
reg    ap_sig_bdd_504;
wire  signed [31:0] C3_dmapData_addr3_fu_1331_p2;
reg  signed [31:0] C3_dmapData_addr3_reg_1912;
reg    ap_sig_cseq_ST_st52_fsm_46;
reg    ap_sig_bdd_514;
wire   [2:0] k_15_fu_1343_p2;
reg   [2:0] k_15_reg_1920;
reg    ap_sig_cseq_ST_st53_fsm_47;
reg    ap_sig_bdd_523;
wire  signed [31:0] C3_dmapData_addr5_fu_1370_p2;
reg  signed [31:0] C3_dmapData_addr5_reg_1925;
wire   [0:0] exitcond4_fu_1337_p2;
wire   [5:0] p_addr19_fu_1392_p2;
reg   [5:0] p_addr19_reg_1930;
wire   [2:0] j_15_fu_1398_p2;
wire   [2:0] m_5_fu_1409_p2;
reg   [2:0] m_5_reg_1943;
reg    ap_sig_cseq_ST_st54_fsm_48;
reg    ap_sig_bdd_543;
reg   [11:0] C3_dmapData_addr_reg_1948;
wire   [0:0] exitcond3_fu_1403_p2;
reg   [31:0] C3_dmapData_load_reg_1958;
wire   [4:0] i_18_fu_1455_p2;
reg   [4:0] i_18_reg_1966;
reg    ap_sig_cseq_ST_st62_fsm_56;
reg    ap_sig_bdd_560;
wire   [63:0] tmp_s_fu_1461_p1;
reg   [63:0] tmp_s_reg_1971;
wire   [0:0] exitcond2_fu_1449_p2;
wire   [8:0] C3_d_addr8_fu_1489_p2;
reg   [8:0] C3_d_addr8_reg_1976;
wire   [3:0] j_14_fu_1501_p2;
reg   [3:0] j_14_reg_1984;
reg    ap_sig_cseq_ST_st63_fsm_57;
reg    ap_sig_bdd_576;
wire   [31:0] C3_d_addr5_fu_1540_p2;
reg   [31:0] C3_d_addr5_reg_1989;
wire   [0:0] exitcond1_fu_1495_p2;
reg   [3:0] C3_dbias_addr_reg_1994;
wire   [3:0] k_14_fu_1552_p2;
reg   [3:0] k_14_reg_2002;
reg    ap_sig_cseq_ST_st64_fsm_58;
reg    ap_sig_bdd_594;
wire   [0:0] exitcond_fu_1546_p2;
reg   [31:0] C3_dbias_load_reg_2012;
reg    ap_sig_cseq_ST_st71_fsm_65;
reg    ap_sig_bdd_607;
reg   [31:0] tmp_91_reg_2017;
reg    ap_sig_cseq_ST_st76_fsm_70;
reg    ap_sig_bdd_615;
reg    ap_sig_cseq_ST_pp0_stg41_fsm_45;
reg    ap_sig_bdd_624;
reg   [4:0] tmp_address0;
reg    tmp_ce0;
reg    tmp_we0;
reg   [31:0] tmp_d0;
reg   [6:0] indvar_flatten9_reg_374;
reg   [4:0] i_reg_385;
reg   [2:0] j_reg_396;
reg   [2:0] k_reg_407;
wire   [0:0] exitcond9_fu_758_p2;
reg   [2:0] m_reg_418;
reg   [7:0] indvar_flatten1_phi_fu_433_p4;
reg   [2:0] k_1_phi_fu_444_p4;
reg   [6:0] indvar_flatten_phi_fu_455_p4;
reg   [2:0] m_1_phi_fu_466_p4;
reg   [3:0] n_phi_fu_477_p4;
reg   [2:0] k_2_reg_484;
reg   [2:0] m_2_reg_495;
reg    ap_sig_cseq_ST_st61_fsm_55;
reg    ap_sig_bdd_680;
reg   [4:0] i_1_reg_506;
reg    ap_sig_cseq_ST_st77_fsm_71;
reg    ap_sig_bdd_689;
reg   [3:0] j_1_reg_517;
reg   [31:0] q_reg_528;
reg   [3:0] k_3_reg_540;
reg   [31:0] q_1_reg_551;
wire   [63:0] tmp_184_fu_779_p1;
wire   [63:0] tmp_162_fu_946_p1;
wire   [63:0] tmp_163_fu_989_p1;
wire   [63:0] tmp_166_fu_1004_p1;
wire   [63:0] tmp_167_fu_1015_p1;
wire   [63:0] tmp_168_fu_1044_p1;
wire   [63:0] tmp_169_fu_1054_p1;
wire   [63:0] tmp_170_fu_1068_p1;
wire   [63:0] tmp_171_fu_1078_p1;
wire   [63:0] tmp_172_fu_1107_p1;
wire   [63:0] tmp_173_fu_1117_p1;
wire   [63:0] tmp_174_fu_1131_p1;
wire   [63:0] tmp_175_fu_1141_p1;
wire   [63:0] tmp_176_fu_1165_p1;
wire   [63:0] tmp_177_fu_1175_p1;
wire   [63:0] tmp_178_fu_1189_p1;
wire   [63:0] tmp_179_fu_1199_p1;
wire   [63:0] tmp_165_fu_1245_p1;
wire   [63:0] tmp_180_fu_1259_p1;
wire   [63:0] tmp_181_fu_1269_p1;
wire   [63:0] tmp_182_fu_1283_p1;
wire   [63:0] tmp_183_fu_1293_p1;
wire   [63:0] tmp_187_fu_1424_p1;
wire   [63:0] tmp_188_fu_1444_p1;
wire   [63:0] tmp_185_fu_1567_p1;
reg   [31:0] grp_fu_563_p0;
reg   [31:0] grp_fu_563_p1;
reg    ap_sig_cseq_ST_st56_fsm_50;
reg    ap_sig_bdd_777;
reg    ap_sig_cseq_ST_st66_fsm_60;
reg    ap_sig_bdd_784;
reg    ap_sig_cseq_ST_st72_fsm_66;
reg    ap_sig_bdd_791;
reg   [31:0] grp_fu_572_p0;
reg   [31:0] grp_fu_572_p1;
wire   [0:0] exitcond14_fu_636_p2;
wire   [4:0] i_3_fu_650_p2;
wire   [4:0] tmp_160_fu_680_p3;
wire   [5:0] tmp_135_trn_cast_fu_676_p1;
wire   [5:0] p_shl_cast_fu_688_p1;
wire   [6:0] tmp_156_fu_698_p3;
wire   [3:0] tmp_157_fu_709_p3;
wire   [7:0] p_shl77_cast_fu_705_p1;
wire   [7:0] p_shl78_cast_fu_716_p1;
wire   [7:0] S2_y_addr5_fu_720_p2;
wire   [7:0] tmp_158_fu_730_p3;
wire   [5:0] tmp_159_fu_741_p3;
wire   [5:0] tmp_138_trn_cast_fu_770_p1;
wire   [5:0] p_addr18_fu_774_p2;
wire   [0:0] exitcond_flatten5_fu_796_p2;
wire   [0:0] exitcond15_fu_816_p2;
wire   [0:0] not_exitcond_flatten_fu_810_p2;
wire   [2:0] k_4_fu_828_p2;
wire   [2:0] m_1_mid_fu_802_p3;
wire   [0:0] exitcond6_mid_fu_822_p2;
wire   [0:0] tmp_161_fu_852_p2;
wire   [2:0] m_6_fu_846_p2;
wire   [3:0] k_1_cast_fu_842_p1;
wire   [6:0] indvar_flatten_op_fu_880_p2;
wire   [8:0] tmp_148_trn_cast_fu_899_p1;
wire  signed [8:0] S2_y_addr6_fu_902_p2;
wire   [12:0] tmp_127_fu_910_p3;
wire   [9:0] tmp_128_fu_922_p3;
wire  signed [31:0] p_shl39_fu_918_p1;
wire  signed [31:0] p_shl40_fu_930_p1;
wire   [31:0] tmp_142_trn_fu_907_p1;
wire  signed [31:0] S2_y_addr8_fu_940_p2;
wire   [8:0] tmp_149_trn_cast_fu_951_p1;
wire   [8:0] C3_d_addr6_fu_954_p2;
wire   [11:0] tmp_129_fu_959_p3;
wire   [9:0] tmp_130_fu_971_p3;
wire   [31:0] p_shl42_fu_979_p1;
wire   [31:0] p_shl41_fu_967_p1;
wire   [2:0] tmp_240_1_fu_894_p2;
wire   [31:0] tmp_241_1_trn_fu_994_p1;
wire  signed [31:0] S2_y_addr9_fu_998_p2;
wire   [31:0] C3_d_addr10_fu_1009_p2;
wire   [2:0] tmp_240_2_fu_1025_p2;
wire   [31:0] tmp_241_2_trn_fu_1035_p1;
wire  signed [31:0] S2_y_addr10_fu_1039_p2;
wire   [31:0] C3_d_addr11_fu_1049_p2;
wire   [2:0] tmp_240_3_fu_1030_p2;
wire   [31:0] tmp_241_3_trn_fu_1059_p1;
wire  signed [31:0] S2_y_addr11_fu_1063_p2;
wire   [31:0] C3_d_addr12_fu_1073_p2;
wire   [3:0] tmp_240_4_fu_1086_p2;
wire   [31:0] tmp_241_4_trn_fu_1098_p1;
wire  signed [31:0] S2_y_addr12_fu_1102_p2;
wire   [31:0] C3_d_addr13_fu_1112_p2;
wire   [3:0] tmp_240_5_fu_1092_p2;
wire   [31:0] tmp_241_5_trn_fu_1122_p1;
wire  signed [31:0] S2_y_addr13_fu_1126_p2;
wire   [31:0] C3_d_addr14_fu_1136_p2;
wire   [3:0] tmp_240_6_fu_1146_p2;
wire   [31:0] tmp_241_6_trn_fu_1156_p1;
wire  signed [31:0] S2_y_addr14_fu_1160_p2;
wire   [31:0] C3_d_addr15_fu_1170_p2;
wire   [3:0] tmp_240_7_fu_1151_p2;
wire   [31:0] tmp_241_7_trn_fu_1180_p1;
wire  signed [31:0] S2_y_addr15_fu_1184_p2;
wire   [31:0] C3_d_addr16_fu_1194_p2;
wire   [4:0] tmp_164_fu_1222_p3;
wire   [5:0] tmp_137_trn_cast_fu_1219_p1;
wire   [5:0] p_shl90_cast_fu_1229_p1;
wire   [5:0] p_addr_fu_1233_p2;
wire   [5:0] tmp_142_trn_cast_fu_1216_p1;
wire   [5:0] p_addr17_fu_1239_p2;
wire   [3:0] tmp_240_s_fu_1204_p3;
wire   [31:0] tmp_241_8_trn_fu_1250_p1;
wire  signed [31:0] S2_y_addr16_fu_1254_p2;
wire   [31:0] C3_d_addr17_fu_1264_p2;
wire  signed [3:0] tmp_240_9_fu_1211_p2;
wire   [31:0] tmp_241_9_trn_fu_1274_p1;
wire  signed [31:0] S2_y_addr17_fu_1278_p2;
wire   [31:0] C3_d_addr18_fu_1288_p2;
wire   [8:0] C3_dmapData_addr1_fu_1301_p2;
wire  signed [9:0] C3_dmapData_addr1_cast_fu_1305_p1;
wire   [9:0] tmp_134_trn_cast_fu_1298_p1;
wire  signed [9:0] C3_dmapData_addr2_fu_1309_p2;
wire   [11:0] tmp_126_fu_1319_p3;
wire  signed [31:0] C3_dmapData_addr2_cast_fu_1315_p1;
wire  signed [31:0] p_shl38_fu_1327_p1;
wire   [31:0] tmp_139_trn_fu_1355_p1;
wire  signed [31:0] C3_dmapData_addr4_fu_1359_p2;
wire   [31:0] tmp_131_fu_1364_p2;
wire  signed [2:0] tmp_95_fu_1349_p2;
wire   [4:0] tmp_186_fu_1380_p3;
wire   [5:0] p_shl92_cast_fu_1388_p1;
wire   [5:0] tmp_141_trn_cast_fu_1376_p1;
wire   [31:0] tmp_143_trn_fu_1415_p1;
wire  signed [31:0] C3_dmapData_addr6_fu_1419_p2;
wire  signed [2:0] tmp_96_fu_1429_p2;
wire   [5:0] tmp_145_trn_cast_fu_1435_p1;
wire   [5:0] p_addr20_fu_1439_p2;
wire   [7:0] tmp_154_fu_1465_p3;
wire   [5:0] tmp_155_fu_1477_p3;
wire   [8:0] p_shl76_cast_fu_1485_p1;
wire   [8:0] p_shl75_cast_fu_1473_p1;
wire   [8:0] tmp_133_trn_cast_fu_1507_p1;
wire   [8:0] C3_d_addr4_fu_1511_p2;
wire   [11:0] tmp_124_fu_1516_p3;
wire   [9:0] tmp_125_fu_1528_p3;
wire   [31:0] p_shl37_fu_1536_p1;
wire   [31:0] p_shl_fu_1524_p1;
wire   [31:0] tmp_136_trn_fu_1558_p1;
wire   [31:0] C3_d_addr19_fu_1562_p2;
wire    grp_fu_563_ce;
wire    grp_fu_572_ce;
reg   [71:0] ap_NS_fsm;


dateport_update_C1_tmp #(
    .DataWidth( 32 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
tmp_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( tmp_address0 ),
    .ce0( tmp_ce0 ),
    .we0( tmp_we0 ),
    .d0( tmp_d0 ),
    .q0( tmp_q0 )
);

dateport_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dateport_fadd_32ns_32ns_32_5_full_dsp_U87(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_563_p0 ),
    .din1( grp_fu_563_p1 ),
    .ce( grp_fu_563_ce ),
    .dout( grp_fu_563_p2 )
);

dateport_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dateport_fmul_32ns_32ns_32_4_max_dsp_U88(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_572_p0 ),
    .din1( grp_fu_572_p1 ),
    .ce( grp_fu_572_ce ),
    .dout( grp_fu_572_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & ~(ap_const_lv1_0 == exitcond_flatten_fu_784_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == exitcond10_fu_664_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg41_fsm_45))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == exitcond10_fu_664_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg41_fsm_45) & ~(exitcond_flatten_reg_1637 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond_flatten9_fu_624_p2))) begin
        i_1_reg_506 <= ap_const_lv5_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st77_fsm_71)) begin
        i_1_reg_506 <= i_18_reg_1966;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st53_fsm_47) & ~(ap_const_lv1_0 == exitcond4_fu_1337_p2))) begin
        i_reg_385 <= i_mid2_reg_1588;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_385 <= ap_const_lv5_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == exitcond10_fu_664_p2))) begin
        indvar_flatten1_reg_429 <= ap_const_lv8_0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        indvar_flatten1_reg_429 <= indvar_flatten_next9_reg_1641;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st53_fsm_47) & ~(ap_const_lv1_0 == exitcond4_fu_1337_p2))) begin
        indvar_flatten9_reg_374 <= indvar_flatten_next1_reg_1575;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        indvar_flatten9_reg_374 <= ap_const_lv7_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == exitcond10_fu_664_p2))) begin
        indvar_flatten_reg_451 <= ap_const_lv7_0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        indvar_flatten_reg_451 <= indvar_flatten_next_reg_1676;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st64_fsm_58) & ~(ap_const_lv1_0 == exitcond_fu_1546_p2))) begin
        j_1_reg_517 <= j_14_reg_1984;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st62_fsm_56) & (ap_const_lv1_0 == exitcond2_fu_1449_p2))) begin
        j_1_reg_517 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st53_fsm_47) & ~(ap_const_lv1_0 == exitcond4_fu_1337_p2))) begin
        j_reg_396 <= j_15_fu_1398_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        j_reg_396 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == exitcond10_fu_664_p2))) begin
        k_1_reg_440 <= ap_const_lv3_0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        k_1_reg_440 <= k_1_mid2_reg_1646;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_48) & ~(ap_const_lv1_0 == exitcond3_fu_1403_p2))) begin
        k_2_reg_484 <= k_15_reg_1920;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_46)) begin
        k_2_reg_484 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st63_fsm_57) & (ap_const_lv1_0 == exitcond1_fu_1495_p2))) begin
        k_3_reg_540 <= ap_const_lv4_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st70_fsm_64)) begin
        k_3_reg_540 <= k_14_reg_2002;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == exitcond9_fu_758_p2))) begin
        k_reg_407 <= k_13_reg_1599;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond_flatten9_fu_624_p2))) begin
        k_reg_407 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == exitcond10_fu_664_p2))) begin
        m_1_reg_462 <= ap_const_lv3_0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        m_1_reg_462 <= m_1_mid2_reg_1659;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st53_fsm_47) & (ap_const_lv1_0 == exitcond4_fu_1337_p2))) begin
        m_2_reg_495 <= ap_const_lv3_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st61_fsm_55)) begin
        m_2_reg_495 <= m_5_reg_1943;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond10_fu_664_p2))) begin
        m_reg_418 <= ap_const_lv3_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == exitcond9_fu_758_p2))) begin
        m_reg_418 <= m_4_fu_764_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == exitcond10_fu_664_p2))) begin
        n_reg_473 <= ap_const_lv4_0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        n_reg_473 <= n_2_reg_1725;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st63_fsm_57) & (ap_const_lv1_0 == exitcond1_fu_1495_p2))) begin
        q_1_reg_551 <= q_reg_528;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st70_fsm_64)) begin
        q_1_reg_551 <= grp_fu_563_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st64_fsm_58) & ~(ap_const_lv1_0 == exitcond_fu_1546_p2))) begin
        q_reg_528 <= q_1_reg_551;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st62_fsm_56) & (ap_const_lv1_0 == exitcond2_fu_1449_p2))) begin
        q_reg_528 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((exitcond_flatten_reg_1637 == ap_const_lv1_0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_10)) begin
            reg_589 <= S2_y_q0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6)) begin
            reg_589 <= S2_y_q1;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((exitcond_flatten_reg_1637 == ap_const_lv1_0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_10)) begin
            reg_595 <= C3_d_q0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6)) begin
            reg_595 <= C3_d_q1;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st63_fsm_57) & (ap_const_lv1_0 == exitcond1_fu_1495_p2))) begin
        C3_d_addr5_reg_1989[31 : 1] <= C3_d_addr5_fu_1540_p2[31 : 1];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5))) begin
        C3_d_addr7_reg_1698[31 : 1] <= C3_d_addr7_fu_983_p2[31 : 1];
        S2_y_addr7_reg_1681[31 : 1] <= S2_y_addr7_fu_934_p2[31 : 1];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st62_fsm_56) & (ap_const_lv1_0 == exitcond2_fu_1449_p2))) begin
        C3_d_addr8_reg_1976[8 : 1] <= C3_d_addr8_fu_1489_p2[8 : 1];
        tmp_s_reg_1971[4 : 0] <= tmp_s_fu_1461_p1[4 : 0];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == exitcond10_fu_664_p2))) begin
        C3_d_addr9_reg_1624[8 : 1] <= C3_d_addr9_fu_752_p2[8 : 1];
        S2_y_addr13_cast_reg_1609[8 : 1] <= S2_y_addr13_cast_fu_726_p1[8 : 1];
        p_shl79_cast_reg_1614[7 : 3] <= p_shl79_cast_fu_737_p1[7 : 3];
        p_shl80_cast_reg_1619[5 : 1] <= p_shl80_cast_fu_748_p1[5 : 1];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_10))) begin
        C3_d_load_10_reg_1877 <= C3_d_q1;
        S2_y_load_9_reg_1872 <= S2_y_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7))) begin
        C3_d_load_3_reg_1762 <= C3_d_q0;
        C3_d_load_4_reg_1772 <= C3_d_q1;
        S2_y_load_2_reg_1757 <= S2_y_q0;
        S2_y_load_3_reg_1767 <= S2_y_q1;
        m_1_cast_reg_1750[2 : 0] <= m_1_cast_fu_1083_p1[2 : 0];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8))) begin
        C3_d_load_5_reg_1802 <= C3_d_q0;
        C3_d_load_6_reg_1812 <= C3_d_q1;
        S2_y_load_4_reg_1797 <= S2_y_q0;
        S2_y_load_5_reg_1807 <= S2_y_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_9))) begin
        C3_d_load_8_reg_1847 <= C3_d_q1;
        S2_y_load_7_reg_1842 <= S2_y_q1;
        tmp_addr_1_reg_1837 <= tmp_165_fu_1245_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st63_fsm_57) & ~(ap_const_lv1_0 == exitcond1_fu_1495_p2))) begin
        C3_dbias_addr_reg_1994 <= tmp_s_reg_1971;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st71_fsm_65)) begin
        C3_dbias_load_reg_2012 <= C3_dbias_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st52_fsm_46)) begin
        C3_dmapData_addr3_reg_1912 <= C3_dmapData_addr3_fu_1331_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st53_fsm_47) & (ap_const_lv1_0 == exitcond4_fu_1337_p2))) begin
        C3_dmapData_addr5_reg_1925 <= C3_dmapData_addr5_fu_1370_p2;
        p_addr19_reg_1930 <= p_addr19_fu_1392_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_48) & (ap_const_lv1_0 == exitcond3_fu_1403_p2))) begin
        C3_dmapData_addr_reg_1948 <= tmp_187_fu_1424_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_49)) begin
        C3_dmapData_load_reg_1958 <= C3_dmapData_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4)) begin
        ap_reg_ppstg_exitcond_flatten_reg_1637_pp0_it1 <= exitcond_flatten_reg_1637;
        exitcond_flatten_reg_1637 <= exitcond_flatten_fu_784_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st62_fsm_56)) begin
        i_18_reg_1966 <= i_18_fu_1455_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond_flatten9_fu_624_p2))) begin
        i_mid2_reg_1588 <= i_mid2_fu_656_p3;
        j_mid2_reg_1580 <= j_mid2_fu_642_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        indvar_flatten_next1_reg_1575 <= indvar_flatten_next1_fu_630_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        indvar_flatten_next9_reg_1641 <= indvar_flatten_next9_fu_790_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_lv1_0 == exitcond_flatten_fu_784_p2))) begin
        indvar_flatten_next_reg_1676 <= indvar_flatten_next_fu_886_p3;
        k_1_mid2_reg_1646 <= k_1_mid2_fu_834_p3;
        m_1_mid2_reg_1659 <= m_1_mid2_fu_866_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st63_fsm_57)) begin
        j_14_reg_1984 <= j_14_fu_1501_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        k_13_reg_1599 <= k_13_fu_670_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st64_fsm_58)) begin
        k_14_reg_2002 <= k_14_fu_1552_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st53_fsm_47)) begin
        k_15_reg_1920 <= k_15_fu_1343_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_48)) begin
        m_5_reg_1943 <= m_5_fu_1409_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5))) begin
        n_2_reg_1725 <= n_2_fu_1020_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_lv1_0 == exitcond_flatten_fu_784_p2))) begin
        n_mid2_reg_1653 <= n_mid2_fu_858_p3;
        tmp_92_reg_1671 <= tmp_92_fu_874_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond10_fu_664_p2))) begin
        p_addr16_reg_1604 <= p_addr16_fu_692_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6) & (exitcond_flatten_reg_1637 == ap_const_lv1_0)) | ((exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_9)))) begin
        reg_578 <= S2_y_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6) & (exitcond_flatten_reg_1637 == ap_const_lv1_0)) | ((exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_9)) | (ap_const_logic_1 == ap_sig_cseq_ST_st65_fsm_59))) begin
        reg_583 <= C3_d_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_9)) | ((exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg10_fsm_14)))) begin
        reg_601 <= grp_fu_572_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_10)) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_49))) begin
        reg_606 <= tmp_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_10)) | ((exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg14_fsm_18)))) begin
        reg_612 <= grp_fu_572_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg10_fsm_14)) | ((exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg14_fsm_18)) | ((exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg18_fsm_22)) | ((exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg22_fsm_26)) | ((exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg26_fsm_30)) | ((exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg30_fsm_34)) | ((exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg34_fsm_38)) | ((exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg38_fsm_42)) | ((exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4)) | (ap_const_logic_1 == ap_sig_cseq_ST_st60_fsm_54) | (ap_const_logic_1 == ap_sig_cseq_ST_st70_fsm_64))) begin
        reg_617 <= grp_fu_563_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_11))) begin
        tmp_243_2_reg_1882 <= grp_fu_572_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_12))) begin
        tmp_243_3_reg_1887 <= grp_fu_572_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg9_fsm_13))) begin
        tmp_243_4_reg_1892 <= grp_fu_572_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg11_fsm_15))) begin
        tmp_243_6_reg_1897 <= grp_fu_572_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg12_fsm_16))) begin
        tmp_243_7_reg_1902 <= grp_fu_572_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg13_fsm_17))) begin
        tmp_243_8_reg_1907 <= grp_fu_572_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st76_fsm_70)) begin
        tmp_91_reg_2017 <= grp_fu_563_p2;
    end
end

/// C3_d_address0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg5_fsm_9 or ap_sig_cseq_ST_pp0_stg1_fsm_5 or ap_sig_cseq_ST_pp0_stg3_fsm_7 or ap_sig_cseq_ST_pp0_stg4_fsm_8 or ap_sig_cseq_ST_st64_fsm_58 or tmp_163_fu_989_p1 or tmp_169_fu_1054_p1 or tmp_173_fu_1117_p1 or tmp_177_fu_1175_p1 or tmp_181_fu_1269_p1 or tmp_185_fu_1567_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st64_fsm_58)) begin
        C3_d_address0 = tmp_185_fu_1567_p1;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_9))) begin
        C3_d_address0 = tmp_181_fu_1269_p1;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8))) begin
        C3_d_address0 = tmp_177_fu_1175_p1;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7))) begin
        C3_d_address0 = tmp_173_fu_1117_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        C3_d_address0 = tmp_169_fu_1054_p1;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5))) begin
        C3_d_address0 = tmp_163_fu_989_p1;
    end else begin
        C3_d_address0 = 'bx;
    end
end

/// C3_d_address1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg5_fsm_9 or ap_sig_cseq_ST_pp0_stg1_fsm_5 or ap_sig_cseq_ST_pp0_stg3_fsm_7 or ap_sig_cseq_ST_pp0_stg4_fsm_8 or tmp_167_fu_1015_p1 or tmp_171_fu_1078_p1 or tmp_175_fu_1141_p1 or tmp_179_fu_1199_p1 or tmp_183_fu_1293_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_9)) begin
            C3_d_address1 = tmp_183_fu_1293_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8)) begin
            C3_d_address1 = tmp_179_fu_1199_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)) begin
            C3_d_address1 = tmp_175_fu_1141_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6)) begin
            C3_d_address1 = tmp_171_fu_1078_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5)) begin
            C3_d_address1 = tmp_167_fu_1015_p1;
        end else begin
            C3_d_address1 = 'bx;
        end
    end else begin
        C3_d_address1 = 'bx;
    end
end

/// C3_d_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg5_fsm_9 or ap_sig_cseq_ST_pp0_stg1_fsm_5 or ap_sig_cseq_ST_pp0_stg3_fsm_7 or ap_sig_cseq_ST_pp0_stg4_fsm_8 or ap_sig_cseq_ST_st64_fsm_58)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5)) | (ap_const_logic_1 == ap_sig_cseq_ST_st64_fsm_58) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_9)))) begin
        C3_d_ce0 = ap_const_logic_1;
    end else begin
        C3_d_ce0 = ap_const_logic_0;
    end
end

/// C3_d_ce1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg5_fsm_9 or ap_sig_cseq_ST_pp0_stg1_fsm_5 or ap_sig_cseq_ST_pp0_stg3_fsm_7 or ap_sig_cseq_ST_pp0_stg4_fsm_8)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_9)))) begin
        C3_d_ce1 = ap_const_logic_1;
    end else begin
        C3_d_ce1 = ap_const_logic_0;
    end
end

/// C3_dbias_address0 assign process. ///
always @ (tmp_s_reg_1971 or ap_sig_cseq_ST_st63_fsm_57 or C3_dbias_addr_reg_1994 or ap_sig_cseq_ST_st77_fsm_71)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st77_fsm_71)) begin
        C3_dbias_address0 = C3_dbias_addr_reg_1994;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st63_fsm_57)) begin
        C3_dbias_address0 = tmp_s_reg_1971;
    end else begin
        C3_dbias_address0 = 'bx;
    end
end

/// C3_dbias_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st63_fsm_57 or ap_sig_cseq_ST_st77_fsm_71)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st63_fsm_57) | (ap_const_logic_1 == ap_sig_cseq_ST_st77_fsm_71))) begin
        C3_dbias_ce0 = ap_const_logic_1;
    end else begin
        C3_dbias_ce0 = ap_const_logic_0;
    end
end

/// C3_dbias_we0 assign process. ///
always @ (ap_sig_cseq_ST_st77_fsm_71)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st77_fsm_71)) begin
        C3_dbias_we0 = ap_const_logic_1;
    end else begin
        C3_dbias_we0 = ap_const_logic_0;
    end
end

/// C3_dmapData_address0 assign process. ///
always @ (ap_sig_cseq_ST_st54_fsm_48 or C3_dmapData_addr_reg_1948 or ap_sig_cseq_ST_st61_fsm_55 or tmp_187_fu_1424_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st61_fsm_55)) begin
        C3_dmapData_address0 = C3_dmapData_addr_reg_1948;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_48)) begin
        C3_dmapData_address0 = tmp_187_fu_1424_p1;
    end else begin
        C3_dmapData_address0 = 'bx;
    end
end

/// C3_dmapData_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st54_fsm_48 or ap_sig_cseq_ST_st61_fsm_55)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_48) | (ap_const_logic_1 == ap_sig_cseq_ST_st61_fsm_55))) begin
        C3_dmapData_ce0 = ap_const_logic_1;
    end else begin
        C3_dmapData_ce0 = ap_const_logic_0;
    end
end

/// C3_dmapData_we0 assign process. ///
always @ (ap_sig_cseq_ST_st61_fsm_55)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st61_fsm_55)) begin
        C3_dmapData_we0 = ap_const_logic_1;
    end else begin
        C3_dmapData_we0 = ap_const_logic_0;
    end
end

/// S2_y_address0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg5_fsm_9 or ap_sig_cseq_ST_pp0_stg1_fsm_5 or ap_sig_cseq_ST_pp0_stg3_fsm_7 or ap_sig_cseq_ST_pp0_stg4_fsm_8 or tmp_162_fu_946_p1 or tmp_168_fu_1044_p1 or tmp_172_fu_1107_p1 or tmp_176_fu_1165_p1 or tmp_180_fu_1259_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_9)) begin
            S2_y_address0 = tmp_180_fu_1259_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8)) begin
            S2_y_address0 = tmp_176_fu_1165_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)) begin
            S2_y_address0 = tmp_172_fu_1107_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6)) begin
            S2_y_address0 = tmp_168_fu_1044_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5)) begin
            S2_y_address0 = tmp_162_fu_946_p1;
        end else begin
            S2_y_address0 = 'bx;
        end
    end else begin
        S2_y_address0 = 'bx;
    end
end

/// S2_y_address1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg5_fsm_9 or ap_sig_cseq_ST_pp0_stg1_fsm_5 or ap_sig_cseq_ST_pp0_stg3_fsm_7 or ap_sig_cseq_ST_pp0_stg4_fsm_8 or tmp_166_fu_1004_p1 or tmp_170_fu_1068_p1 or tmp_174_fu_1131_p1 or tmp_178_fu_1189_p1 or tmp_182_fu_1283_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_9)) begin
            S2_y_address1 = tmp_182_fu_1283_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8)) begin
            S2_y_address1 = tmp_178_fu_1189_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)) begin
            S2_y_address1 = tmp_174_fu_1131_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6)) begin
            S2_y_address1 = tmp_170_fu_1068_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5)) begin
            S2_y_address1 = tmp_166_fu_1004_p1;
        end else begin
            S2_y_address1 = 'bx;
        end
    end else begin
        S2_y_address1 = 'bx;
    end
end

/// S2_y_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg5_fsm_9 or ap_sig_cseq_ST_pp0_stg1_fsm_5 or ap_sig_cseq_ST_pp0_stg3_fsm_7 or ap_sig_cseq_ST_pp0_stg4_fsm_8)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_9)))) begin
        S2_y_ce0 = ap_const_logic_1;
    end else begin
        S2_y_ce0 = ap_const_logic_0;
    end
end

/// S2_y_ce1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg5_fsm_9 or ap_sig_cseq_ST_pp0_stg1_fsm_5 or ap_sig_cseq_ST_pp0_stg3_fsm_7 or ap_sig_cseq_ST_pp0_stg4_fsm_8)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_9)))) begin
        S2_y_ce1 = ap_const_logic_1;
    end else begin
        S2_y_ce1 = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st62_fsm_56 or exitcond2_fu_1449_p2)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st62_fsm_56) & ~(ap_const_lv1_0 == exitcond2_fu_1449_p2)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st62_fsm_56 or exitcond2_fu_1449_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st62_fsm_56) & ~(ap_const_lv1_0 == exitcond2_fu_1449_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_4 assign process. ///
always @ (ap_sig_bdd_276)
begin
    if (ap_sig_bdd_276) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg10_fsm_14 assign process. ///
always @ (ap_sig_bdd_190)
begin
    if (ap_sig_bdd_190) begin
        ap_sig_cseq_ST_pp0_stg10_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg10_fsm_14 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg11_fsm_15 assign process. ///
always @ (ap_sig_bdd_486)
begin
    if (ap_sig_bdd_486) begin
        ap_sig_cseq_ST_pp0_stg11_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg11_fsm_15 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg12_fsm_16 assign process. ///
always @ (ap_sig_bdd_495)
begin
    if (ap_sig_bdd_495) begin
        ap_sig_cseq_ST_pp0_stg12_fsm_16 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg12_fsm_16 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg13_fsm_17 assign process. ///
always @ (ap_sig_bdd_504)
begin
    if (ap_sig_bdd_504) begin
        ap_sig_cseq_ST_pp0_stg13_fsm_17 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg13_fsm_17 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg14_fsm_18 assign process. ///
always @ (ap_sig_bdd_210)
begin
    if (ap_sig_bdd_210) begin
        ap_sig_cseq_ST_pp0_stg14_fsm_18 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg14_fsm_18 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg18_fsm_22 assign process. ///
always @ (ap_sig_bdd_222)
begin
    if (ap_sig_bdd_222) begin
        ap_sig_cseq_ST_pp0_stg18_fsm_22 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg18_fsm_22 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg1_fsm_5 assign process. ///
always @ (ap_sig_bdd_372)
begin
    if (ap_sig_bdd_372) begin
        ap_sig_cseq_ST_pp0_stg1_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg1_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg22_fsm_26 assign process. ///
always @ (ap_sig_bdd_231)
begin
    if (ap_sig_bdd_231) begin
        ap_sig_cseq_ST_pp0_stg22_fsm_26 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg22_fsm_26 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg26_fsm_30 assign process. ///
always @ (ap_sig_bdd_240)
begin
    if (ap_sig_bdd_240) begin
        ap_sig_cseq_ST_pp0_stg26_fsm_30 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg26_fsm_30 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg2_fsm_6 assign process. ///
always @ (ap_sig_bdd_145)
begin
    if (ap_sig_bdd_145) begin
        ap_sig_cseq_ST_pp0_stg2_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg2_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg30_fsm_34 assign process. ///
always @ (ap_sig_bdd_249)
begin
    if (ap_sig_bdd_249) begin
        ap_sig_cseq_ST_pp0_stg30_fsm_34 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg30_fsm_34 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg34_fsm_38 assign process. ///
always @ (ap_sig_bdd_258)
begin
    if (ap_sig_bdd_258) begin
        ap_sig_cseq_ST_pp0_stg34_fsm_38 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg34_fsm_38 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg38_fsm_42 assign process. ///
always @ (ap_sig_bdd_267)
begin
    if (ap_sig_bdd_267) begin
        ap_sig_cseq_ST_pp0_stg38_fsm_42 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg38_fsm_42 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg3_fsm_7 assign process. ///
always @ (ap_sig_bdd_404)
begin
    if (ap_sig_bdd_404) begin
        ap_sig_cseq_ST_pp0_stg3_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg3_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg41_fsm_45 assign process. ///
always @ (ap_sig_bdd_624)
begin
    if (ap_sig_bdd_624) begin
        ap_sig_cseq_ST_pp0_stg41_fsm_45 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg41_fsm_45 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg4_fsm_8 assign process. ///
always @ (ap_sig_bdd_425)
begin
    if (ap_sig_bdd_425) begin
        ap_sig_cseq_ST_pp0_stg4_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg4_fsm_8 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg5_fsm_9 assign process. ///
always @ (ap_sig_bdd_160)
begin
    if (ap_sig_bdd_160) begin
        ap_sig_cseq_ST_pp0_stg5_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg5_fsm_9 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg6_fsm_10 assign process. ///
always @ (ap_sig_bdd_179)
begin
    if (ap_sig_bdd_179) begin
        ap_sig_cseq_ST_pp0_stg6_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg6_fsm_10 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg7_fsm_11 assign process. ///
always @ (ap_sig_bdd_459)
begin
    if (ap_sig_bdd_459) begin
        ap_sig_cseq_ST_pp0_stg7_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg7_fsm_11 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg8_fsm_12 assign process. ///
always @ (ap_sig_bdd_468)
begin
    if (ap_sig_bdd_468) begin
        ap_sig_cseq_ST_pp0_stg8_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg8_fsm_12 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg9_fsm_13 assign process. ///
always @ (ap_sig_bdd_477)
begin
    if (ap_sig_bdd_477) begin
        ap_sig_cseq_ST_pp0_stg9_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg9_fsm_13 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_90)
begin
    if (ap_sig_bdd_90) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_303)
begin
    if (ap_sig_bdd_303) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_319)
begin
    if (ap_sig_bdd_319) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_344)
begin
    if (ap_sig_bdd_344) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st52_fsm_46 assign process. ///
always @ (ap_sig_bdd_514)
begin
    if (ap_sig_bdd_514) begin
        ap_sig_cseq_ST_st52_fsm_46 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st52_fsm_46 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st53_fsm_47 assign process. ///
always @ (ap_sig_bdd_523)
begin
    if (ap_sig_bdd_523) begin
        ap_sig_cseq_ST_st53_fsm_47 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st53_fsm_47 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st54_fsm_48 assign process. ///
always @ (ap_sig_bdd_543)
begin
    if (ap_sig_bdd_543) begin
        ap_sig_cseq_ST_st54_fsm_48 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st54_fsm_48 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st55_fsm_49 assign process. ///
always @ (ap_sig_bdd_201)
begin
    if (ap_sig_bdd_201) begin
        ap_sig_cseq_ST_st55_fsm_49 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st55_fsm_49 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st56_fsm_50 assign process. ///
always @ (ap_sig_bdd_777)
begin
    if (ap_sig_bdd_777) begin
        ap_sig_cseq_ST_st56_fsm_50 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st56_fsm_50 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st60_fsm_54 assign process. ///
always @ (ap_sig_bdd_285)
begin
    if (ap_sig_bdd_285) begin
        ap_sig_cseq_ST_st60_fsm_54 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st60_fsm_54 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st61_fsm_55 assign process. ///
always @ (ap_sig_bdd_680)
begin
    if (ap_sig_bdd_680) begin
        ap_sig_cseq_ST_st61_fsm_55 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st61_fsm_55 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st62_fsm_56 assign process. ///
always @ (ap_sig_bdd_560)
begin
    if (ap_sig_bdd_560) begin
        ap_sig_cseq_ST_st62_fsm_56 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st62_fsm_56 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st63_fsm_57 assign process. ///
always @ (ap_sig_bdd_576)
begin
    if (ap_sig_bdd_576) begin
        ap_sig_cseq_ST_st63_fsm_57 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st63_fsm_57 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st64_fsm_58 assign process. ///
always @ (ap_sig_bdd_594)
begin
    if (ap_sig_bdd_594) begin
        ap_sig_cseq_ST_st64_fsm_58 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st64_fsm_58 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st65_fsm_59 assign process. ///
always @ (ap_sig_bdd_170)
begin
    if (ap_sig_bdd_170) begin
        ap_sig_cseq_ST_st65_fsm_59 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st65_fsm_59 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st66_fsm_60 assign process. ///
always @ (ap_sig_bdd_784)
begin
    if (ap_sig_bdd_784) begin
        ap_sig_cseq_ST_st66_fsm_60 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st66_fsm_60 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st70_fsm_64 assign process. ///
always @ (ap_sig_bdd_293)
begin
    if (ap_sig_bdd_293) begin
        ap_sig_cseq_ST_st70_fsm_64 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st70_fsm_64 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st71_fsm_65 assign process. ///
always @ (ap_sig_bdd_607)
begin
    if (ap_sig_bdd_607) begin
        ap_sig_cseq_ST_st71_fsm_65 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st71_fsm_65 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st72_fsm_66 assign process. ///
always @ (ap_sig_bdd_791)
begin
    if (ap_sig_bdd_791) begin
        ap_sig_cseq_ST_st72_fsm_66 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st72_fsm_66 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st76_fsm_70 assign process. ///
always @ (ap_sig_bdd_615)
begin
    if (ap_sig_bdd_615) begin
        ap_sig_cseq_ST_st76_fsm_70 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st76_fsm_70 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st77_fsm_71 assign process. ///
always @ (ap_sig_bdd_689)
begin
    if (ap_sig_bdd_689) begin
        ap_sig_cseq_ST_st77_fsm_71 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st77_fsm_71 = ap_const_logic_0;
    end
end

/// grp_fu_563_p0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg6_fsm_10 or ap_sig_cseq_ST_pp0_stg10_fsm_14 or tmp_q0 or ap_sig_cseq_ST_pp0_stg14_fsm_18 or grp_fu_563_p2 or ap_sig_cseq_ST_pp0_stg18_fsm_22 or ap_sig_cseq_ST_pp0_stg22_fsm_26 or ap_sig_cseq_ST_pp0_stg26_fsm_30 or ap_sig_cseq_ST_pp0_stg30_fsm_34 or ap_sig_cseq_ST_pp0_stg34_fsm_38 or ap_sig_cseq_ST_pp0_stg38_fsm_42 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or C3_dmapData_load_reg_1958 or C3_dbias_load_reg_2012 or q_1_reg_551 or ap_sig_cseq_ST_st56_fsm_50 or ap_sig_cseq_ST_st66_fsm_60 or ap_sig_cseq_ST_st72_fsm_66)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st72_fsm_66)) begin
        grp_fu_563_p0 = C3_dbias_load_reg_2012;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st66_fsm_60)) begin
        grp_fu_563_p0 = q_1_reg_551;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_50)) begin
        grp_fu_563_p0 = C3_dmapData_load_reg_1958;
    end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg10_fsm_14)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg14_fsm_18)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg18_fsm_22)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg22_fsm_26)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg26_fsm_30)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg30_fsm_34)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg34_fsm_38)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg38_fsm_42)))) begin
        grp_fu_563_p0 = grp_fu_563_p2;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_10))) begin
        grp_fu_563_p0 = tmp_q0;
    end else begin
        grp_fu_563_p0 = 'bx;
    end
end

/// grp_fu_563_p1 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or reg_583 or ap_sig_cseq_ST_pp0_stg6_fsm_10 or reg_601 or ap_sig_cseq_ST_pp0_stg10_fsm_14 or reg_606 or reg_612 or ap_sig_cseq_ST_pp0_stg14_fsm_18 or ap_sig_cseq_ST_pp0_stg18_fsm_22 or ap_sig_cseq_ST_pp0_stg22_fsm_26 or ap_sig_cseq_ST_pp0_stg26_fsm_30 or ap_sig_cseq_ST_pp0_stg30_fsm_34 or ap_sig_cseq_ST_pp0_stg34_fsm_38 or ap_sig_cseq_ST_pp0_stg38_fsm_42 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or tmp_243_2_reg_1882 or tmp_243_3_reg_1887 or tmp_243_4_reg_1892 or tmp_243_6_reg_1897 or tmp_243_7_reg_1902 or tmp_243_8_reg_1907 or q_reg_528 or ap_sig_cseq_ST_st56_fsm_50 or ap_sig_cseq_ST_st66_fsm_60 or ap_sig_cseq_ST_st72_fsm_66)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st72_fsm_66)) begin
        grp_fu_563_p1 = q_reg_528;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st66_fsm_60)) begin
        grp_fu_563_p1 = reg_583;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_50)) begin
        grp_fu_563_p1 = reg_606;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg38_fsm_42))) begin
        grp_fu_563_p1 = tmp_243_8_reg_1907;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg34_fsm_38))) begin
        grp_fu_563_p1 = tmp_243_7_reg_1902;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg30_fsm_34))) begin
        grp_fu_563_p1 = tmp_243_6_reg_1897;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg22_fsm_26))) begin
        grp_fu_563_p1 = tmp_243_4_reg_1892;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg18_fsm_22))) begin
        grp_fu_563_p1 = tmp_243_3_reg_1887;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg14_fsm_18))) begin
        grp_fu_563_p1 = tmp_243_2_reg_1882;
    end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg10_fsm_14)))) begin
        grp_fu_563_p1 = reg_612;
    end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_10)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg26_fsm_30)))) begin
        grp_fu_563_p1 = reg_601;
    end else begin
        grp_fu_563_p1 = 'bx;
    end
end

/// grp_fu_572_p0 assign process. ///
always @ (S2_y_q0 or reg_578 or ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg5_fsm_9 or reg_589 or ap_sig_cseq_ST_pp0_stg6_fsm_10 or ap_sig_cseq_ST_pp0_stg10_fsm_14 or ap_sig_cseq_ST_pp0_stg3_fsm_7 or S2_y_load_2_reg_1757 or S2_y_load_3_reg_1767 or S2_y_load_4_reg_1797 or ap_sig_cseq_ST_pp0_stg4_fsm_8 or S2_y_load_5_reg_1807 or S2_y_load_7_reg_1842 or S2_y_load_9_reg_1872 or ap_sig_cseq_ST_pp0_stg7_fsm_11 or ap_sig_cseq_ST_pp0_stg8_fsm_12 or ap_sig_cseq_ST_pp0_stg9_fsm_13 or ap_sig_cseq_ST_pp0_stg11_fsm_15)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg11_fsm_15))) begin
        grp_fu_572_p0 = S2_y_load_9_reg_1872;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg9_fsm_13))) begin
        grp_fu_572_p0 = S2_y_load_7_reg_1842;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_12))) begin
        grp_fu_572_p0 = reg_578;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_11))) begin
        grp_fu_572_p0 = S2_y_load_5_reg_1807;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_10))) begin
        grp_fu_572_p0 = S2_y_load_4_reg_1797;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_9))) begin
        grp_fu_572_p0 = S2_y_load_3_reg_1767;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8))) begin
        grp_fu_572_p0 = S2_y_load_2_reg_1757;
    end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg10_fsm_14)))) begin
        grp_fu_572_p0 = reg_589;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        grp_fu_572_p0 = S2_y_q0;
    end else begin
        grp_fu_572_p0 = 'bx;
    end
end

/// grp_fu_572_p1 assign process. ///
always @ (C3_d_q0 or ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg5_fsm_9 or reg_583 or ap_sig_cseq_ST_pp0_stg6_fsm_10 or reg_595 or ap_sig_cseq_ST_pp0_stg10_fsm_14 or ap_sig_cseq_ST_pp0_stg3_fsm_7 or C3_d_load_3_reg_1762 or C3_d_load_4_reg_1772 or ap_sig_cseq_ST_pp0_stg4_fsm_8 or C3_d_load_5_reg_1802 or C3_d_load_6_reg_1812 or C3_d_load_8_reg_1847 or C3_d_load_10_reg_1877 or ap_sig_cseq_ST_pp0_stg7_fsm_11 or ap_sig_cseq_ST_pp0_stg8_fsm_12 or ap_sig_cseq_ST_pp0_stg9_fsm_13 or ap_sig_cseq_ST_pp0_stg11_fsm_15)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg11_fsm_15))) begin
        grp_fu_572_p1 = C3_d_load_10_reg_1877;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg9_fsm_13))) begin
        grp_fu_572_p1 = C3_d_load_8_reg_1847;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_12))) begin
        grp_fu_572_p1 = reg_583;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_11))) begin
        grp_fu_572_p1 = C3_d_load_6_reg_1812;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_10))) begin
        grp_fu_572_p1 = C3_d_load_5_reg_1802;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_9))) begin
        grp_fu_572_p1 = C3_d_load_4_reg_1772;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8))) begin
        grp_fu_572_p1 = C3_d_load_3_reg_1762;
    end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg10_fsm_14)))) begin
        grp_fu_572_p1 = reg_595;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        grp_fu_572_p1 = C3_d_q0;
    end else begin
        grp_fu_572_p1 = 'bx;
    end
end

/// indvar_flatten1_phi_fu_433_p4 assign process. ///
always @ (indvar_flatten1_reg_429 or ap_reg_ppiten_pp0_it1 or exitcond_flatten_reg_1637 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or indvar_flatten_next9_reg_1641)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        indvar_flatten1_phi_fu_433_p4 = indvar_flatten_next9_reg_1641;
    end else begin
        indvar_flatten1_phi_fu_433_p4 = indvar_flatten1_reg_429;
    end
end

/// indvar_flatten_phi_fu_455_p4 assign process. ///
always @ (indvar_flatten_reg_451 or ap_reg_ppiten_pp0_it1 or exitcond_flatten_reg_1637 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or indvar_flatten_next_reg_1676)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        indvar_flatten_phi_fu_455_p4 = indvar_flatten_next_reg_1676;
    end else begin
        indvar_flatten_phi_fu_455_p4 = indvar_flatten_reg_451;
    end
end

/// k_1_phi_fu_444_p4 assign process. ///
always @ (k_1_reg_440 or ap_reg_ppiten_pp0_it1 or exitcond_flatten_reg_1637 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or k_1_mid2_reg_1646)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        k_1_phi_fu_444_p4 = k_1_mid2_reg_1646;
    end else begin
        k_1_phi_fu_444_p4 = k_1_reg_440;
    end
end

/// m_1_phi_fu_466_p4 assign process. ///
always @ (m_1_reg_462 or ap_reg_ppiten_pp0_it1 or exitcond_flatten_reg_1637 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or m_1_mid2_reg_1659)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        m_1_phi_fu_466_p4 = m_1_mid2_reg_1659;
    end else begin
        m_1_phi_fu_466_p4 = m_1_reg_462;
    end
end

/// n_phi_fu_477_p4 assign process. ///
always @ (n_reg_473 or ap_reg_ppiten_pp0_it1 or exitcond_flatten_reg_1637 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or n_2_reg_1725)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_1637 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        n_phi_fu_477_p4 = n_2_reg_1725;
    end else begin
        n_phi_fu_477_p4 = n_reg_473;
    end
end

/// tmp_address0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg5_fsm_9 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_pp0_stg4_fsm_8 or tmp_addr_1_reg_1837 or ap_sig_cseq_ST_st54_fsm_48 or tmp_184_fu_779_p1 or tmp_165_fu_1245_p1 or tmp_188_fu_1444_p1)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8))) begin
        tmp_address0 = tmp_addr_1_reg_1837;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        tmp_address0 = tmp_184_fu_779_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_48)) begin
        tmp_address0 = tmp_188_fu_1444_p1;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_9))) begin
        tmp_address0 = tmp_165_fu_1245_p1;
    end else begin
        tmp_address0 = 'bx;
    end
end

/// tmp_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg5_fsm_9 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_pp0_stg4_fsm_8 or ap_sig_cseq_ST_st54_fsm_48)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st54_fsm_48) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_9)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8)))) begin
        tmp_ce0 = ap_const_logic_1;
    end else begin
        tmp_ce0 = ap_const_logic_0;
    end
end

/// tmp_d0 assign process. ///
always @ (ap_reg_ppiten_pp0_it1 or grp_fu_563_p2 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_pp0_stg4_fsm_8)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8))) begin
        tmp_d0 = grp_fu_563_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        tmp_d0 = ap_const_lv32_0;
    end else begin
        tmp_d0 = 'bx;
    end
end

/// tmp_we0 assign process. ///
always @ (ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_st4_fsm_3 or ap_reg_ppstg_exitcond_flatten_reg_1637_pp0_it1 or ap_sig_cseq_ST_pp0_stg4_fsm_8 or exitcond9_fu_758_p2)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == exitcond9_fu_758_p2)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1637_pp0_it1)))) begin
        tmp_we0 = ap_const_logic_1;
    end else begin
        tmp_we0 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or exitcond_flatten9_fu_624_p2 or exitcond10_fu_664_p2 or exitcond_flatten_fu_784_p2 or ap_sig_cseq_ST_pp0_stg4_fsm_8 or exitcond4_fu_1337_p2 or exitcond3_fu_1403_p2 or exitcond2_fu_1449_p2 or exitcond1_fu_1495_p2 or exitcond_fu_1546_p2 or exitcond9_fu_758_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if ((ap_const_lv1_0 == exitcond_flatten9_fu_624_p2)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st62_fsm_56;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if (~(ap_const_lv1_0 == exitcond10_fu_664_p2)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            if ((ap_const_lv1_0 == exitcond9_fu_758_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_pp0_stg0_fsm_4 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond_flatten_fu_784_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st52_fsm_46;
            end
        end
        ap_ST_pp0_stg1_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg2_fsm_6;
        end
        ap_ST_pp0_stg2_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg3_fsm_7;
        end
        ap_ST_pp0_stg3_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg4_fsm_8;
        end
        ap_ST_pp0_stg4_fsm_8 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
                ap_NS_fsm = ap_ST_pp0_stg5_fsm_9;
            end else begin
                ap_NS_fsm = ap_ST_st52_fsm_46;
            end
        end
        ap_ST_pp0_stg5_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg6_fsm_10;
        end
        ap_ST_pp0_stg6_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg7_fsm_11;
        end
        ap_ST_pp0_stg7_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg8_fsm_12;
        end
        ap_ST_pp0_stg8_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg9_fsm_13;
        end
        ap_ST_pp0_stg9_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg10_fsm_14;
        end
        ap_ST_pp0_stg10_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg11_fsm_15;
        end
        ap_ST_pp0_stg11_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg12_fsm_16;
        end
        ap_ST_pp0_stg12_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg13_fsm_17;
        end
        ap_ST_pp0_stg13_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg14_fsm_18;
        end
        ap_ST_pp0_stg14_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg15_fsm_19;
        end
        ap_ST_pp0_stg15_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg16_fsm_20;
        end
        ap_ST_pp0_stg16_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg17_fsm_21;
        end
        ap_ST_pp0_stg17_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg18_fsm_22;
        end
        ap_ST_pp0_stg18_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg19_fsm_23;
        end
        ap_ST_pp0_stg19_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg20_fsm_24;
        end
        ap_ST_pp0_stg20_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg21_fsm_25;
        end
        ap_ST_pp0_stg21_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg22_fsm_26;
        end
        ap_ST_pp0_stg22_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg23_fsm_27;
        end
        ap_ST_pp0_stg23_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg24_fsm_28;
        end
        ap_ST_pp0_stg24_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg25_fsm_29;
        end
        ap_ST_pp0_stg25_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg26_fsm_30;
        end
        ap_ST_pp0_stg26_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg27_fsm_31;
        end
        ap_ST_pp0_stg27_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg28_fsm_32;
        end
        ap_ST_pp0_stg28_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg29_fsm_33;
        end
        ap_ST_pp0_stg29_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg30_fsm_34;
        end
        ap_ST_pp0_stg30_fsm_34 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg31_fsm_35;
        end
        ap_ST_pp0_stg31_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg32_fsm_36;
        end
        ap_ST_pp0_stg32_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg33_fsm_37;
        end
        ap_ST_pp0_stg33_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg34_fsm_38;
        end
        ap_ST_pp0_stg34_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg35_fsm_39;
        end
        ap_ST_pp0_stg35_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg36_fsm_40;
        end
        ap_ST_pp0_stg36_fsm_40 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg37_fsm_41;
        end
        ap_ST_pp0_stg37_fsm_41 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg38_fsm_42;
        end
        ap_ST_pp0_stg38_fsm_42 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg39_fsm_43;
        end
        ap_ST_pp0_stg39_fsm_43 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg40_fsm_44;
        end
        ap_ST_pp0_stg40_fsm_44 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg41_fsm_45;
        end
        ap_ST_pp0_stg41_fsm_45 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_4;
        end
        ap_ST_st52_fsm_46 : 
        begin
            ap_NS_fsm = ap_ST_st53_fsm_47;
        end
        ap_ST_st53_fsm_47 : 
        begin
            if (~(ap_const_lv1_0 == exitcond4_fu_1337_p2)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st54_fsm_48;
            end
        end
        ap_ST_st54_fsm_48 : 
        begin
            if ((ap_const_lv1_0 == exitcond3_fu_1403_p2)) begin
                ap_NS_fsm = ap_ST_st55_fsm_49;
            end else begin
                ap_NS_fsm = ap_ST_st53_fsm_47;
            end
        end
        ap_ST_st55_fsm_49 : 
        begin
            ap_NS_fsm = ap_ST_st56_fsm_50;
        end
        ap_ST_st56_fsm_50 : 
        begin
            ap_NS_fsm = ap_ST_st57_fsm_51;
        end
        ap_ST_st57_fsm_51 : 
        begin
            ap_NS_fsm = ap_ST_st58_fsm_52;
        end
        ap_ST_st58_fsm_52 : 
        begin
            ap_NS_fsm = ap_ST_st59_fsm_53;
        end
        ap_ST_st59_fsm_53 : 
        begin
            ap_NS_fsm = ap_ST_st60_fsm_54;
        end
        ap_ST_st60_fsm_54 : 
        begin
            ap_NS_fsm = ap_ST_st61_fsm_55;
        end
        ap_ST_st61_fsm_55 : 
        begin
            ap_NS_fsm = ap_ST_st54_fsm_48;
        end
        ap_ST_st62_fsm_56 : 
        begin
            if (~(ap_const_lv1_0 == exitcond2_fu_1449_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st63_fsm_57;
            end
        end
        ap_ST_st63_fsm_57 : 
        begin
            if ((ap_const_lv1_0 == exitcond1_fu_1495_p2)) begin
                ap_NS_fsm = ap_ST_st64_fsm_58;
            end else begin
                ap_NS_fsm = ap_ST_st71_fsm_65;
            end
        end
        ap_ST_st64_fsm_58 : 
        begin
            if ((ap_const_lv1_0 == exitcond_fu_1546_p2)) begin
                ap_NS_fsm = ap_ST_st65_fsm_59;
            end else begin
                ap_NS_fsm = ap_ST_st63_fsm_57;
            end
        end
        ap_ST_st65_fsm_59 : 
        begin
            ap_NS_fsm = ap_ST_st66_fsm_60;
        end
        ap_ST_st66_fsm_60 : 
        begin
            ap_NS_fsm = ap_ST_st67_fsm_61;
        end
        ap_ST_st67_fsm_61 : 
        begin
            ap_NS_fsm = ap_ST_st68_fsm_62;
        end
        ap_ST_st68_fsm_62 : 
        begin
            ap_NS_fsm = ap_ST_st69_fsm_63;
        end
        ap_ST_st69_fsm_63 : 
        begin
            ap_NS_fsm = ap_ST_st70_fsm_64;
        end
        ap_ST_st70_fsm_64 : 
        begin
            ap_NS_fsm = ap_ST_st64_fsm_58;
        end
        ap_ST_st71_fsm_65 : 
        begin
            ap_NS_fsm = ap_ST_st72_fsm_66;
        end
        ap_ST_st72_fsm_66 : 
        begin
            ap_NS_fsm = ap_ST_st73_fsm_67;
        end
        ap_ST_st73_fsm_67 : 
        begin
            ap_NS_fsm = ap_ST_st74_fsm_68;
        end
        ap_ST_st74_fsm_68 : 
        begin
            ap_NS_fsm = ap_ST_st75_fsm_69;
        end
        ap_ST_st75_fsm_69 : 
        begin
            ap_NS_fsm = ap_ST_st76_fsm_70;
        end
        ap_ST_st76_fsm_70 : 
        begin
            ap_NS_fsm = ap_ST_st77_fsm_71;
        end
        ap_ST_st77_fsm_71 : 
        begin
            ap_NS_fsm = ap_ST_st62_fsm_56;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C3_d_addr10_fu_1009_p2 = (C3_d_addr7_fu_983_p2 | ap_const_lv32_1);
assign C3_d_addr11_fu_1049_p2 = (C3_d_addr7_reg_1698 + ap_const_lv32_2);
assign C3_d_addr12_fu_1073_p2 = (C3_d_addr7_reg_1698 + ap_const_lv32_3);
assign C3_d_addr13_fu_1112_p2 = (C3_d_addr7_reg_1698 + ap_const_lv32_4);
assign C3_d_addr14_fu_1136_p2 = (C3_d_addr7_reg_1698 + ap_const_lv32_5);
assign C3_d_addr15_fu_1170_p2 = (C3_d_addr7_reg_1698 + ap_const_lv32_6);
assign C3_d_addr16_fu_1194_p2 = (C3_d_addr7_reg_1698 + ap_const_lv32_7);
assign C3_d_addr17_fu_1264_p2 = (C3_d_addr7_reg_1698 + ap_const_lv32_8);
assign C3_d_addr18_fu_1288_p2 = (C3_d_addr7_reg_1698 + ap_const_lv32_9);
assign C3_d_addr19_fu_1562_p2 = (C3_d_addr5_reg_1989 + tmp_136_trn_fu_1558_p1);
assign C3_d_addr4_fu_1511_p2 = (C3_d_addr8_reg_1976 + tmp_133_trn_cast_fu_1507_p1);
assign C3_d_addr5_fu_1540_p2 = (p_shl37_fu_1536_p1 + p_shl_fu_1524_p1);
assign C3_d_addr6_fu_954_p2 = (C3_d_addr9_reg_1624 + tmp_149_trn_cast_fu_951_p1);
assign C3_d_addr7_fu_983_p2 = (p_shl42_fu_979_p1 + p_shl41_fu_967_p1);
assign C3_d_addr8_fu_1489_p2 = (p_shl76_cast_fu_1485_p1 + p_shl75_cast_fu_1473_p1);
assign C3_d_addr9_fu_752_p2 = (p_shl80_cast_fu_748_p1 + p_shl79_cast_fu_737_p1);
assign C3_dbias_d0 = tmp_91_reg_2017;
assign C3_dmapData_addr1_cast_fu_1305_p1 = $signed(C3_dmapData_addr1_fu_1301_p2);
assign C3_dmapData_addr1_fu_1301_p2 = (p_shl79_cast_reg_1614 - p_shl80_cast_reg_1619);
assign C3_dmapData_addr2_cast_fu_1315_p1 = C3_dmapData_addr2_fu_1309_p2;
assign C3_dmapData_addr2_fu_1309_p2 = ($signed(C3_dmapData_addr1_cast_fu_1305_p1) + $signed(tmp_134_trn_cast_fu_1298_p1));
assign C3_dmapData_addr3_fu_1331_p2 = ($signed(C3_dmapData_addr2_cast_fu_1315_p1) + $signed(p_shl38_fu_1327_p1));
assign C3_dmapData_addr4_fu_1359_p2 = ($signed(tmp_139_trn_fu_1355_p1) + $signed(C3_dmapData_addr3_reg_1912));
assign C3_dmapData_addr5_fu_1370_p2 = ($signed(tmp_131_fu_1364_p2) + $signed(C3_dmapData_addr4_fu_1359_p2));
assign C3_dmapData_addr6_fu_1419_p2 = ($signed(tmp_143_trn_fu_1415_p1) + $signed(C3_dmapData_addr5_reg_1925));
assign C3_dmapData_d0 = reg_617;
assign S2_y_addr10_fu_1039_p2 = ($signed(S2_y_addr7_reg_1681) + $signed(tmp_241_2_trn_fu_1035_p1));
assign S2_y_addr11_fu_1063_p2 = ($signed(S2_y_addr7_reg_1681) + $signed(tmp_241_3_trn_fu_1059_p1));
assign S2_y_addr12_fu_1102_p2 = ($signed(S2_y_addr7_reg_1681) + $signed(tmp_241_4_trn_fu_1098_p1));
assign S2_y_addr13_cast_fu_726_p1 = $signed(S2_y_addr5_fu_720_p2);
assign S2_y_addr13_fu_1126_p2 = ($signed(S2_y_addr7_reg_1681) + $signed(tmp_241_5_trn_fu_1122_p1));
assign S2_y_addr14_fu_1160_p2 = ($signed(S2_y_addr7_reg_1681) + $signed(tmp_241_6_trn_fu_1156_p1));
assign S2_y_addr15_fu_1184_p2 = ($signed(S2_y_addr7_reg_1681) + $signed(tmp_241_7_trn_fu_1180_p1));
assign S2_y_addr16_fu_1254_p2 = ($signed(S2_y_addr7_reg_1681) + $signed(tmp_241_8_trn_fu_1250_p1));
assign S2_y_addr17_fu_1278_p2 = ($signed(S2_y_addr7_reg_1681) + $signed(tmp_241_9_trn_fu_1274_p1));
assign S2_y_addr5_fu_720_p2 = (p_shl77_cast_fu_705_p1 - p_shl78_cast_fu_716_p1);
assign S2_y_addr6_fu_902_p2 = ($signed(S2_y_addr13_cast_reg_1609) + $signed(tmp_148_trn_cast_fu_899_p1));
assign S2_y_addr7_fu_934_p2 = ($signed(p_shl39_fu_918_p1) - $signed(p_shl40_fu_930_p1));
assign S2_y_addr8_fu_940_p2 = ($signed(S2_y_addr7_fu_934_p2) + $signed(tmp_142_trn_fu_907_p1));
assign S2_y_addr9_fu_998_p2 = ($signed(S2_y_addr7_fu_934_p2) + $signed(tmp_241_1_trn_fu_994_p1));

/// ap_sig_bdd_145 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_145 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_160 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_160 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end

/// ap_sig_bdd_170 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_170 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3B]);
end

/// ap_sig_bdd_179 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_179 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end

/// ap_sig_bdd_190 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_190 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end

/// ap_sig_bdd_201 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_201 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_31]);
end

/// ap_sig_bdd_210 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_210 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_12]);
end

/// ap_sig_bdd_222 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_222 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_16]);
end

/// ap_sig_bdd_231 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_231 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1A]);
end

/// ap_sig_bdd_240 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_240 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1E]);
end

/// ap_sig_bdd_249 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_249 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_22]);
end

/// ap_sig_bdd_258 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_258 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_26]);
end

/// ap_sig_bdd_267 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_267 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2A]);
end

/// ap_sig_bdd_276 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_276 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_285 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_285 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_36]);
end

/// ap_sig_bdd_293 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_293 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_40]);
end

/// ap_sig_bdd_303 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_303 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_319 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_319 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_344 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_344 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_372 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_372 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_404 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_404 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_425 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_425 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_459 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_459 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end

/// ap_sig_bdd_468 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_468 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end

/// ap_sig_bdd_477 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_477 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end

/// ap_sig_bdd_486 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_486 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end

/// ap_sig_bdd_495 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_495 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_10]);
end

/// ap_sig_bdd_504 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_504 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_11]);
end

/// ap_sig_bdd_514 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_514 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2E]);
end

/// ap_sig_bdd_523 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_523 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2F]);
end

/// ap_sig_bdd_543 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_543 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_30]);
end

/// ap_sig_bdd_560 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_560 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_38]);
end

/// ap_sig_bdd_576 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_576 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_39]);
end

/// ap_sig_bdd_594 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_594 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3A]);
end

/// ap_sig_bdd_607 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_607 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_41]);
end

/// ap_sig_bdd_615 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_615 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_46]);
end

/// ap_sig_bdd_624 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_624 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2D]);
end

/// ap_sig_bdd_680 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_680 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_37]);
end

/// ap_sig_bdd_689 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_689 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_47]);
end

/// ap_sig_bdd_777 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_777 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_32]);
end

/// ap_sig_bdd_784 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_784 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3C]);
end

/// ap_sig_bdd_791 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_791 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_42]);
end

/// ap_sig_bdd_90 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_90 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end
assign exitcond10_fu_664_p2 = (k_reg_407 == ap_const_lv3_5? 1'b1: 1'b0);
assign exitcond14_fu_636_p2 = (j_reg_396 == ap_const_lv3_6? 1'b1: 1'b0);
assign exitcond15_fu_816_p2 = (n_phi_fu_477_p4 == ap_const_lv4_A? 1'b1: 1'b0);
assign exitcond1_fu_1495_p2 = (j_1_reg_517 == ap_const_lv4_A? 1'b1: 1'b0);
assign exitcond2_fu_1449_p2 = (i_1_reg_506 == ap_const_lv5_10? 1'b1: 1'b0);
assign exitcond3_fu_1403_p2 = (m_2_reg_495 == ap_const_lv3_5? 1'b1: 1'b0);
assign exitcond4_fu_1337_p2 = (k_2_reg_484 == ap_const_lv3_5? 1'b1: 1'b0);
assign exitcond6_mid_fu_822_p2 = (exitcond15_fu_816_p2 & not_exitcond_flatten_fu_810_p2);
assign exitcond9_fu_758_p2 = (m_reg_418 == ap_const_lv3_5? 1'b1: 1'b0);
assign exitcond_flatten5_fu_796_p2 = (indvar_flatten_phi_fu_455_p4 == ap_const_lv7_32? 1'b1: 1'b0);
assign exitcond_flatten9_fu_624_p2 = (indvar_flatten9_reg_374 == ap_const_lv7_60? 1'b1: 1'b0);
assign exitcond_flatten_fu_784_p2 = (indvar_flatten1_phi_fu_433_p4 == ap_const_lv8_FA? 1'b1: 1'b0);
assign exitcond_fu_1546_p2 = (k_3_reg_540 == ap_const_lv4_A? 1'b1: 1'b0);
assign grp_fu_563_ce = ap_const_logic_1;
assign grp_fu_572_ce = ap_const_logic_1;
assign i_18_fu_1455_p2 = (i_1_reg_506 + ap_const_lv5_1);
assign i_3_fu_650_p2 = (i_reg_385 + ap_const_lv5_1);
assign i_mid2_fu_656_p3 = ((exitcond14_fu_636_p2[0:0]===1'b1)? i_3_fu_650_p2: i_reg_385);
assign indvar_flatten_next1_fu_630_p2 = (indvar_flatten9_reg_374 + ap_const_lv7_1);
assign indvar_flatten_next9_fu_790_p2 = (indvar_flatten1_phi_fu_433_p4 + ap_const_lv8_1);
assign indvar_flatten_next_fu_886_p3 = ((exitcond_flatten5_fu_796_p2[0:0]===1'b1)? ap_const_lv7_1: indvar_flatten_op_fu_880_p2);
assign indvar_flatten_op_fu_880_p2 = (indvar_flatten_phi_fu_455_p4 + ap_const_lv7_1);
assign j_14_fu_1501_p2 = (j_1_reg_517 + ap_const_lv4_1);
assign j_15_fu_1398_p2 = (j_mid2_reg_1580 + ap_const_lv3_1);
assign j_mid2_fu_642_p3 = ((exitcond14_fu_636_p2[0:0]===1'b1)? ap_const_lv3_0: j_reg_396);
assign k_13_fu_670_p2 = (k_reg_407 + ap_const_lv3_1);
assign k_14_fu_1552_p2 = (k_3_reg_540 + ap_const_lv4_1);
assign k_15_fu_1343_p2 = (k_2_reg_484 + ap_const_lv3_1);
assign k_1_cast_fu_842_p1 = k_1_mid2_fu_834_p3;
assign k_1_mid2_fu_834_p3 = ((exitcond_flatten5_fu_796_p2[0:0]===1'b1)? k_4_fu_828_p2: k_1_phi_fu_444_p4);
assign k_4_fu_828_p2 = (k_1_phi_fu_444_p4 + ap_const_lv3_1);
assign m_1_cast_fu_1083_p1 = m_1_mid2_reg_1659;
assign m_1_mid2_fu_866_p3 = ((exitcond6_mid_fu_822_p2[0:0]===1'b1)? m_6_fu_846_p2: m_1_mid_fu_802_p3);
assign m_1_mid_fu_802_p3 = ((exitcond_flatten5_fu_796_p2[0:0]===1'b1)? ap_const_lv3_0: m_1_phi_fu_466_p4);
assign m_4_fu_764_p2 = (m_reg_418 + ap_const_lv3_1);
assign m_5_fu_1409_p2 = (m_2_reg_495 + ap_const_lv3_1);
assign m_6_fu_846_p2 = (m_1_mid_fu_802_p3 + ap_const_lv3_1);
assign n_2_fu_1020_p2 = (n_mid2_reg_1653 + ap_const_lv4_1);
assign n_mid2_fu_858_p3 = ((tmp_161_fu_852_p2[0:0]===1'b1)? ap_const_lv4_0: n_phi_fu_477_p4);
assign not_exitcond_flatten_fu_810_p2 = (exitcond_flatten5_fu_796_p2 ^ ap_const_lv1_1);
assign p_addr16_fu_692_p2 = (tmp_135_trn_cast_fu_676_p1 + p_shl_cast_fu_688_p1);
assign p_addr17_fu_1239_p2 = (p_addr_fu_1233_p2 + tmp_142_trn_cast_fu_1216_p1);
assign p_addr18_fu_774_p2 = (tmp_138_trn_cast_fu_770_p1 + p_addr16_reg_1604);
assign p_addr19_fu_1392_p2 = (p_shl92_cast_fu_1388_p1 + tmp_141_trn_cast_fu_1376_p1);
assign p_addr20_fu_1439_p2 = (tmp_145_trn_cast_fu_1435_p1 + p_addr19_reg_1930);
assign p_addr_fu_1233_p2 = (tmp_137_trn_cast_fu_1219_p1 + p_shl90_cast_fu_1229_p1);
assign p_shl37_fu_1536_p1 = tmp_125_fu_1528_p3;
assign p_shl38_fu_1327_p1 = $signed(tmp_126_fu_1319_p3);
assign p_shl39_fu_918_p1 = $signed(tmp_127_fu_910_p3);
assign p_shl40_fu_930_p1 = $signed(tmp_128_fu_922_p3);
assign p_shl41_fu_967_p1 = tmp_129_fu_959_p3;
assign p_shl42_fu_979_p1 = tmp_130_fu_971_p3;
assign p_shl75_cast_fu_1473_p1 = tmp_154_fu_1465_p3;
assign p_shl76_cast_fu_1485_p1 = tmp_155_fu_1477_p3;
assign p_shl77_cast_fu_705_p1 = tmp_156_fu_698_p3;
assign p_shl78_cast_fu_716_p1 = tmp_157_fu_709_p3;
assign p_shl79_cast_fu_737_p1 = tmp_158_fu_730_p3;
assign p_shl80_cast_fu_748_p1 = tmp_159_fu_741_p3;
assign p_shl90_cast_fu_1229_p1 = tmp_164_fu_1222_p3;
assign p_shl92_cast_fu_1388_p1 = tmp_186_fu_1380_p3;
assign p_shl_cast_fu_688_p1 = tmp_160_fu_680_p3;
assign p_shl_fu_1524_p1 = tmp_124_fu_1516_p3;
assign tmp_124_fu_1516_p3 = {{C3_d_addr4_fu_1511_p2}, {ap_const_lv3_0}};
assign tmp_125_fu_1528_p3 = {{C3_d_addr4_fu_1511_p2}, {ap_const_lv1_0}};
assign tmp_126_fu_1319_p3 = {{C3_dmapData_addr2_fu_1309_p2}, {ap_const_lv2_0}};
assign tmp_127_fu_910_p3 = {{S2_y_addr6_fu_902_p2}, {ap_const_lv4_0}};
assign tmp_128_fu_922_p3 = {{S2_y_addr6_fu_902_p2}, {ap_const_lv1_0}};
assign tmp_129_fu_959_p3 = {{C3_d_addr6_fu_954_p2}, {ap_const_lv3_0}};
assign tmp_130_fu_971_p3 = {{C3_d_addr6_fu_954_p2}, {ap_const_lv1_0}};
assign tmp_131_fu_1364_p2 = C3_dmapData_addr4_fu_1359_p2 << ap_const_lv32_2;
assign tmp_133_trn_cast_fu_1507_p1 = j_1_reg_517;
assign tmp_134_trn_cast_fu_1298_p1 = j_mid2_reg_1580;
assign tmp_135_trn_cast_fu_676_p1 = k_reg_407;
assign tmp_136_trn_fu_1558_p1 = k_3_reg_540;
assign tmp_137_trn_cast_fu_1219_p1 = k_1_mid2_reg_1646;
assign tmp_138_trn_cast_fu_770_p1 = m_reg_418;
assign tmp_139_trn_fu_1355_p1 = k_2_reg_484;
assign tmp_141_trn_cast_fu_1376_p1 = $unsigned(tmp_95_fu_1349_p2);
assign tmp_142_trn_cast_fu_1216_p1 = m_1_mid2_reg_1659;
assign tmp_142_trn_fu_907_p1 = m_1_mid2_reg_1659;
assign tmp_143_trn_fu_1415_p1 = m_2_reg_495;
assign tmp_145_trn_cast_fu_1435_p1 = $unsigned(tmp_96_fu_1429_p2);
assign tmp_148_trn_cast_fu_899_p1 = tmp_92_reg_1671;
assign tmp_149_trn_cast_fu_951_p1 = n_mid2_reg_1653;
assign tmp_154_fu_1465_p3 = {{i_1_reg_506}, {ap_const_lv3_0}};
assign tmp_155_fu_1477_p3 = {{i_1_reg_506}, {ap_const_lv1_0}};
assign tmp_156_fu_698_p3 = {{j_mid2_reg_1580}, {ap_const_lv4_0}};
assign tmp_157_fu_709_p3 = {{j_mid2_reg_1580}, {ap_const_lv1_0}};
assign tmp_158_fu_730_p3 = {{i_mid2_reg_1588}, {ap_const_lv3_0}};
assign tmp_159_fu_741_p3 = {{i_mid2_reg_1588}, {ap_const_lv1_0}};
assign tmp_160_fu_680_p3 = {{k_reg_407}, {ap_const_lv2_0}};
assign tmp_161_fu_852_p2 = (exitcond6_mid_fu_822_p2 | exitcond_flatten5_fu_796_p2);
assign tmp_162_fu_946_p1 = $unsigned(S2_y_addr8_fu_940_p2);
assign tmp_163_fu_989_p1 = C3_d_addr7_fu_983_p2;
assign tmp_164_fu_1222_p3 = {{k_1_mid2_reg_1646}, {ap_const_lv2_0}};
assign tmp_165_fu_1245_p1 = p_addr17_fu_1239_p2;
assign tmp_166_fu_1004_p1 = $unsigned(S2_y_addr9_fu_998_p2);
assign tmp_167_fu_1015_p1 = C3_d_addr10_fu_1009_p2;
assign tmp_168_fu_1044_p1 = $unsigned(S2_y_addr10_fu_1039_p2);
assign tmp_169_fu_1054_p1 = C3_d_addr11_fu_1049_p2;
assign tmp_170_fu_1068_p1 = $unsigned(S2_y_addr11_fu_1063_p2);
assign tmp_171_fu_1078_p1 = C3_d_addr12_fu_1073_p2;
assign tmp_172_fu_1107_p1 = $unsigned(S2_y_addr12_fu_1102_p2);
assign tmp_173_fu_1117_p1 = C3_d_addr13_fu_1112_p2;
assign tmp_174_fu_1131_p1 = $unsigned(S2_y_addr13_fu_1126_p2);
assign tmp_175_fu_1141_p1 = C3_d_addr14_fu_1136_p2;
assign tmp_176_fu_1165_p1 = $unsigned(S2_y_addr14_fu_1160_p2);
assign tmp_177_fu_1175_p1 = C3_d_addr15_fu_1170_p2;
assign tmp_178_fu_1189_p1 = $unsigned(S2_y_addr15_fu_1184_p2);
assign tmp_179_fu_1199_p1 = C3_d_addr16_fu_1194_p2;
assign tmp_180_fu_1259_p1 = $unsigned(S2_y_addr16_fu_1254_p2);
assign tmp_181_fu_1269_p1 = C3_d_addr17_fu_1264_p2;
assign tmp_182_fu_1283_p1 = $unsigned(S2_y_addr17_fu_1278_p2);
assign tmp_183_fu_1293_p1 = C3_d_addr18_fu_1288_p2;
assign tmp_184_fu_779_p1 = p_addr18_fu_774_p2;
assign tmp_185_fu_1567_p1 = C3_d_addr19_fu_1562_p2;
assign tmp_186_fu_1380_p3 = {{tmp_95_fu_1349_p2}, {ap_const_lv2_0}};
assign tmp_187_fu_1424_p1 = $unsigned(C3_dmapData_addr6_fu_1419_p2);
assign tmp_188_fu_1444_p1 = p_addr20_fu_1439_p2;
assign tmp_240_1_fu_894_p2 = (m_1_mid2_reg_1659 + ap_const_lv3_1);
assign tmp_240_2_fu_1025_p2 = (m_1_mid2_reg_1659 + ap_const_lv3_2);
assign tmp_240_3_fu_1030_p2 = (m_1_mid2_reg_1659 + ap_const_lv3_3);
assign tmp_240_4_fu_1086_p2 = (m_1_cast_fu_1083_p1 + ap_const_lv4_4);
assign tmp_240_5_fu_1092_p2 = (m_1_cast_fu_1083_p1 + ap_const_lv4_5);
assign tmp_240_6_fu_1146_p2 = (m_1_cast_reg_1750 + ap_const_lv4_6);
assign tmp_240_7_fu_1151_p2 = (m_1_cast_reg_1750 + ap_const_lv4_7);
assign tmp_240_9_fu_1211_p2 = ($signed(m_1_cast_reg_1750) + $signed(ap_const_lv4_9));
assign tmp_240_s_fu_1204_p3 = {{ap_const_lv1_1}, {m_1_mid2_reg_1659}};
assign tmp_241_1_trn_fu_994_p1 = tmp_240_1_fu_894_p2;
assign tmp_241_2_trn_fu_1035_p1 = tmp_240_2_fu_1025_p2;
assign tmp_241_3_trn_fu_1059_p1 = tmp_240_3_fu_1030_p2;
assign tmp_241_4_trn_fu_1098_p1 = tmp_240_4_fu_1086_p2;
assign tmp_241_5_trn_fu_1122_p1 = tmp_240_5_fu_1092_p2;
assign tmp_241_6_trn_fu_1156_p1 = tmp_240_6_fu_1146_p2;
assign tmp_241_7_trn_fu_1180_p1 = tmp_240_7_fu_1151_p2;
assign tmp_241_8_trn_fu_1250_p1 = tmp_240_s_fu_1204_p3;
assign tmp_241_9_trn_fu_1274_p1 = $unsigned(tmp_240_9_fu_1211_p2);
assign tmp_92_fu_874_p2 = (n_mid2_fu_858_p3 + k_1_cast_fu_842_p1);
assign tmp_95_fu_1349_p2 = ($signed(ap_const_lv3_4) - $signed(k_2_reg_484));
assign tmp_96_fu_1429_p2 = ($signed(ap_const_lv3_4) - $signed(m_2_reg_495));
assign tmp_s_fu_1461_p1 = i_1_reg_506;
always @ (posedge ap_clk)
begin
    S2_y_addr13_cast_reg_1609[0] <= 1'b0;
    p_shl79_cast_reg_1614[2:0] <= 3'b000;
    p_shl79_cast_reg_1614[8] <= 1'b0;
    p_shl80_cast_reg_1619[0] <= 1'b0;
    p_shl80_cast_reg_1619[8:6] <= 3'b000;
    C3_d_addr9_reg_1624[0] <= 1'b0;
    S2_y_addr7_reg_1681[0] <= 1'b0;
    C3_d_addr7_reg_1698[0] <= 1'b0;
    m_1_cast_reg_1750[3] <= 1'b0;
    tmp_s_reg_1971[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    C3_d_addr8_reg_1976[0] <= 1'b0;
    C3_d_addr5_reg_1989[0] <= 1'b0;
end



endmodule //dateport_update_C3

