// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dateport_C1_conv (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        inputimg_address0,
        inputimg_ce0,
        inputimg_q0,
        inputimg_address1,
        inputimg_ce1,
        inputimg_q1,
        C1_v_address0,
        C1_v_ce0,
        C1_v_we0,
        C1_v_d0,
        C1_v_q0,
        C1_bias_address0,
        C1_bias_ce0,
        C1_bias_q0,
        C1_y_address0,
        C1_y_ce0,
        C1_y_we0,
        C1_y_d0,
        C1_mapData_address0,
        C1_mapData_ce0,
        C1_mapData_q0,
        C1_mapData_address1,
        C1_mapData_ce1,
        C1_mapData_q1
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 27'b1;
parameter    ap_ST_st2_fsm_1 = 27'b10;
parameter    ap_ST_st3_fsm_2 = 27'b100;
parameter    ap_ST_st4_fsm_3 = 27'b1000;
parameter    ap_ST_pp0_stg0_fsm_4 = 27'b10000;
parameter    ap_ST_pp0_stg1_fsm_5 = 27'b100000;
parameter    ap_ST_pp0_stg2_fsm_6 = 27'b1000000;
parameter    ap_ST_pp0_stg3_fsm_7 = 27'b10000000;
parameter    ap_ST_pp0_stg4_fsm_8 = 27'b100000000;
parameter    ap_ST_pp0_stg5_fsm_9 = 27'b1000000000;
parameter    ap_ST_pp0_stg6_fsm_10 = 27'b10000000000;
parameter    ap_ST_pp0_stg7_fsm_11 = 27'b100000000000;
parameter    ap_ST_pp0_stg8_fsm_12 = 27'b1000000000000;
parameter    ap_ST_pp0_stg9_fsm_13 = 27'b10000000000000;
parameter    ap_ST_pp0_stg10_fsm_14 = 27'b100000000000000;
parameter    ap_ST_pp0_stg11_fsm_15 = 27'b1000000000000000;
parameter    ap_ST_pp0_stg12_fsm_16 = 27'b10000000000000000;
parameter    ap_ST_pp0_stg13_fsm_17 = 27'b100000000000000000;
parameter    ap_ST_pp0_stg14_fsm_18 = 27'b1000000000000000000;
parameter    ap_ST_pp0_stg15_fsm_19 = 27'b10000000000000000000;
parameter    ap_ST_pp0_stg16_fsm_20 = 27'b100000000000000000000;
parameter    ap_ST_pp0_stg17_fsm_21 = 27'b1000000000000000000000;
parameter    ap_ST_pp0_stg18_fsm_22 = 27'b10000000000000000000000;
parameter    ap_ST_pp0_stg19_fsm_23 = 27'b100000000000000000000000;
parameter    ap_ST_pp0_stg20_fsm_24 = 27'b1000000000000000000000000;
parameter    ap_ST_pp0_stg21_fsm_25 = 27'b10000000000000000000000000;
parameter    ap_ST_st40_fsm_26 = 27'b100000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv15_0 = 15'b000000000000000;
parameter    ap_const_lv13_0 = 13'b0000000000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv3_6 = 3'b110;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv5_1C = 5'b11100;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv15_5BE0 = 15'b101101111100000;
parameter    ap_const_lv15_1 = 15'b1;
parameter    ap_const_lv13_F50 = 13'b111101010000;
parameter    ap_const_lv3_5 = 3'b101;
parameter    ap_const_lv8_8C = 8'b10001100;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv13_1 = 13'b1;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv5_3 = 5'b11;
parameter    ap_const_lv5_4 = 5'b100;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] inputimg_address0;
output   inputimg_ce0;
input  [31:0] inputimg_q0;
output  [9:0] inputimg_address1;
output   inputimg_ce1;
input  [31:0] inputimg_q1;
output  [12:0] C1_v_address0;
output   C1_v_ce0;
output   C1_v_we0;
output  [31:0] C1_v_d0;
input  [31:0] C1_v_q0;
output  [2:0] C1_bias_address0;
output   C1_bias_ce0;
input  [31:0] C1_bias_q0;
output  [12:0] C1_y_address0;
output   C1_y_ce0;
output   C1_y_we0;
output  [31:0] C1_y_d0;
output  [7:0] C1_mapData_address0;
output   C1_mapData_ce0;
input  [31:0] C1_mapData_q0;
output  [7:0] C1_mapData_address1;
output   C1_mapData_ce1;
input  [31:0] C1_mapData_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] inputimg_address0;
reg inputimg_ce0;
reg[9:0] inputimg_address1;
reg inputimg_ce1;
reg[12:0] C1_v_address0;
reg C1_v_ce0;
reg C1_v_we0;
reg[31:0] C1_v_d0;
reg C1_bias_ce0;
reg C1_y_ce0;
reg C1_y_we0;
reg[7:0] C1_mapData_address0;
reg C1_mapData_ce0;
reg[7:0] C1_mapData_address1;
reg C1_mapData_ce1;
(* fsm_encoding = "none" *) reg   [26:0] ap_CS_fsm = 27'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_45;
reg   [14:0] indvar_flatten3_reg_286;
reg   [2:0] i_1_reg_297;
reg   [12:0] indvar_flatten4_reg_309;
reg   [4:0] j_1_reg_320;
reg   [7:0] indvar_flatten_reg_331;
reg   [4:0] k_1_reg_342;
reg   [2:0] m_reg_353;
wire   [31:0] grp_fu_365_p2;
reg   [31:0] reg_382;
reg    ap_sig_cseq_ST_pp0_stg11_fsm_15;
reg    ap_sig_bdd_110;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg   [0:0] exitcond_flatten_reg_1049;
reg    ap_sig_cseq_ST_pp0_stg15_fsm_19;
reg    ap_sig_bdd_125;
reg    ap_sig_cseq_ST_pp0_stg19_fsm_23;
reg    ap_sig_bdd_134;
reg    ap_sig_cseq_ST_pp0_stg1_fsm_5;
reg    ap_sig_bdd_143;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1049_pp0_it1;
reg    ap_sig_cseq_ST_pp0_stg5_fsm_9;
reg    ap_sig_bdd_154;
wire   [0:0] exitcond7_fu_387_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_165;
wire   [2:0] i_2_fu_393_p2;
reg   [2:0] i_2_reg_1018;
wire  signed [9:0] C1_v_addr8_cast_fu_429_p1;
reg  signed [9:0] C1_v_addr8_cast_reg_1023;
wire   [4:0] j_2_fu_439_p2;
reg   [4:0] j_2_reg_1031;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_180;
wire  signed [31:0] C1_v_addr11_fu_478_p2;
reg  signed [31:0] C1_v_addr11_reg_1036;
wire   [0:0] exitcond6_fu_433_p2;
wire   [4:0] k_2_fu_490_p2;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_194;
wire   [0:0] exitcond_flatten_fu_510_p2;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_4;
reg    ap_sig_bdd_202;
wire   [14:0] indvar_flatten_next3_fu_516_p2;
reg   [14:0] indvar_flatten_next3_reg_1053;
wire   [0:0] exitcond_flatten7_fu_522_p2;
reg   [0:0] exitcond_flatten7_reg_1058;
wire   [4:0] j_1_mid_fu_528_p3;
reg   [4:0] j_1_mid_reg_1064;
wire   [0:0] exitcond_flatten_mid_fu_560_p2;
reg   [0:0] exitcond_flatten_mid_reg_1070;
wire   [4:0] k_1_mid_fu_572_p3;
reg   [4:0] k_1_mid_reg_1076;
wire   [0:0] exitcond1_mid3_fu_592_p2;
reg   [0:0] exitcond1_mid3_reg_1082;
wire   [7:0] indvar_flatten_next_fu_604_p3;
reg   [7:0] indvar_flatten_next_reg_1088;
wire   [12:0] indvar_flatten_next4_fu_618_p3;
reg   [12:0] indvar_flatten_next4_reg_1093;
wire   [2:0] i_1_mid2_fu_632_p3;
reg   [2:0] i_1_mid2_reg_1098;
reg   [2:0] ap_reg_ppstg_i_1_mid2_reg_1098_pp0_it1;
wire   [4:0] j_1_mid2_fu_644_p3;
reg   [4:0] j_1_mid2_reg_1105;
wire   [4:0] k_1_mid2_fu_672_p3;
reg   [4:0] k_1_mid2_reg_1111;
wire   [4:0] tmp_22_fu_688_p2;
reg   [4:0] tmp_22_reg_1120;
wire   [4:0] tmp_311_fu_704_p3;
reg   [4:0] tmp_311_reg_1127;
wire   [5:0] C1_mapData_addr2_fu_739_p2;
reg   [5:0] C1_mapData_addr2_reg_1137;
wire   [2:0] m_1_fu_758_p2;
reg   [2:0] m_1_reg_1148;
wire   [0:0] ifzero_fu_764_p2;
reg   [0:0] ifzero_reg_1153;
reg   [0:0] ap_reg_ppstg_ifzero_reg_1153_pp0_it1;
reg   [31:0] inputimg_load_reg_1157;
reg    ap_sig_cseq_ST_pp0_stg2_fsm_6;
reg    ap_sig_bdd_258;
wire   [31:0] C1_mapData_addr3_fu_794_p2;
reg   [31:0] C1_mapData_addr3_reg_1162;
reg   [31:0] inputimg_load_1_reg_1174;
reg    ap_sig_cseq_ST_pp0_stg3_fsm_7;
reg    ap_sig_bdd_278;
reg   [31:0] C1_mapData_load_1_reg_1199;
reg   [31:0] inputimg_load_2_reg_1204;
reg   [31:0] inputimg_load_3_reg_1214;
reg   [31:0] C1_mapData_load_2_reg_1229;
reg    ap_sig_cseq_ST_pp0_stg4_fsm_8;
reg    ap_sig_bdd_296;
reg   [31:0] C1_mapData_load_3_reg_1234;
reg   [31:0] inputimg_load_4_reg_1239;
wire  signed [9:0] C1_v_addr4_fu_914_p2;
reg  signed [9:0] C1_v_addr4_reg_1249;
reg   [31:0] C1_mapData_load_4_reg_1255;
wire   [63:0] tmp_312_fu_957_p1;
reg   [63:0] tmp_312_reg_1260;
reg    ap_sig_cseq_ST_pp0_stg6_fsm_10;
reg    ap_sig_bdd_314;
reg   [63:0] ap_reg_ppstg_tmp_312_reg_1260_pp0_it1;
reg   [12:0] C1_v_addr_7_reg_1265;
wire   [31:0] grp_fu_372_p2;
reg   [31:0] tmp_31_reg_1270;
reg    ap_sig_cseq_ST_pp0_stg7_fsm_11;
reg    ap_sig_bdd_329;
reg   [31:0] tmp_31_1_reg_1280;
reg   [31:0] tmp_31_2_reg_1285;
reg    ap_sig_cseq_ST_pp0_stg8_fsm_12;
reg    ap_sig_bdd_339;
reg   [31:0] tmp_31_3_reg_1290;
reg    ap_sig_cseq_ST_pp0_stg9_fsm_13;
reg    ap_sig_bdd_348;
reg   [31:0] tmp_31_4_reg_1295;
reg    ap_sig_cseq_ST_pp0_stg10_fsm_14;
reg    ap_sig_bdd_357;
reg   [31:0] C1_bias_load_reg_1305;
reg   [31:0] temp_reg_1310;
wire   [0:0] tmp_84_fu_1001_p2;
reg   [0:0] tmp_84_reg_1317;
reg    ap_sig_cseq_ST_pp0_stg21_fsm_25;
reg    ap_sig_bdd_381;
reg   [2:0] i_reg_253;
reg   [4:0] j_reg_264;
wire   [0:0] exitcond5_fu_484_p2;
reg   [4:0] k_reg_275;
reg   [14:0] indvar_flatten3_phi_fu_290_p4;
reg   [2:0] i_1_phi_fu_301_p4;
reg   [12:0] indvar_flatten4_phi_fu_313_p4;
reg   [4:0] j_1_phi_fu_324_p4;
reg   [7:0] indvar_flatten_phi_fu_335_p4;
reg   [4:0] k_1_phi_fu_346_p4;
reg   [2:0] m_phi_fu_357_p4;
wire   [63:0] tmp_328_fu_505_p1;
wire   [63:0] tmp_314_fu_724_p1;
wire   [63:0] tmp_317_fu_753_p1;
wire   [63:0] tmp_315_fu_806_p1;
wire   [63:0] tmp_318_fu_817_p1;
wire   [63:0] tmp_320_fu_829_p1;
wire   [63:0] tmp_323_fu_841_p1;
wire   [63:0] tmp_321_fu_856_p1;
wire   [63:0] tmp_324_fu_866_p1;
wire   [63:0] tmp_326_fu_878_p1;
wire   [63:0] tmp_327_fu_883_p1;
wire   [63:0] tmp_s_fu_962_p1;
reg    ap_sig_cseq_ST_pp0_stg12_fsm_16;
reg    ap_sig_bdd_448;
reg   [31:0] grp_fu_365_p0;
reg   [31:0] grp_fu_365_p1;
reg   [31:0] grp_fu_372_p0;
reg   [31:0] grp_fu_372_p1;
wire   [31:0] tmp_83_fu_377_p0;
wire   [31:0] tmp_83_fu_377_p1;
wire   [7:0] tmp_fu_399_p3;
wire   [4:0] tmp_307_fu_411_p3;
wire   [8:0] p_shl_cast_fu_407_p1;
wire   [8:0] p_shl74_cast_fu_419_p1;
wire   [8:0] C1_v_addr8_fu_423_p2;
wire   [9:0] tmp_14_trn_cast_fu_445_p1;
wire  signed [9:0] C1_v_addr10_fu_449_p2;
wire   [14:0] tmp_150_fu_454_p3;
wire   [11:0] tmp_151_fu_466_p3;
wire  signed [31:0] p_shl51_fu_462_p1;
wire  signed [31:0] p_shl52_fu_474_p1;
wire   [31:0] tmp_17_trn_fu_496_p1;
wire  signed [31:0] C1_v_addr12_fu_500_p2;
wire   [0:0] exitcond_fu_542_p2;
wire   [0:0] not_exitcond_flatten_fu_536_p2;
wire   [0:0] exitcond_flatten8_fu_554_p2;
wire   [0:0] tmp_308_fu_566_p2;
wire   [0:0] exitcond_flatten_not_fu_580_p2;
wire   [0:0] exitcond1_mid_fu_548_p2;
wire   [0:0] not_exitcond_flatten_mid_fu_586_p2;
wire   [7:0] indvar_flatten_op_fu_598_p2;
wire   [12:0] indvar_flatten14_op_fu_612_p2;
wire   [2:0] i_s_fu_626_p2;
wire   [4:0] j_3_fu_639_p2;
wire   [0:0] tmp_309_fu_655_p2;
wire   [0:0] tmp_145_fu_659_p2;
wire   [4:0] k_3_fu_650_p2;
wire   [2:0] m_mid2_fu_664_p3;
wire   [4:0] tmp_21_cast1_fu_684_p1;
wire   [9:0] tmp_313_fu_716_p3;
wire  signed [2:0] tmp_24_fu_694_p2;
wire   [5:0] tmp_trn_cast_fu_700_p1;
wire   [5:0] p_shl82_cast1_fu_712_p1;
wire   [5:0] C1_mapData_addr1_fu_733_p2;
wire   [5:0] tmp_25_trn_cast_fu_729_p1;
wire   [4:0] tmp_27_1_fu_678_p2;
wire   [9:0] tmp_316_fu_745_p3;
wire   [7:0] tmp_148_fu_783_p3;
wire   [31:0] C1_mapData_addr2_cast_fu_780_p1;
wire   [31:0] p_shl50_fu_790_p1;
wire   [31:0] C1_mapData_addr4_fu_800_p2;
wire   [31:0] C1_mapData_addr5_fu_811_p2;
wire   [4:0] tmp_27_2_fu_770_p2;
wire   [9:0] tmp_319_fu_822_p3;
wire   [4:0] tmp_27_3_fu_775_p2;
wire   [9:0] tmp_322_fu_834_p3;
wire   [31:0] C1_mapData_addr6_fu_851_p2;
wire   [31:0] C1_mapData_addr7_fu_861_p2;
wire   [4:0] tmp_27_4_fu_846_p2;
wire   [9:0] tmp_325_fu_871_p3;
wire   [7:0] tmp_310_fu_890_p3;
wire   [8:0] p_shl81_cast_fu_897_p1;
wire   [8:0] p_shl82_cast_fu_901_p1;
wire   [8:0] C1_v_addr9_fu_904_p2;
wire  signed [9:0] C1_v_addr9_cast_fu_910_p1;
wire   [9:0] tmp_15_trn_cast_fu_887_p1;
wire   [14:0] tmp_146_fu_923_p3;
wire   [11:0] tmp_147_fu_934_p3;
wire  signed [31:0] p_shl_fu_930_p1;
wire  signed [31:0] p_shl49_fu_941_p1;
wire  signed [31:0] C1_v_addr5_fu_945_p2;
wire   [31:0] tmp_18_trn_fu_920_p1;
wire  signed [31:0] C1_v_addr6_fu_951_p2;
wire   [31:0] temp_to_int_fu_966_p1;
wire   [7:0] tmp_80_fu_969_p4;
wire   [22:0] tmp_149_fu_979_p1;
wire   [0:0] notrhs_fu_989_p2;
wire   [0:0] notlhs_fu_983_p2;
wire   [0:0] tmp_82_fu_995_p2;
wire   [0:0] tmp_83_fu_377_p2;
wire    grp_fu_365_ce;
wire    grp_fu_372_ce;
wire   [4:0] tmp_83_fu_377_opcode;
reg    ap_sig_cseq_ST_st40_fsm_26;
reg    ap_sig_bdd_891;
reg   [26:0] ap_NS_fsm;


dateport_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dateport_fadd_32ns_32ns_32_5_full_dsp_U0(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_365_p0 ),
    .din1( grp_fu_365_p1 ),
    .ce( grp_fu_365_ce ),
    .dout( grp_fu_365_p2 )
);

dateport_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dateport_fmul_32ns_32ns_32_4_max_dsp_U1(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_372_p0 ),
    .din1( grp_fu_372_p1 ),
    .ce( grp_fu_372_ce ),
    .dout( grp_fu_372_p2 )
);

dateport_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
dateport_fcmp_32ns_32ns_1_1_U2(
    .din0( tmp_83_fu_377_p0 ),
    .din1( tmp_83_fu_377_p1 ),
    .opcode( tmp_83_fu_377_opcode ),
    .dout( tmp_83_fu_377_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & ~(ap_const_lv1_0 == exitcond_flatten_fu_510_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond7_fu_387_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((exitcond_flatten_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg21_fsm_25))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond7_fu_387_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg21_fsm_25) & ~(exitcond_flatten_reg_1049 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond7_fu_387_p2))) begin
        i_1_reg_297 <= ap_const_lv3_0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1049_pp0_it1))) begin
        i_1_reg_297 <= i_1_mid2_reg_1098;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == exitcond6_fu_433_p2))) begin
        i_reg_253 <= i_2_reg_1018;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_253 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond7_fu_387_p2))) begin
        indvar_flatten3_reg_286 <= ap_const_lv15_0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        indvar_flatten3_reg_286 <= indvar_flatten_next3_reg_1053;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond7_fu_387_p2))) begin
        indvar_flatten4_reg_309 <= ap_const_lv13_0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        indvar_flatten4_reg_309 <= indvar_flatten_next4_reg_1093;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond7_fu_387_p2))) begin
        indvar_flatten_reg_331 <= ap_const_lv8_0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        indvar_flatten_reg_331 <= indvar_flatten_next_reg_1088;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond7_fu_387_p2))) begin
        j_1_reg_320 <= ap_const_lv5_0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        j_1_reg_320 <= j_1_mid2_reg_1105;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == exitcond5_fu_484_p2))) begin
        j_reg_264 <= j_2_reg_1031;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond7_fu_387_p2))) begin
        j_reg_264 <= ap_const_lv5_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond7_fu_387_p2))) begin
        k_1_reg_342 <= ap_const_lv5_0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        k_1_reg_342 <= k_1_mid2_reg_1111;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond6_fu_433_p2))) begin
        k_reg_275 <= ap_const_lv5_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == exitcond5_fu_484_p2))) begin
        k_reg_275 <= k_2_fu_490_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond7_fu_387_p2))) begin
        m_reg_353 <= ap_const_lv3_0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        m_reg_353 <= m_1_reg_1148;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_9) & ~(ap_const_lv1_0 == ap_reg_ppstg_ifzero_reg_1153_pp0_it1))) begin
        C1_bias_load_reg_1305 <= C1_bias_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5))) begin
        C1_mapData_addr2_reg_1137 <= C1_mapData_addr2_fu_739_p2;
        ifzero_reg_1153 <= ifzero_fu_764_p2;
        tmp_22_reg_1120 <= tmp_22_fu_688_p2;
        tmp_311_reg_1127[4 : 2] <= tmp_311_fu_704_p3[4 : 2];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6))) begin
        C1_mapData_addr3_reg_1162 <= C1_mapData_addr3_fu_794_p2;
        inputimg_load_1_reg_1174 <= inputimg_q1;
        inputimg_load_reg_1157 <= inputimg_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7))) begin
        C1_mapData_load_1_reg_1199 <= C1_mapData_q1;
        inputimg_load_2_reg_1204 <= inputimg_q0;
        inputimg_load_3_reg_1214 <= inputimg_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8))) begin
        C1_mapData_load_2_reg_1229 <= C1_mapData_q0;
        C1_mapData_load_3_reg_1234 <= C1_mapData_q1;
        inputimg_load_4_reg_1239 <= inputimg_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_9))) begin
        C1_mapData_load_4_reg_1255 <= C1_mapData_q0;
        C1_v_addr4_reg_1249 <= C1_v_addr4_fu_914_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond6_fu_433_p2))) begin
        C1_v_addr11_reg_1036[31 : 2] <= C1_v_addr11_fu_478_p2[31 : 2];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond7_fu_387_p2))) begin
        C1_v_addr8_cast_reg_1023[9 : 2] <= C1_v_addr8_cast_fu_429_p1[9 : 2];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_10))) begin
        C1_v_addr_7_reg_1265 <= tmp_312_fu_957_p1;
        tmp_312_reg_1260[31 : 0] <= tmp_312_fu_957_p1[31 : 0];
        tmp_31_reg_1270 <= grp_fu_372_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4)) begin
        ap_reg_ppstg_exitcond_flatten_reg_1049_pp0_it1 <= exitcond_flatten_reg_1049;
        exitcond_flatten_reg_1049 <= exitcond_flatten_fu_510_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5)) begin
        ap_reg_ppstg_i_1_mid2_reg_1098_pp0_it1 <= i_1_mid2_reg_1098;
        ap_reg_ppstg_ifzero_reg_1153_pp0_it1 <= ifzero_reg_1153;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_10)) begin
        ap_reg_ppstg_tmp_312_reg_1260_pp0_it1[31 : 0] <= tmp_312_reg_1260[31 : 0];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_lv1_0 == exitcond_flatten_fu_510_p2))) begin
        exitcond1_mid3_reg_1082 <= exitcond1_mid3_fu_592_p2;
        exitcond_flatten7_reg_1058 <= exitcond_flatten7_fu_522_p2;
        exitcond_flatten_mid_reg_1070 <= exitcond_flatten_mid_fu_560_p2;
        j_1_mid_reg_1064 <= j_1_mid_fu_528_p3;
        k_1_mid_reg_1076 <= k_1_mid_fu_572_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_flatten_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5))) begin
        i_1_mid2_reg_1098 <= i_1_mid2_fu_632_p3;
        j_1_mid2_reg_1105 <= j_1_mid2_fu_644_p3;
        k_1_mid2_reg_1111 <= k_1_mid2_fu_672_p3;
        m_1_reg_1148 <= m_1_fu_758_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_2_reg_1018 <= i_2_fu_393_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        indvar_flatten_next3_reg_1053 <= indvar_flatten_next3_fu_516_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4) & (ap_const_lv1_0 == exitcond_flatten_fu_510_p2))) begin
        indvar_flatten_next4_reg_1093 <= indvar_flatten_next4_fu_618_p3;
        indvar_flatten_next_reg_1088 <= indvar_flatten_next_fu_604_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        j_2_reg_1031 <= j_2_fu_439_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg11_fsm_15) & (exitcond_flatten_reg_1049 == ap_const_lv1_0)) | ((exitcond_flatten_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg15_fsm_19)) | ((exitcond_flatten_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg19_fsm_23)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1049_pp0_it1)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1049_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_9)))) begin
        reg_382 <= grp_fu_365_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg10_fsm_14) & ~(ap_const_lv1_0 == ap_reg_ppstg_ifzero_reg_1153_pp0_it1))) begin
        temp_reg_1310 <= grp_fu_365_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_11))) begin
        tmp_31_1_reg_1280 <= grp_fu_372_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_12))) begin
        tmp_31_2_reg_1285 <= grp_fu_372_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg9_fsm_13))) begin
        tmp_31_3_reg_1290 <= grp_fu_372_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg10_fsm_14))) begin
        tmp_31_4_reg_1295 <= grp_fu_372_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg11_fsm_15) & ~(ap_const_lv1_0 == ap_reg_ppstg_ifzero_reg_1153_pp0_it1))) begin
        tmp_84_reg_1317 <= tmp_84_fu_1001_p2;
    end
end

/// C1_bias_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg4_fsm_8)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8))) begin
        C1_bias_ce0 = ap_const_logic_1;
    end else begin
        C1_bias_ce0 = ap_const_logic_0;
    end
end

/// C1_mapData_address0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_sig_cseq_ST_pp0_stg3_fsm_7 or ap_sig_cseq_ST_pp0_stg4_fsm_8 or tmp_315_fu_806_p1 or tmp_321_fu_856_p1 or tmp_327_fu_883_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8)) begin
            C1_mapData_address0 = tmp_327_fu_883_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)) begin
            C1_mapData_address0 = tmp_321_fu_856_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6)) begin
            C1_mapData_address0 = tmp_315_fu_806_p1;
        end else begin
            C1_mapData_address0 = 'bx;
        end
    end else begin
        C1_mapData_address0 = 'bx;
    end
end

/// C1_mapData_address1 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_sig_cseq_ST_pp0_stg3_fsm_7 or tmp_318_fu_817_p1 or tmp_324_fu_866_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)) begin
            C1_mapData_address1 = tmp_324_fu_866_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6)) begin
            C1_mapData_address1 = tmp_318_fu_817_p1;
        end else begin
            C1_mapData_address1 = 'bx;
        end
    end else begin
        C1_mapData_address1 = 'bx;
    end
end

/// C1_mapData_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_sig_cseq_ST_pp0_stg3_fsm_7 or ap_sig_cseq_ST_pp0_stg4_fsm_8)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8)))) begin
        C1_mapData_ce0 = ap_const_logic_1;
    end else begin
        C1_mapData_ce0 = ap_const_logic_0;
    end
end

/// C1_mapData_ce1 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_sig_cseq_ST_pp0_stg3_fsm_7)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)))) begin
        C1_mapData_ce1 = ap_const_logic_1;
    end else begin
        C1_mapData_ce1 = ap_const_logic_0;
    end
end

/// C1_v_address0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg5_fsm_9 or ap_sig_cseq_ST_st4_fsm_3 or tmp_312_fu_957_p1 or ap_sig_cseq_ST_pp0_stg6_fsm_10 or C1_v_addr_7_reg_1265 or tmp_328_fu_505_p1)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_9))) begin
        C1_v_address0 = C1_v_addr_7_reg_1265;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        C1_v_address0 = tmp_328_fu_505_p1;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_10))) begin
        C1_v_address0 = tmp_312_fu_957_p1;
    end else begin
        C1_v_address0 = 'bx;
    end
end

/// C1_v_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg5_fsm_9 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_pp0_stg6_fsm_10)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_10)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_9)))) begin
        C1_v_ce0 = ap_const_logic_1;
    end else begin
        C1_v_ce0 = ap_const_logic_0;
    end
end

/// C1_v_d0 assign process. ///
always @ (grp_fu_365_p2 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg5_fsm_9 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_9))) begin
        C1_v_d0 = grp_fu_365_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        C1_v_d0 = ap_const_lv32_0;
    end else begin
        C1_v_d0 = 'bx;
    end
end

/// C1_v_we0 assign process. ///
always @ (ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond_flatten_reg_1049_pp0_it1 or ap_sig_cseq_ST_pp0_stg5_fsm_9 or ap_sig_cseq_ST_st4_fsm_3 or exitcond5_fu_484_p2)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == exitcond5_fu_484_p2)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1049_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_9)))) begin
        C1_v_we0 = ap_const_logic_1;
    end else begin
        C1_v_we0 = ap_const_logic_0;
    end
end

/// C1_y_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg12_fsm_16)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg12_fsm_16))) begin
        C1_y_ce0 = ap_const_logic_1;
    end else begin
        C1_y_ce0 = ap_const_logic_0;
    end
end

/// C1_y_we0 assign process. ///
always @ (ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_ifzero_reg_1153_pp0_it1 or ap_sig_cseq_ST_pp0_stg12_fsm_16)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_ifzero_reg_1153_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg12_fsm_16))) begin
        C1_y_we0 = ap_const_logic_1;
    end else begin
        C1_y_we0 = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st40_fsm_26)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st40_fsm_26))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st40_fsm_26)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st40_fsm_26)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_4 assign process. ///
always @ (ap_sig_bdd_202)
begin
    if (ap_sig_bdd_202) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg10_fsm_14 assign process. ///
always @ (ap_sig_bdd_357)
begin
    if (ap_sig_bdd_357) begin
        ap_sig_cseq_ST_pp0_stg10_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg10_fsm_14 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg11_fsm_15 assign process. ///
always @ (ap_sig_bdd_110)
begin
    if (ap_sig_bdd_110) begin
        ap_sig_cseq_ST_pp0_stg11_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg11_fsm_15 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg12_fsm_16 assign process. ///
always @ (ap_sig_bdd_448)
begin
    if (ap_sig_bdd_448) begin
        ap_sig_cseq_ST_pp0_stg12_fsm_16 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg12_fsm_16 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg15_fsm_19 assign process. ///
always @ (ap_sig_bdd_125)
begin
    if (ap_sig_bdd_125) begin
        ap_sig_cseq_ST_pp0_stg15_fsm_19 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg15_fsm_19 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg19_fsm_23 assign process. ///
always @ (ap_sig_bdd_134)
begin
    if (ap_sig_bdd_134) begin
        ap_sig_cseq_ST_pp0_stg19_fsm_23 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg19_fsm_23 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg1_fsm_5 assign process. ///
always @ (ap_sig_bdd_143)
begin
    if (ap_sig_bdd_143) begin
        ap_sig_cseq_ST_pp0_stg1_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg1_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg21_fsm_25 assign process. ///
always @ (ap_sig_bdd_381)
begin
    if (ap_sig_bdd_381) begin
        ap_sig_cseq_ST_pp0_stg21_fsm_25 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg21_fsm_25 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg2_fsm_6 assign process. ///
always @ (ap_sig_bdd_258)
begin
    if (ap_sig_bdd_258) begin
        ap_sig_cseq_ST_pp0_stg2_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg2_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg3_fsm_7 assign process. ///
always @ (ap_sig_bdd_278)
begin
    if (ap_sig_bdd_278) begin
        ap_sig_cseq_ST_pp0_stg3_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg3_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg4_fsm_8 assign process. ///
always @ (ap_sig_bdd_296)
begin
    if (ap_sig_bdd_296) begin
        ap_sig_cseq_ST_pp0_stg4_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg4_fsm_8 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg5_fsm_9 assign process. ///
always @ (ap_sig_bdd_154)
begin
    if (ap_sig_bdd_154) begin
        ap_sig_cseq_ST_pp0_stg5_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg5_fsm_9 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg6_fsm_10 assign process. ///
always @ (ap_sig_bdd_314)
begin
    if (ap_sig_bdd_314) begin
        ap_sig_cseq_ST_pp0_stg6_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg6_fsm_10 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg7_fsm_11 assign process. ///
always @ (ap_sig_bdd_329)
begin
    if (ap_sig_bdd_329) begin
        ap_sig_cseq_ST_pp0_stg7_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg7_fsm_11 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg8_fsm_12 assign process. ///
always @ (ap_sig_bdd_339)
begin
    if (ap_sig_bdd_339) begin
        ap_sig_cseq_ST_pp0_stg8_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg8_fsm_12 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg9_fsm_13 assign process. ///
always @ (ap_sig_bdd_348)
begin
    if (ap_sig_bdd_348) begin
        ap_sig_cseq_ST_pp0_stg9_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg9_fsm_13 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_45)
begin
    if (ap_sig_bdd_45) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_165)
begin
    if (ap_sig_bdd_165) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_180)
begin
    if (ap_sig_bdd_180) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st40_fsm_26 assign process. ///
always @ (ap_sig_bdd_891)
begin
    if (ap_sig_bdd_891) begin
        ap_sig_cseq_ST_st40_fsm_26 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st40_fsm_26 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_194)
begin
    if (ap_sig_bdd_194) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// grp_fu_365_p0 assign process. ///
always @ (C1_v_q0 or grp_fu_365_p2 or reg_382 or ap_sig_cseq_ST_pp0_stg11_fsm_15 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg15_fsm_19 or ap_sig_cseq_ST_pp0_stg19_fsm_23 or ap_sig_cseq_ST_pp0_stg1_fsm_5 or ap_sig_cseq_ST_pp0_stg6_fsm_10 or ap_sig_cseq_ST_pp0_stg7_fsm_11)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_10))) begin
        grp_fu_365_p0 = reg_382;
    end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg11_fsm_15) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg15_fsm_19)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg19_fsm_23)))) begin
        grp_fu_365_p0 = grp_fu_365_p2;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_11))) begin
        grp_fu_365_p0 = C1_v_q0;
    end else begin
        grp_fu_365_p0 = 'bx;
    end
end

/// grp_fu_365_p1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg11_fsm_15 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg15_fsm_19 or ap_sig_cseq_ST_pp0_stg19_fsm_23 or ap_sig_cseq_ST_pp0_stg1_fsm_5 or ap_sig_cseq_ST_pp0_stg6_fsm_10 or tmp_31_reg_1270 or ap_sig_cseq_ST_pp0_stg7_fsm_11 or tmp_31_1_reg_1280 or tmp_31_2_reg_1285 or tmp_31_3_reg_1290 or tmp_31_4_reg_1295 or C1_bias_load_reg_1305)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_10))) begin
        grp_fu_365_p1 = C1_bias_load_reg_1305;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5))) begin
        grp_fu_365_p1 = tmp_31_4_reg_1295;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg19_fsm_23))) begin
        grp_fu_365_p1 = tmp_31_3_reg_1290;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg15_fsm_19))) begin
        grp_fu_365_p1 = tmp_31_2_reg_1285;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg11_fsm_15) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        grp_fu_365_p1 = tmp_31_1_reg_1280;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_11))) begin
        grp_fu_365_p1 = tmp_31_reg_1270;
    end else begin
        grp_fu_365_p1 = 'bx;
    end
end

/// grp_fu_372_p0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg5_fsm_9 or inputimg_load_reg_1157 or inputimg_load_1_reg_1174 or ap_sig_cseq_ST_pp0_stg3_fsm_7 or inputimg_load_2_reg_1204 or inputimg_load_3_reg_1214 or ap_sig_cseq_ST_pp0_stg4_fsm_8 or inputimg_load_4_reg_1239 or ap_sig_cseq_ST_pp0_stg6_fsm_10 or ap_sig_cseq_ST_pp0_stg7_fsm_11)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_11)) begin
            grp_fu_372_p0 = inputimg_load_4_reg_1239;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_10)) begin
            grp_fu_372_p0 = inputimg_load_3_reg_1214;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_9)) begin
            grp_fu_372_p0 = inputimg_load_2_reg_1204;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8)) begin
            grp_fu_372_p0 = inputimg_load_1_reg_1174;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)) begin
            grp_fu_372_p0 = inputimg_load_reg_1157;
        end else begin
            grp_fu_372_p0 = 'bx;
        end
    end else begin
        grp_fu_372_p0 = 'bx;
    end
end

/// grp_fu_372_p1 assign process. ///
always @ (C1_mapData_q0 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg5_fsm_9 or ap_sig_cseq_ST_pp0_stg3_fsm_7 or C1_mapData_load_1_reg_1199 or C1_mapData_load_2_reg_1229 or ap_sig_cseq_ST_pp0_stg4_fsm_8 or C1_mapData_load_3_reg_1234 or C1_mapData_load_4_reg_1255 or ap_sig_cseq_ST_pp0_stg6_fsm_10 or ap_sig_cseq_ST_pp0_stg7_fsm_11)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_11)) begin
            grp_fu_372_p1 = C1_mapData_load_4_reg_1255;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_10)) begin
            grp_fu_372_p1 = C1_mapData_load_3_reg_1234;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_9)) begin
            grp_fu_372_p1 = C1_mapData_load_2_reg_1229;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_8)) begin
            grp_fu_372_p1 = C1_mapData_load_1_reg_1199;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)) begin
            grp_fu_372_p1 = C1_mapData_q0;
        end else begin
            grp_fu_372_p1 = 'bx;
        end
    end else begin
        grp_fu_372_p1 = 'bx;
    end
end

/// i_1_phi_fu_301_p4 assign process. ///
always @ (i_1_reg_297 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg1_fsm_5 or ap_reg_ppstg_exitcond_flatten_reg_1049_pp0_it1 or i_1_mid2_reg_1098)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1049_pp0_it1))) begin
        i_1_phi_fu_301_p4 = i_1_mid2_reg_1098;
    end else begin
        i_1_phi_fu_301_p4 = i_1_reg_297;
    end
end

/// indvar_flatten3_phi_fu_290_p4 assign process. ///
always @ (indvar_flatten3_reg_286 or ap_reg_ppiten_pp0_it1 or exitcond_flatten_reg_1049 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or indvar_flatten_next3_reg_1053)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        indvar_flatten3_phi_fu_290_p4 = indvar_flatten_next3_reg_1053;
    end else begin
        indvar_flatten3_phi_fu_290_p4 = indvar_flatten3_reg_286;
    end
end

/// indvar_flatten4_phi_fu_313_p4 assign process. ///
always @ (indvar_flatten4_reg_309 or ap_reg_ppiten_pp0_it1 or exitcond_flatten_reg_1049 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or indvar_flatten_next4_reg_1093)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        indvar_flatten4_phi_fu_313_p4 = indvar_flatten_next4_reg_1093;
    end else begin
        indvar_flatten4_phi_fu_313_p4 = indvar_flatten4_reg_309;
    end
end

/// indvar_flatten_phi_fu_335_p4 assign process. ///
always @ (indvar_flatten_reg_331 or ap_reg_ppiten_pp0_it1 or exitcond_flatten_reg_1049 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or indvar_flatten_next_reg_1088)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        indvar_flatten_phi_fu_335_p4 = indvar_flatten_next_reg_1088;
    end else begin
        indvar_flatten_phi_fu_335_p4 = indvar_flatten_reg_331;
    end
end

/// inputimg_address0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg1_fsm_5 or ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_sig_cseq_ST_pp0_stg3_fsm_7 or tmp_314_fu_724_p1 or tmp_320_fu_829_p1 or tmp_326_fu_878_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)) begin
            inputimg_address0 = tmp_326_fu_878_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6)) begin
            inputimg_address0 = tmp_320_fu_829_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5)) begin
            inputimg_address0 = tmp_314_fu_724_p1;
        end else begin
            inputimg_address0 = 'bx;
        end
    end else begin
        inputimg_address0 = 'bx;
    end
end

/// inputimg_address1 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg1_fsm_5 or ap_sig_cseq_ST_pp0_stg2_fsm_6 or tmp_317_fu_753_p1 or tmp_323_fu_841_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6)) begin
            inputimg_address1 = tmp_323_fu_841_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5)) begin
            inputimg_address1 = tmp_317_fu_753_p1;
        end else begin
            inputimg_address1 = 'bx;
        end
    end else begin
        inputimg_address1 = 'bx;
    end
end

/// inputimg_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg1_fsm_5 or ap_sig_cseq_ST_pp0_stg2_fsm_6 or ap_sig_cseq_ST_pp0_stg3_fsm_7)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_7)))) begin
        inputimg_ce0 = ap_const_logic_1;
    end else begin
        inputimg_ce0 = ap_const_logic_0;
    end
end

/// inputimg_ce1 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg1_fsm_5 or ap_sig_cseq_ST_pp0_stg2_fsm_6)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_5)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_6)))) begin
        inputimg_ce1 = ap_const_logic_1;
    end else begin
        inputimg_ce1 = ap_const_logic_0;
    end
end

/// j_1_phi_fu_324_p4 assign process. ///
always @ (j_1_reg_320 or ap_reg_ppiten_pp0_it1 or exitcond_flatten_reg_1049 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or j_1_mid2_reg_1105)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        j_1_phi_fu_324_p4 = j_1_mid2_reg_1105;
    end else begin
        j_1_phi_fu_324_p4 = j_1_reg_320;
    end
end

/// k_1_phi_fu_346_p4 assign process. ///
always @ (k_1_reg_342 or ap_reg_ppiten_pp0_it1 or exitcond_flatten_reg_1049 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or k_1_mid2_reg_1111)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        k_1_phi_fu_346_p4 = k_1_mid2_reg_1111;
    end else begin
        k_1_phi_fu_346_p4 = k_1_reg_342;
    end
end

/// m_phi_fu_357_p4 assign process. ///
always @ (m_reg_353 or ap_reg_ppiten_pp0_it1 or exitcond_flatten_reg_1049 or ap_sig_cseq_ST_pp0_stg0_fsm_4 or m_1_reg_1148)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_4))) begin
        m_phi_fu_357_p4 = m_1_reg_1148;
    end else begin
        m_phi_fu_357_p4 = m_reg_353;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or exitcond7_fu_387_p2 or exitcond6_fu_433_p2 or exitcond_flatten_fu_510_p2 or exitcond5_fu_484_p2 or ap_sig_cseq_ST_pp0_stg12_fsm_16)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if ((ap_const_lv1_0 == exitcond7_fu_387_p2)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_4;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if ((ap_const_lv1_0 == exitcond6_fu_433_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            if ((ap_const_lv1_0 == exitcond5_fu_484_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_pp0_stg0_fsm_4 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond_flatten_fu_510_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st40_fsm_26;
            end
        end
        ap_ST_pp0_stg1_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg2_fsm_6;
        end
        ap_ST_pp0_stg2_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg3_fsm_7;
        end
        ap_ST_pp0_stg3_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg4_fsm_8;
        end
        ap_ST_pp0_stg4_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg5_fsm_9;
        end
        ap_ST_pp0_stg5_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg6_fsm_10;
        end
        ap_ST_pp0_stg6_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg7_fsm_11;
        end
        ap_ST_pp0_stg7_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg8_fsm_12;
        end
        ap_ST_pp0_stg8_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg9_fsm_13;
        end
        ap_ST_pp0_stg9_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg10_fsm_14;
        end
        ap_ST_pp0_stg10_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg11_fsm_15;
        end
        ap_ST_pp0_stg11_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg12_fsm_16;
        end
        ap_ST_pp0_stg12_fsm_16 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg12_fsm_16) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
                ap_NS_fsm = ap_ST_pp0_stg13_fsm_17;
            end else begin
                ap_NS_fsm = ap_ST_st40_fsm_26;
            end
        end
        ap_ST_pp0_stg13_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg14_fsm_18;
        end
        ap_ST_pp0_stg14_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg15_fsm_19;
        end
        ap_ST_pp0_stg15_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg16_fsm_20;
        end
        ap_ST_pp0_stg16_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg17_fsm_21;
        end
        ap_ST_pp0_stg17_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg18_fsm_22;
        end
        ap_ST_pp0_stg18_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg19_fsm_23;
        end
        ap_ST_pp0_stg19_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg20_fsm_24;
        end
        ap_ST_pp0_stg20_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg21_fsm_25;
        end
        ap_ST_pp0_stg21_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_4;
        end
        ap_ST_st40_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C1_bias_address0 = tmp_s_fu_962_p1;
assign C1_mapData_addr1_fu_733_p2 = (tmp_trn_cast_fu_700_p1 + p_shl82_cast1_fu_712_p1);
assign C1_mapData_addr2_cast_fu_780_p1 = C1_mapData_addr2_reg_1137;
assign C1_mapData_addr2_fu_739_p2 = (C1_mapData_addr1_fu_733_p2 + tmp_25_trn_cast_fu_729_p1);
assign C1_mapData_addr3_fu_794_p2 = (C1_mapData_addr2_cast_fu_780_p1 + p_shl50_fu_790_p1);
assign C1_mapData_addr4_fu_800_p2 = (C1_mapData_addr3_fu_794_p2 + ap_const_lv32_4);
assign C1_mapData_addr5_fu_811_p2 = (C1_mapData_addr3_fu_794_p2 + ap_const_lv32_3);
assign C1_mapData_addr6_fu_851_p2 = (C1_mapData_addr3_reg_1162 + ap_const_lv32_2);
assign C1_mapData_addr7_fu_861_p2 = (C1_mapData_addr3_reg_1162 + ap_const_lv32_1);
assign C1_v_addr10_fu_449_p2 = ($signed(C1_v_addr8_cast_reg_1023) + $signed(tmp_14_trn_cast_fu_445_p1));
assign C1_v_addr11_fu_478_p2 = ($signed(p_shl51_fu_462_p1) - $signed(p_shl52_fu_474_p1));
assign C1_v_addr12_fu_500_p2 = ($signed(C1_v_addr11_reg_1036) + $signed(tmp_17_trn_fu_496_p1));
assign C1_v_addr4_fu_914_p2 = ($signed(C1_v_addr9_cast_fu_910_p1) + $signed(tmp_15_trn_cast_fu_887_p1));
assign C1_v_addr5_fu_945_p2 = ($signed(p_shl_fu_930_p1) - $signed(p_shl49_fu_941_p1));
assign C1_v_addr6_fu_951_p2 = ($signed(C1_v_addr5_fu_945_p2) + $signed(tmp_18_trn_fu_920_p1));
assign C1_v_addr8_cast_fu_429_p1 = $signed(C1_v_addr8_fu_423_p2);
assign C1_v_addr8_fu_423_p2 = (p_shl_cast_fu_407_p1 - p_shl74_cast_fu_419_p1);
assign C1_v_addr9_cast_fu_910_p1 = $signed(C1_v_addr9_fu_904_p2);
assign C1_v_addr9_fu_904_p2 = (p_shl81_cast_fu_897_p1 - p_shl82_cast_fu_901_p1);
assign C1_y_address0 = ap_reg_ppstg_tmp_312_reg_1260_pp0_it1;
assign C1_y_d0 = ((tmp_84_reg_1317[0:0]===1'b1)? temp_reg_1310: ap_const_lv32_0);

/// ap_sig_bdd_110 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_110 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end

/// ap_sig_bdd_125 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_125 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_13]);
end

/// ap_sig_bdd_134 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_134 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_17]);
end

/// ap_sig_bdd_143 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_143 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_154 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_154 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end

/// ap_sig_bdd_165 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_165 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_180 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_180 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_194 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_194 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_202 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_202 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_258 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_258 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_278 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_278 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_296 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_296 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_314 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_314 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end

/// ap_sig_bdd_329 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_329 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end

/// ap_sig_bdd_339 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_339 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end

/// ap_sig_bdd_348 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_348 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end

/// ap_sig_bdd_357 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_357 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end

/// ap_sig_bdd_381 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_381 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_19]);
end

/// ap_sig_bdd_448 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_448 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_10]);
end

/// ap_sig_bdd_45 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_45 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_891 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_891 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1A]);
end
assign exitcond1_mid3_fu_592_p2 = (exitcond1_mid_fu_548_p2 & not_exitcond_flatten_mid_fu_586_p2);
assign exitcond1_mid_fu_548_p2 = (exitcond_fu_542_p2 & not_exitcond_flatten_fu_536_p2);
assign exitcond5_fu_484_p2 = (k_reg_275 == ap_const_lv5_1C? 1'b1: 1'b0);
assign exitcond6_fu_433_p2 = (j_reg_264 == ap_const_lv5_1C? 1'b1: 1'b0);
assign exitcond7_fu_387_p2 = (i_reg_253 == ap_const_lv3_6? 1'b1: 1'b0);
assign exitcond_flatten7_fu_522_p2 = (indvar_flatten4_phi_fu_313_p4 == ap_const_lv13_F50? 1'b1: 1'b0);
assign exitcond_flatten8_fu_554_p2 = (indvar_flatten_phi_fu_335_p4 == ap_const_lv8_8C? 1'b1: 1'b0);
assign exitcond_flatten_fu_510_p2 = (indvar_flatten3_phi_fu_290_p4 == ap_const_lv15_5BE0? 1'b1: 1'b0);
assign exitcond_flatten_mid_fu_560_p2 = (exitcond_flatten8_fu_554_p2 & not_exitcond_flatten_fu_536_p2);
assign exitcond_flatten_not_fu_580_p2 = (exitcond_flatten8_fu_554_p2 ^ ap_const_lv1_1);
assign exitcond_fu_542_p2 = (m_phi_fu_357_p4 == ap_const_lv3_5? 1'b1: 1'b0);
assign grp_fu_365_ce = ap_const_logic_1;
assign grp_fu_372_ce = ap_const_logic_1;
assign i_1_mid2_fu_632_p3 = ((exitcond_flatten7_reg_1058[0:0]===1'b1)? i_s_fu_626_p2: i_1_phi_fu_301_p4);
assign i_2_fu_393_p2 = (i_reg_253 + ap_const_lv3_1);
assign i_s_fu_626_p2 = (i_1_phi_fu_301_p4 + ap_const_lv3_1);
assign ifzero_fu_764_p2 = (m_1_fu_758_p2 == ap_const_lv3_5? 1'b1: 1'b0);
assign indvar_flatten14_op_fu_612_p2 = (indvar_flatten4_phi_fu_313_p4 + ap_const_lv13_1);
assign indvar_flatten_next3_fu_516_p2 = (indvar_flatten3_phi_fu_290_p4 + ap_const_lv15_1);
assign indvar_flatten_next4_fu_618_p3 = ((exitcond_flatten7_fu_522_p2[0:0]===1'b1)? ap_const_lv13_1: indvar_flatten14_op_fu_612_p2);
assign indvar_flatten_next_fu_604_p3 = ((tmp_308_fu_566_p2[0:0]===1'b1)? ap_const_lv8_1: indvar_flatten_op_fu_598_p2);
assign indvar_flatten_op_fu_598_p2 = (indvar_flatten_phi_fu_335_p4 + ap_const_lv8_1);
assign j_1_mid2_fu_644_p3 = ((exitcond_flatten_mid_reg_1070[0:0]===1'b1)? j_3_fu_639_p2: j_1_mid_reg_1064);
assign j_1_mid_fu_528_p3 = ((exitcond_flatten7_fu_522_p2[0:0]===1'b1)? ap_const_lv5_0: j_1_phi_fu_324_p4);
assign j_2_fu_439_p2 = (j_reg_264 + ap_const_lv5_1);
assign j_3_fu_639_p2 = (j_1_mid_reg_1064 + ap_const_lv5_1);
assign k_1_mid2_fu_672_p3 = ((exitcond1_mid3_reg_1082[0:0]===1'b1)? k_3_fu_650_p2: k_1_mid_reg_1076);
assign k_1_mid_fu_572_p3 = ((tmp_308_fu_566_p2[0:0]===1'b1)? ap_const_lv5_0: k_1_phi_fu_346_p4);
assign k_2_fu_490_p2 = (k_reg_275 + ap_const_lv5_1);
assign k_3_fu_650_p2 = (k_1_mid_reg_1076 + ap_const_lv5_1);
assign m_1_fu_758_p2 = (m_mid2_fu_664_p3 + ap_const_lv3_1);
assign m_mid2_fu_664_p3 = ((tmp_145_fu_659_p2[0:0]===1'b1)? ap_const_lv3_0: m_reg_353);
assign not_exitcond_flatten_fu_536_p2 = (exitcond_flatten7_fu_522_p2 ^ ap_const_lv1_1);
assign not_exitcond_flatten_mid_fu_586_p2 = (exitcond_flatten7_fu_522_p2 | exitcond_flatten_not_fu_580_p2);
assign notlhs_fu_983_p2 = (tmp_80_fu_969_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notrhs_fu_989_p2 = (tmp_149_fu_979_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign p_shl49_fu_941_p1 = $signed(tmp_147_fu_934_p3);
assign p_shl50_fu_790_p1 = tmp_148_fu_783_p3;
assign p_shl51_fu_462_p1 = $signed(tmp_150_fu_454_p3);
assign p_shl52_fu_474_p1 = $signed(tmp_151_fu_466_p3);
assign p_shl74_cast_fu_419_p1 = tmp_307_fu_411_p3;
assign p_shl81_cast_fu_897_p1 = tmp_310_fu_890_p3;
assign p_shl82_cast1_fu_712_p1 = tmp_311_fu_704_p3;
assign p_shl82_cast_fu_901_p1 = tmp_311_reg_1127;
assign p_shl_cast_fu_407_p1 = tmp_fu_399_p3;
assign p_shl_fu_930_p1 = $signed(tmp_146_fu_923_p3);
assign temp_to_int_fu_966_p1 = temp_reg_1310;
assign tmp_145_fu_659_p2 = (tmp_309_fu_655_p2 | exitcond_flatten7_reg_1058);
assign tmp_146_fu_923_p3 = {{C1_v_addr4_reg_1249}, {ap_const_lv5_0}};
assign tmp_147_fu_934_p3 = {{C1_v_addr4_reg_1249}, {ap_const_lv2_0}};
assign tmp_148_fu_783_p3 = {{C1_mapData_addr2_reg_1137}, {ap_const_lv2_0}};
assign tmp_149_fu_979_p1 = temp_to_int_fu_966_p1[22:0];
assign tmp_14_trn_cast_fu_445_p1 = j_reg_264;
assign tmp_150_fu_454_p3 = {{C1_v_addr10_fu_449_p2}, {ap_const_lv5_0}};
assign tmp_151_fu_466_p3 = {{C1_v_addr10_fu_449_p2}, {ap_const_lv2_0}};
assign tmp_15_trn_cast_fu_887_p1 = j_1_mid2_reg_1105;
assign tmp_17_trn_fu_496_p1 = k_reg_275;
assign tmp_18_trn_fu_920_p1 = k_1_mid2_reg_1111;
assign tmp_21_cast1_fu_684_p1 = m_mid2_fu_664_p3;
assign tmp_22_fu_688_p2 = (tmp_21_cast1_fu_684_p1 + j_1_mid2_fu_644_p3);
assign tmp_24_fu_694_p2 = ($signed(ap_const_lv3_4) - $signed(m_mid2_fu_664_p3));
assign tmp_25_trn_cast_fu_729_p1 = $unsigned(tmp_24_fu_694_p2);
assign tmp_27_1_fu_678_p2 = (k_1_mid2_fu_672_p3 + ap_const_lv5_1);
assign tmp_27_2_fu_770_p2 = (k_1_mid2_reg_1111 + ap_const_lv5_2);
assign tmp_27_3_fu_775_p2 = (k_1_mid2_reg_1111 + ap_const_lv5_3);
assign tmp_27_4_fu_846_p2 = (k_1_mid2_reg_1111 + ap_const_lv5_4);
assign tmp_307_fu_411_p3 = {{i_reg_253}, {ap_const_lv2_0}};
assign tmp_308_fu_566_p2 = (exitcond_flatten_mid_fu_560_p2 | exitcond_flatten7_fu_522_p2);
assign tmp_309_fu_655_p2 = (exitcond1_mid3_reg_1082 | exitcond_flatten_mid_reg_1070);
assign tmp_310_fu_890_p3 = {{i_1_mid2_reg_1098}, {ap_const_lv5_0}};
assign tmp_311_fu_704_p3 = {{i_1_mid2_fu_632_p3}, {ap_const_lv2_0}};
assign tmp_312_fu_957_p1 = $unsigned(C1_v_addr6_fu_951_p2);
assign tmp_313_fu_716_p3 = {{tmp_22_fu_688_p2}, {k_1_mid2_fu_672_p3}};
assign tmp_314_fu_724_p1 = tmp_313_fu_716_p3;
assign tmp_315_fu_806_p1 = C1_mapData_addr4_fu_800_p2;
assign tmp_316_fu_745_p3 = {{tmp_22_fu_688_p2}, {tmp_27_1_fu_678_p2}};
assign tmp_317_fu_753_p1 = tmp_316_fu_745_p3;
assign tmp_318_fu_817_p1 = C1_mapData_addr5_fu_811_p2;
assign tmp_319_fu_822_p3 = {{tmp_22_reg_1120}, {tmp_27_2_fu_770_p2}};
assign tmp_320_fu_829_p1 = tmp_319_fu_822_p3;
assign tmp_321_fu_856_p1 = C1_mapData_addr6_fu_851_p2;
assign tmp_322_fu_834_p3 = {{tmp_22_reg_1120}, {tmp_27_3_fu_775_p2}};
assign tmp_323_fu_841_p1 = tmp_322_fu_834_p3;
assign tmp_324_fu_866_p1 = C1_mapData_addr7_fu_861_p2;
assign tmp_325_fu_871_p3 = {{tmp_22_reg_1120}, {tmp_27_4_fu_846_p2}};
assign tmp_326_fu_878_p1 = tmp_325_fu_871_p3;
assign tmp_327_fu_883_p1 = C1_mapData_addr3_reg_1162;
assign tmp_328_fu_505_p1 = $unsigned(C1_v_addr12_fu_500_p2);
assign tmp_80_fu_969_p4 = {{temp_to_int_fu_966_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_82_fu_995_p2 = (notrhs_fu_989_p2 | notlhs_fu_983_p2);
assign tmp_83_fu_377_opcode = ap_const_lv5_2;
assign tmp_83_fu_377_p0 = temp_reg_1310;
assign tmp_83_fu_377_p1 = ap_const_lv32_0;
assign tmp_84_fu_1001_p2 = (tmp_82_fu_995_p2 & tmp_83_fu_377_p2);
assign tmp_fu_399_p3 = {{i_reg_253}, {ap_const_lv5_0}};
assign tmp_s_fu_962_p1 = ap_reg_ppstg_i_1_mid2_reg_1098_pp0_it1;
assign tmp_trn_cast_fu_700_p1 = i_1_mid2_fu_632_p3;
always @ (posedge ap_clk)
begin
    C1_v_addr8_cast_reg_1023[1:0] <= 2'b00;
    C1_v_addr11_reg_1036[1:0] <= 2'b00;
    tmp_311_reg_1127[1:0] <= 2'b00;
    tmp_312_reg_1260[63:32] <= 32'b00000000000000000000000000000000;
    ap_reg_ppstg_tmp_312_reg_1260_pp0_it1[63:32] <= 32'b00000000000000000000000000000000;
end



endmodule //dateport_C1_conv

