// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dateport_upadteall (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        C1_mapData_address0,
        C1_mapData_ce0,
        C1_mapData_we0,
        C1_mapData_d0,
        C1_mapData_q0,
        C1_dmapData_address0,
        C1_dmapData_ce0,
        C1_dmapData_we0,
        C1_dmapData_d0,
        C1_dmapData_q0,
        C1_bias_address0,
        C1_bias_ce0,
        C1_bias_we0,
        C1_bias_d0,
        C1_bias_q0,
        C1_dbias_address0,
        C1_dbias_ce0,
        C1_dbias_we0,
        C1_dbias_d0,
        C1_dbias_q0,
        C3_mapData_address0,
        C3_mapData_ce0,
        C3_mapData_we0,
        C3_mapData_d0,
        C3_mapData_q0,
        C3_dmapData_address0,
        C3_dmapData_ce0,
        C3_dmapData_we0,
        C3_dmapData_d0,
        C3_dmapData_q0,
        C3_bias_address0,
        C3_bias_ce0,
        C3_bias_we0,
        C3_bias_d0,
        C3_bias_q0,
        C3_dbias_address0,
        C3_dbias_ce0,
        C3_dbias_we0,
        C3_dbias_d0,
        C3_dbias_q0,
        C5_mapData_address0,
        C5_mapData_ce0,
        C5_mapData_we0,
        C5_mapData_d0,
        C5_mapData_q0,
        C5_dmapData_address0,
        C5_dmapData_ce0,
        C5_dmapData_we0,
        C5_dmapData_d0,
        C5_dmapData_q0,
        C5_bias_address0,
        C5_bias_ce0,
        C5_bias_we0,
        C5_bias_d0,
        C5_bias_q0,
        C5_dbias_address0,
        C5_dbias_ce0,
        C5_dbias_we0,
        C5_dbias_d0,
        C5_dbias_q0,
        output_wei_address0,
        output_wei_ce0,
        output_wei_we0,
        output_wei_d0,
        output_wei_q0,
        output_dwei_address0,
        output_dwei_ce0,
        output_dwei_we0,
        output_dwei_d0,
        output_dwei_q0,
        output_bias_address0,
        output_bias_ce0,
        output_bias_we0,
        output_bias_d0,
        output_bias_q0,
        output_dbias_address0,
        output_dbias_ce0,
        output_dbias_we0,
        output_dbias_d0,
        output_dbias_q0
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 107'b1;
parameter    ap_ST_st2_fsm_1 = 107'b10;
parameter    ap_ST_st3_fsm_2 = 107'b100;
parameter    ap_ST_st4_fsm_3 = 107'b1000;
parameter    ap_ST_st5_fsm_4 = 107'b10000;
parameter    ap_ST_st6_fsm_5 = 107'b100000;
parameter    ap_ST_st7_fsm_6 = 107'b1000000;
parameter    ap_ST_st8_fsm_7 = 107'b10000000;
parameter    ap_ST_st9_fsm_8 = 107'b100000000;
parameter    ap_ST_st10_fsm_9 = 107'b1000000000;
parameter    ap_ST_st11_fsm_10 = 107'b10000000000;
parameter    ap_ST_st12_fsm_11 = 107'b100000000000;
parameter    ap_ST_st13_fsm_12 = 107'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 107'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 107'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 107'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 107'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 107'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 107'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 107'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 107'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 107'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 107'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 107'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 107'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 107'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 107'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 107'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 107'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 107'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 107'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 107'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 107'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 107'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 107'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 107'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 107'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 107'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 107'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 107'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 107'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 107'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 107'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 107'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 107'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 107'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 107'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 107'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 107'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 107'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 107'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 107'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 107'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 107'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 107'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 107'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 107'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 107'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 107'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 107'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_60 = 107'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_61 = 107'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_62 = 107'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st64_fsm_63 = 107'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st65_fsm_64 = 107'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st66_fsm_65 = 107'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st67_fsm_66 = 107'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st68_fsm_67 = 107'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st69_fsm_68 = 107'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st70_fsm_69 = 107'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st71_fsm_70 = 107'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st72_fsm_71 = 107'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st73_fsm_72 = 107'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st74_fsm_73 = 107'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st75_fsm_74 = 107'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st76_fsm_75 = 107'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st77_fsm_76 = 107'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st78_fsm_77 = 107'b100000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st79_fsm_78 = 107'b1000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st80_fsm_79 = 107'b10000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st81_fsm_80 = 107'b100000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st82_fsm_81 = 107'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st83_fsm_82 = 107'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st84_fsm_83 = 107'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st85_fsm_84 = 107'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st86_fsm_85 = 107'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st87_fsm_86 = 107'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st88_fsm_87 = 107'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st89_fsm_88 = 107'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st90_fsm_89 = 107'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st91_fsm_90 = 107'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st92_fsm_91 = 107'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st93_fsm_92 = 107'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st94_fsm_93 = 107'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st95_fsm_94 = 107'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st96_fsm_95 = 107'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st97_fsm_96 = 107'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st98_fsm_97 = 107'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st99_fsm_98 = 107'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st100_fsm_99 = 107'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st101_fsm_100 = 107'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st102_fsm_101 = 107'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st103_fsm_102 = 107'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st104_fsm_103 = 107'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st105_fsm_104 = 107'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st106_fsm_105 = 107'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st107_fsm_106 = 107'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_2D = 32'b101101;
parameter    ap_const_lv32_31 = 32'b110001;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_49 = 32'b1001001;
parameter    ap_const_lv32_4D = 32'b1001101;
parameter    ap_const_lv32_59 = 32'b1011001;
parameter    ap_const_lv32_64 = 32'b1100100;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_36 = 32'b110110;
parameter    ap_const_lv32_44 = 32'b1000100;
parameter    ap_const_lv32_52 = 32'b1010010;
parameter    ap_const_lv32_5E = 32'b1011110;
parameter    ap_const_lv32_69 = 32'b1101001;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_2A = 32'b101010;
parameter    ap_const_lv32_38 = 32'b111000;
parameter    ap_const_lv32_39 = 32'b111001;
parameter    ap_const_lv32_3A = 32'b111010;
parameter    ap_const_lv32_3B = 32'b111011;
parameter    ap_const_lv32_3C = 32'b111100;
parameter    ap_const_lv32_46 = 32'b1000110;
parameter    ap_const_lv32_54 = 32'b1010100;
parameter    ap_const_lv32_55 = 32'b1010101;
parameter    ap_const_lv32_56 = 32'b1010110;
parameter    ap_const_lv32_60 = 32'b1100000;
parameter    ap_const_lv32_61 = 32'b1100001;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_37 = 32'b110111;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_53 = 32'b1010011;
parameter    ap_const_lv32_45 = 32'b1000101;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_5F = 32'b1011111;
parameter    ap_const_lv32_6A = 32'b1101010;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv32_30 = 32'b110000;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv32_4C = 32'b1001100;
parameter    ap_const_lv32_58 = 32'b1011000;
parameter    ap_const_lv32_63 = 32'b1100011;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_32 = 32'b110010;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv32_4E = 32'b1001110;
parameter    ap_const_lv32_5A = 32'b1011010;
parameter    ap_const_lv32_65 = 32'b1100101;
parameter    ap_const_lv32_3827C5AD = 32'b111000001001111100010110101101;
parameter    ap_const_lv32_3CCCCCCD = 32'b111100110011001100110011001101;
parameter    ap_const_lv32_3CA3D70A = 32'b111100101000111101011100001010;
parameter    ap_const_lv32_37A7C5AD = 32'b110111101001111100010110101101;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_2E = 32'b101110;
parameter    ap_const_lv32_4A = 32'b1001010;
parameter    ap_const_lv3_6 = 3'b110;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv3_5 = 3'b101;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv5_1E = 5'b11110;
parameter    ap_const_lv4_A = 4'b1010;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] C1_mapData_address0;
output   C1_mapData_ce0;
output   C1_mapData_we0;
output  [31:0] C1_mapData_d0;
input  [31:0] C1_mapData_q0;
output  [7:0] C1_dmapData_address0;
output   C1_dmapData_ce0;
output   C1_dmapData_we0;
output  [31:0] C1_dmapData_d0;
input  [31:0] C1_dmapData_q0;
output  [2:0] C1_bias_address0;
output   C1_bias_ce0;
output   C1_bias_we0;
output  [31:0] C1_bias_d0;
input  [31:0] C1_bias_q0;
output  [2:0] C1_dbias_address0;
output   C1_dbias_ce0;
output   C1_dbias_we0;
output  [31:0] C1_dbias_d0;
input  [31:0] C1_dbias_q0;
output  [11:0] C3_mapData_address0;
output   C3_mapData_ce0;
output   C3_mapData_we0;
output  [31:0] C3_mapData_d0;
input  [31:0] C3_mapData_q0;
output  [11:0] C3_dmapData_address0;
output   C3_dmapData_ce0;
output   C3_dmapData_we0;
output  [31:0] C3_dmapData_d0;
input  [31:0] C3_dmapData_q0;
output  [3:0] C3_bias_address0;
output   C3_bias_ce0;
output   C3_bias_we0;
output  [31:0] C3_bias_d0;
input  [31:0] C3_bias_q0;
output  [3:0] C3_dbias_address0;
output   C3_dbias_ce0;
output   C3_dbias_we0;
output  [31:0] C3_dbias_d0;
input  [31:0] C3_dbias_q0;
output  [13:0] C5_mapData_address0;
output   C5_mapData_ce0;
output   C5_mapData_we0;
output  [31:0] C5_mapData_d0;
input  [31:0] C5_mapData_q0;
output  [13:0] C5_dmapData_address0;
output   C5_dmapData_ce0;
output   C5_dmapData_we0;
output  [31:0] C5_dmapData_d0;
input  [31:0] C5_dmapData_q0;
output  [4:0] C5_bias_address0;
output   C5_bias_ce0;
output   C5_bias_we0;
output  [31:0] C5_bias_d0;
input  [31:0] C5_bias_q0;
output  [4:0] C5_dbias_address0;
output   C5_dbias_ce0;
output   C5_dbias_we0;
output  [31:0] C5_dbias_d0;
input  [31:0] C5_dbias_q0;
output  [8:0] output_wei_address0;
output   output_wei_ce0;
output   output_wei_we0;
output  [31:0] output_wei_d0;
input  [31:0] output_wei_q0;
output  [8:0] output_dwei_address0;
output   output_dwei_ce0;
output   output_dwei_we0;
output  [31:0] output_dwei_d0;
input  [31:0] output_dwei_q0;
output  [3:0] output_bias_address0;
output   output_bias_ce0;
output   output_bias_we0;
output  [31:0] output_bias_d0;
input  [31:0] output_bias_q0;
output  [3:0] output_dbias_address0;
output   output_dbias_ce0;
output   output_dbias_we0;
output  [31:0] output_dbias_d0;
input  [31:0] output_dbias_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg C1_mapData_ce0;
reg C1_mapData_we0;
reg[7:0] C1_dmapData_address0;
reg C1_dmapData_ce0;
reg C1_dmapData_we0;
reg C1_bias_ce0;
reg C1_bias_we0;
reg[2:0] C1_dbias_address0;
reg C1_dbias_ce0;
reg C1_dbias_we0;
reg C3_mapData_ce0;
reg C3_mapData_we0;
reg[11:0] C3_dmapData_address0;
reg C3_dmapData_ce0;
reg C3_dmapData_we0;
reg C3_bias_ce0;
reg C3_bias_we0;
reg[3:0] C3_dbias_address0;
reg C3_dbias_ce0;
reg C3_dbias_we0;
reg C5_mapData_ce0;
reg C5_mapData_we0;
reg[13:0] C5_dmapData_address0;
reg C5_dmapData_ce0;
reg C5_dmapData_we0;
reg C5_bias_ce0;
reg C5_bias_we0;
reg[4:0] C5_dbias_address0;
reg C5_dbias_ce0;
reg C5_dbias_we0;
reg output_wei_ce0;
reg output_wei_we0;
reg[8:0] output_dwei_address0;
reg output_dwei_ce0;
reg output_dwei_we0;
reg output_bias_ce0;
reg output_bias_we0;
reg[3:0] output_dbias_address0;
reg output_dbias_ce0;
reg output_dbias_we0;
(* fsm_encoding = "none" *) reg   [106:0] ap_CS_fsm = 107'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_125;
wire   [31:0] grp_fu_446_p2;
reg   [31:0] reg_462;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_265;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_bdd_272;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_bdd_280;
reg    ap_sig_cseq_ST_st36_fsm_35;
reg    ap_sig_bdd_288;
reg    ap_sig_cseq_ST_st46_fsm_45;
reg    ap_sig_bdd_296;
reg    ap_sig_cseq_ST_st50_fsm_49;
reg    ap_sig_bdd_304;
reg    ap_sig_cseq_ST_st64_fsm_63;
reg    ap_sig_bdd_312;
reg    ap_sig_cseq_ST_st74_fsm_73;
reg    ap_sig_bdd_320;
reg    ap_sig_cseq_ST_st78_fsm_77;
reg    ap_sig_bdd_328;
reg    ap_sig_cseq_ST_st90_fsm_89;
reg    ap_sig_bdd_336;
reg    ap_sig_cseq_ST_st101_fsm_100;
reg    ap_sig_bdd_344;
wire   [31:0] grp_fu_442_p2;
reg   [31:0] reg_468;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_bdd_354;
reg    ap_sig_cseq_ST_st27_fsm_26;
reg    ap_sig_bdd_361;
reg    ap_sig_cseq_ST_st41_fsm_40;
reg    ap_sig_bdd_369;
reg    ap_sig_cseq_ST_st55_fsm_54;
reg    ap_sig_bdd_377;
reg    ap_sig_cseq_ST_st69_fsm_68;
reg    ap_sig_bdd_385;
reg    ap_sig_cseq_ST_st83_fsm_82;
reg    ap_sig_bdd_393;
reg    ap_sig_cseq_ST_st95_fsm_94;
reg    ap_sig_bdd_401;
reg    ap_sig_cseq_ST_st106_fsm_105;
reg    ap_sig_bdd_409;
wire   [2:0] i_22_fu_486_p2;
reg   [2:0] i_22_reg_962;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_419;
wire   [63:0] tmp_fu_492_p1;
reg   [63:0] tmp_reg_967;
wire   [0:0] exitcond13_fu_480_p2;
wire   [5:0] C1_mapData_addr1_fu_512_p2;
reg   [5:0] C1_mapData_addr1_reg_973;
wire   [2:0] j_18_fu_524_p2;
reg   [2:0] j_18_reg_981;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_436;
wire   [31:0] C1_mapData_addr3_fu_555_p2;
reg   [31:0] C1_mapData_addr3_reg_986;
wire   [0:0] exitcond12_fu_518_p2;
reg   [2:0] C1_bias_addr_reg_991;
reg   [2:0] C1_dbias_addr_reg_996;
wire   [2:0] k_16_fu_567_p2;
reg   [2:0] k_16_reg_1004;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_456;
reg   [7:0] C1_mapData_addr_reg_1009;
wire   [0:0] exitcond11_fu_561_p2;
reg   [7:0] C1_dmapData_addr_reg_1014;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_471;
reg   [31:0] C1_mapData_load_reg_1024;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_bdd_480;
reg   [31:0] C1_bias_load_reg_1034;
wire   [4:0] i_5_fu_594_p2;
reg   [4:0] i_5_reg_1042;
reg    ap_sig_cseq_ST_st29_fsm_28;
reg    ap_sig_bdd_490;
wire   [63:0] tmp_s_fu_600_p1;
reg   [63:0] tmp_s_reg_1047;
wire   [0:0] exitcond10_fu_588_p2;
wire  signed [9:0] C3_mapData_addr12_cast_fu_634_p1;
reg  signed [9:0] C3_mapData_addr12_cast_reg_1053;
wire   [2:0] j_19_fu_644_p2;
reg   [2:0] j_19_reg_1061;
reg    ap_sig_cseq_ST_st30_fsm_29;
reg    ap_sig_bdd_506;
wire  signed [31:0] C3_mapData_addr14_fu_675_p2;
reg  signed [31:0] C3_mapData_addr14_reg_1066;
wire   [0:0] exitcond9_fu_638_p2;
reg   [3:0] C3_bias_addr_reg_1071;
reg   [3:0] C3_dbias_addr_reg_1076;
wire   [2:0] k_6_fu_687_p2;
reg   [2:0] k_6_reg_1084;
reg    ap_sig_cseq_ST_st31_fsm_30;
reg    ap_sig_bdd_526;
wire  signed [31:0] C3_mapData_addr16_fu_708_p2;
reg  signed [31:0] C3_mapData_addr16_reg_1089;
wire   [0:0] exitcond8_fu_681_p2;
wire   [2:0] m_9_fu_720_p2;
reg   [2:0] m_9_reg_1097;
reg    ap_sig_cseq_ST_st32_fsm_31;
reg    ap_sig_bdd_540;
reg   [11:0] C3_mapData_addr_reg_1102;
wire   [0:0] exitcond7_fu_714_p2;
reg   [11:0] C3_dmapData_addr_reg_1107;
reg    ap_sig_cseq_ST_st33_fsm_32;
reg    ap_sig_bdd_555;
reg   [31:0] C3_mapData_load_reg_1117;
reg    ap_sig_cseq_ST_st43_fsm_42;
reg    ap_sig_bdd_564;
reg   [31:0] C3_bias_load_reg_1127;
wire   [4:0] i_6_fu_747_p2;
reg   [4:0] i_6_reg_1135;
reg    ap_sig_cseq_ST_st57_fsm_56;
reg    ap_sig_bdd_574;
wire   [63:0] tmp_111_fu_753_p1;
reg   [63:0] tmp_111_reg_1140;
wire   [0:0] exitcond6_fu_741_p2;
wire   [9:0] C5_mapData_addr16_cast_fu_765_p1;
reg   [9:0] C5_mapData_addr16_cast_reg_1146;
wire   [4:0] j_20_fu_775_p2;
reg   [4:0] j_20_reg_1154;
reg    ap_sig_cseq_ST_st58_fsm_57;
reg    ap_sig_bdd_590;
wire   [31:0] C5_mapData_addr8_fu_806_p2;
reg   [31:0] C5_mapData_addr8_reg_1159;
wire   [0:0] exitcond5_fu_769_p2;
reg   [4:0] C5_bias_addr_reg_1164;
reg   [4:0] C5_dbias_addr_reg_1169;
wire   [2:0] k_17_fu_818_p2;
reg   [2:0] k_17_reg_1177;
reg    ap_sig_cseq_ST_st59_fsm_58;
reg    ap_sig_bdd_610;
wire   [31:0] C5_mapData_addr10_fu_839_p2;
reg   [31:0] C5_mapData_addr10_reg_1182;
wire   [0:0] exitcond4_fu_812_p2;
wire   [2:0] m_10_fu_851_p2;
reg   [2:0] m_10_reg_1190;
reg    ap_sig_cseq_ST_st60_fsm_59;
reg    ap_sig_bdd_624;
reg   [13:0] C5_mapData_addr_reg_1195;
wire   [0:0] exitcond3_fu_845_p2;
reg   [13:0] C5_dmapData_addr_reg_1200;
reg    ap_sig_cseq_ST_st61_fsm_60;
reg    ap_sig_bdd_639;
reg   [31:0] C5_mapData_load_reg_1210;
reg    ap_sig_cseq_ST_st71_fsm_70;
reg    ap_sig_bdd_648;
reg   [31:0] C5_bias_load_reg_1220;
wire   [3:0] i_7_fu_878_p2;
reg   [3:0] i_7_reg_1228;
reg    ap_sig_cseq_ST_st85_fsm_84;
reg    ap_sig_bdd_658;
wire   [8:0] tmp_174_trn_cast_fu_884_p1;
reg   [8:0] tmp_174_trn_cast_reg_1233;
wire   [0:0] exitcond2_fu_872_p2;
wire   [4:0] j_21_fu_894_p2;
reg   [4:0] j_21_reg_1241;
reg    ap_sig_cseq_ST_st86_fsm_85;
reg    ap_sig_bdd_672;
reg   [8:0] output_wei_addr_reg_1246;
wire   [0:0] exitcond1_fu_888_p2;
reg   [8:0] output_dwei_addr_reg_1251;
reg    ap_sig_cseq_ST_st87_fsm_86;
reg    ap_sig_bdd_687;
reg   [31:0] output_wei_load_reg_1261;
wire   [3:0] i_23_fu_947_p2;
reg   [3:0] i_23_reg_1269;
reg    ap_sig_cseq_ST_st97_fsm_96;
reg    ap_sig_bdd_697;
reg   [3:0] output_bias_addr_reg_1274;
wire   [0:0] exitcond_fu_941_p2;
reg   [3:0] output_dbias_addr_reg_1279;
reg    ap_sig_cseq_ST_st98_fsm_97;
reg    ap_sig_bdd_712;
reg   [31:0] output_bias_load_reg_1289;
reg   [2:0] i_reg_288;
reg    ap_sig_cseq_ST_st28_fsm_27;
reg    ap_sig_bdd_726;
reg   [2:0] j_reg_299;
reg   [2:0] k_reg_310;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_bdd_739;
reg   [4:0] i_1_reg_321;
reg    ap_sig_cseq_ST_st56_fsm_55;
reg    ap_sig_bdd_748;
reg   [2:0] j_1_reg_332;
reg   [2:0] k_1_reg_343;
reg   [2:0] m_reg_354;
reg    ap_sig_cseq_ST_st42_fsm_41;
reg    ap_sig_bdd_768;
reg   [4:0] i_2_reg_365;
reg    ap_sig_cseq_ST_st84_fsm_83;
reg    ap_sig_bdd_777;
reg   [4:0] j_2_reg_376;
reg   [2:0] k_2_reg_387;
reg   [2:0] m_1_reg_398;
reg    ap_sig_cseq_ST_st70_fsm_69;
reg    ap_sig_bdd_796;
reg   [3:0] i_3_reg_409;
reg   [4:0] j_3_reg_420;
reg    ap_sig_cseq_ST_st96_fsm_95;
reg    ap_sig_bdd_812;
reg   [3:0] i_4_reg_431;
reg    ap_sig_cseq_ST_st107_fsm_106;
reg    ap_sig_bdd_821;
wire   [63:0] tmp_204_fu_582_p1;
wire   [63:0] tmp_208_fu_735_p1;
wire   [63:0] tmp_209_fu_866_p1;
wire   [63:0] tmp_207_fu_935_p1;
wire   [63:0] tmp_120_fu_953_p1;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_839;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_bdd_848;
reg    ap_sig_cseq_ST_st35_fsm_34;
reg    ap_sig_bdd_861;
reg    ap_sig_cseq_ST_st49_fsm_48;
reg    ap_sig_bdd_870;
reg    ap_sig_cseq_ST_st63_fsm_62;
reg    ap_sig_bdd_883;
reg    ap_sig_cseq_ST_st77_fsm_76;
reg    ap_sig_bdd_892;
reg    ap_sig_cseq_ST_st89_fsm_88;
reg    ap_sig_bdd_903;
reg    ap_sig_cseq_ST_st100_fsm_99;
reg    ap_sig_bdd_914;
reg   [31:0] grp_fu_442_p0;
wire   [31:0] grp_fu_442_p1;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_925;
reg    ap_sig_cseq_ST_st23_fsm_22;
reg    ap_sig_bdd_932;
reg    ap_sig_cseq_ST_st37_fsm_36;
reg    ap_sig_bdd_939;
reg    ap_sig_cseq_ST_st51_fsm_50;
reg    ap_sig_bdd_946;
reg    ap_sig_cseq_ST_st65_fsm_64;
reg    ap_sig_bdd_953;
reg    ap_sig_cseq_ST_st79_fsm_78;
reg    ap_sig_bdd_960;
reg    ap_sig_cseq_ST_st91_fsm_90;
reg    ap_sig_bdd_967;
reg    ap_sig_cseq_ST_st102_fsm_101;
reg    ap_sig_bdd_974;
reg   [31:0] grp_fu_446_p0;
reg   [31:0] grp_fu_446_p1;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_bdd_994;
reg    ap_sig_cseq_ST_st47_fsm_46;
reg    ap_sig_bdd_1001;
reg    ap_sig_cseq_ST_st75_fsm_74;
reg    ap_sig_bdd_1009;
wire   [4:0] tmp_200_fu_500_p3;
wire   [5:0] tmp_trn_cast_fu_496_p1;
wire   [5:0] p_shl_cast_fu_508_p1;
wire   [5:0] tmp_173_trn_cast_fu_530_p1;
wire   [5:0] C1_mapData_addr2_fu_534_p2;
wire   [7:0] tmp_135_fu_543_p3;
wire   [31:0] C1_mapData_addr2_cast_fu_539_p1;
wire   [31:0] p_shl_fu_551_p1;
wire   [31:0] tmp_186_trn_fu_573_p1;
wire   [31:0] C1_mapData_addr4_fu_577_p2;
wire   [7:0] tmp_201_fu_604_p3;
wire   [5:0] tmp_202_fu_616_p3;
wire   [8:0] p_shl51_cast_fu_612_p1;
wire   [8:0] p_shl52_cast_fu_624_p1;
wire   [8:0] C3_mapData_addr12_fu_628_p2;
wire   [9:0] tmp_178_trn_cast_fu_650_p1;
wire  signed [9:0] C3_mapData_addr13_fu_654_p2;
wire   [11:0] tmp_136_fu_663_p3;
wire  signed [31:0] C3_mapData_addr13_cast_fu_659_p1;
wire  signed [31:0] p_shl43_fu_671_p1;
wire   [31:0] tmp_192_trn_fu_693_p1;
wire  signed [31:0] C3_mapData_addr15_fu_697_p2;
wire   [31:0] tmp_138_fu_702_p2;
wire   [31:0] tmp_194_trn_fu_726_p1;
wire  signed [31:0] C3_mapData_addr17_fu_730_p2;
wire   [8:0] tmp_203_fu_757_p3;
wire   [9:0] tmp_185_trn_cast_fu_781_p1;
wire   [9:0] C5_mapData_addr7_fu_785_p2;
wire   [11:0] tmp_137_fu_794_p3;
wire   [31:0] C5_mapData_addr17_cast_fu_790_p1;
wire   [31:0] p_shl44_fu_802_p1;
wire   [31:0] tmp_193_trn_fu_824_p1;
wire   [31:0] C5_mapData_addr9_fu_828_p2;
wire   [31:0] tmp_139_fu_833_p2;
wire   [31:0] tmp_197_trn_fu_857_p1;
wire   [31:0] C5_mapData_addr11_fu_861_p2;
wire   [7:0] tmp_205_fu_900_p3;
wire   [5:0] tmp_206_fu_912_p3;
wire   [8:0] p_shl58_cast_fu_920_p1;
wire   [8:0] p_shl57_cast_fu_908_p1;
wire   [8:0] output_wei_addr1_fu_924_p2;
wire   [8:0] output_wei_addr2_fu_930_p2;
wire    grp_fu_442_ce;
wire    grp_fu_446_ce;
reg   [106:0] ap_NS_fsm;


dateport_fsub_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dateport_fsub_32ns_32ns_32_5_full_dsp_U105(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_442_p0 ),
    .din1( grp_fu_442_p1 ),
    .ce( grp_fu_442_ce ),
    .dout( grp_fu_442_p2 )
);

dateport_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dateport_fmul_32ns_32ns_32_4_max_dsp_U106(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_446_p0 ),
    .din1( grp_fu_446_p1 ),
    .ce( grp_fu_446_ce ),
    .dout( grp_fu_446_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond13_fu_480_p2 == ap_const_lv1_0))) begin
        i_1_reg_321 <= ap_const_lv5_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_55)) begin
        i_1_reg_321 <= i_5_reg_1042;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) & ~(ap_const_lv1_0 == exitcond10_fu_588_p2))) begin
        i_2_reg_365 <= ap_const_lv5_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st84_fsm_83)) begin
        i_2_reg_365 <= i_6_reg_1135;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st86_fsm_85) & ~(ap_const_lv1_0 == exitcond1_fu_888_p2))) begin
        i_3_reg_409 <= i_7_reg_1228;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_56) & ~(ap_const_lv1_0 == exitcond6_fu_741_p2))) begin
        i_3_reg_409 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st85_fsm_84) & ~(ap_const_lv1_0 == exitcond2_fu_872_p2))) begin
        i_4_reg_431 <= ap_const_lv4_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st107_fsm_106)) begin
        i_4_reg_431 <= i_23_reg_1269;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        i_reg_288 <= i_22_reg_962;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_288 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30) & ~(ap_const_lv1_0 == exitcond8_fu_681_p2))) begin
        j_1_reg_332 <= j_19_reg_1061;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) & (ap_const_lv1_0 == exitcond10_fu_588_p2))) begin
        j_1_reg_332 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st59_fsm_58) & ~(ap_const_lv1_0 == exitcond4_fu_812_p2))) begin
        j_2_reg_376 <= j_20_reg_1154;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_56) & (ap_const_lv1_0 == exitcond6_fu_741_p2))) begin
        j_2_reg_376 <= ap_const_lv5_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st85_fsm_84) & (ap_const_lv1_0 == exitcond2_fu_872_p2))) begin
        j_3_reg_420 <= ap_const_lv5_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st96_fsm_95)) begin
        j_3_reg_420 <= j_21_reg_1241;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == exitcond11_fu_561_p2))) begin
        j_reg_299 <= j_18_reg_981;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond13_fu_480_p2 == ap_const_lv1_0))) begin
        j_reg_299 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) & ~(ap_const_lv1_0 == exitcond7_fu_714_p2))) begin
        k_1_reg_343 <= k_6_reg_1084;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29) & (ap_const_lv1_0 == exitcond9_fu_638_p2))) begin
        k_1_reg_343 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st60_fsm_59) & ~(ap_const_lv1_0 == exitcond3_fu_845_p2))) begin
        k_2_reg_387 <= k_17_reg_1177;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_57) & (ap_const_lv1_0 == exitcond5_fu_769_p2))) begin
        k_2_reg_387 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond12_fu_518_p2))) begin
        k_reg_310 <= ap_const_lv3_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        k_reg_310 <= k_16_reg_1004;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st59_fsm_58) & (ap_const_lv1_0 == exitcond4_fu_812_p2))) begin
        m_1_reg_398 <= ap_const_lv3_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st70_fsm_69)) begin
        m_1_reg_398 <= m_10_reg_1190;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30) & (ap_const_lv1_0 == exitcond8_fu_681_p2))) begin
        m_reg_354 <= ap_const_lv3_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        m_reg_354 <= m_9_reg_1097;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == exitcond12_fu_518_p2))) begin
        C1_bias_addr_reg_991 <= tmp_reg_967;
        C1_dbias_addr_reg_996 <= tmp_reg_967;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        C1_bias_load_reg_1034 <= C1_bias_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == exitcond11_fu_561_p2))) begin
        C1_dmapData_addr_reg_1014 <= tmp_204_fu_582_p1;
        C1_mapData_addr_reg_1009 <= tmp_204_fu_582_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond13_fu_480_p2 == ap_const_lv1_0))) begin
        C1_mapData_addr1_reg_973 <= C1_mapData_addr1_fu_512_p2;
        tmp_reg_967[2 : 0] <= tmp_fu_492_p1[2 : 0];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond12_fu_518_p2))) begin
        C1_mapData_addr3_reg_986 <= C1_mapData_addr3_fu_555_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        C1_mapData_load_reg_1024 <= C1_mapData_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29) & ~(ap_const_lv1_0 == exitcond9_fu_638_p2))) begin
        C3_bias_addr_reg_1071 <= tmp_s_reg_1047;
        C3_dbias_addr_reg_1076 <= tmp_s_reg_1047;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_49)) begin
        C3_bias_load_reg_1127 <= C3_bias_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) & (ap_const_lv1_0 == exitcond7_fu_714_p2))) begin
        C3_dmapData_addr_reg_1107 <= tmp_208_fu_735_p1;
        C3_mapData_addr_reg_1102 <= tmp_208_fu_735_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) & (ap_const_lv1_0 == exitcond10_fu_588_p2))) begin
        C3_mapData_addr12_cast_reg_1053[9 : 1] <= C3_mapData_addr12_cast_fu_634_p1[9 : 1];
        tmp_s_reg_1047[4 : 0] <= tmp_s_fu_600_p1[4 : 0];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29) & (ap_const_lv1_0 == exitcond9_fu_638_p2))) begin
        C3_mapData_addr14_reg_1066 <= C3_mapData_addr14_fu_675_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30) & (ap_const_lv1_0 == exitcond8_fu_681_p2))) begin
        C3_mapData_addr16_reg_1089 <= C3_mapData_addr16_fu_708_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_35)) begin
        C3_mapData_load_reg_1117 <= C3_mapData_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_57) & ~(ap_const_lv1_0 == exitcond5_fu_769_p2))) begin
        C5_bias_addr_reg_1164 <= tmp_111_reg_1140;
        C5_dbias_addr_reg_1169 <= tmp_111_reg_1140;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st78_fsm_77)) begin
        C5_bias_load_reg_1220 <= C5_bias_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st60_fsm_59) & (ap_const_lv1_0 == exitcond3_fu_845_p2))) begin
        C5_dmapData_addr_reg_1200 <= tmp_209_fu_866_p1;
        C5_mapData_addr_reg_1195 <= tmp_209_fu_866_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st59_fsm_58) & (ap_const_lv1_0 == exitcond4_fu_812_p2))) begin
        C5_mapData_addr10_reg_1182 <= C5_mapData_addr10_fu_839_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_56) & (ap_const_lv1_0 == exitcond6_fu_741_p2))) begin
        C5_mapData_addr16_cast_reg_1146[8 : 4] <= C5_mapData_addr16_cast_fu_765_p1[8 : 4];
        tmp_111_reg_1140[4 : 0] <= tmp_111_fu_753_p1[4 : 0];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_57) & (ap_const_lv1_0 == exitcond5_fu_769_p2))) begin
        C5_mapData_addr8_reg_1159 <= C5_mapData_addr8_fu_806_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st64_fsm_63)) begin
        C5_mapData_load_reg_1210 <= C5_mapData_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_22_reg_962 <= i_22_fu_486_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st97_fsm_96)) begin
        i_23_reg_1269 <= i_23_fu_947_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        i_5_reg_1042 <= i_5_fu_594_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_56)) begin
        i_6_reg_1135 <= i_6_fu_747_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st85_fsm_84)) begin
        i_7_reg_1228 <= i_7_fu_878_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        j_18_reg_981 <= j_18_fu_524_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29)) begin
        j_19_reg_1061 <= j_19_fu_644_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_57)) begin
        j_20_reg_1154 <= j_20_fu_775_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st86_fsm_85)) begin
        j_21_reg_1241 <= j_21_fu_894_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        k_16_reg_1004 <= k_16_fu_567_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st59_fsm_58)) begin
        k_17_reg_1177 <= k_17_fu_818_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        k_6_reg_1084 <= k_6_fu_687_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st60_fsm_59)) begin
        m_10_reg_1190 <= m_10_fu_851_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        m_9_reg_1097 <= m_9_fu_720_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st97_fsm_96) & (ap_const_lv1_0 == exitcond_fu_941_p2))) begin
        output_bias_addr_reg_1274 <= tmp_120_fu_953_p1;
        output_dbias_addr_reg_1279 <= tmp_120_fu_953_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st101_fsm_100)) begin
        output_bias_load_reg_1289 <= output_bias_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st86_fsm_85) & (ap_const_lv1_0 == exitcond1_fu_888_p2))) begin
        output_dwei_addr_reg_1251 <= tmp_207_fu_935_p1;
        output_wei_addr_reg_1246 <= tmp_207_fu_935_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st90_fsm_89)) begin
        output_wei_load_reg_1261 <= output_wei_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17) | (ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) | (ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_35) | (ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_45) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_49) | (ap_const_logic_1 == ap_sig_cseq_ST_st64_fsm_63) | (ap_const_logic_1 == ap_sig_cseq_ST_st74_fsm_73) | (ap_const_logic_1 == ap_sig_cseq_ST_st78_fsm_77) | (ap_const_logic_1 == ap_sig_cseq_ST_st90_fsm_89) | (ap_const_logic_1 == ap_sig_cseq_ST_st101_fsm_100))) begin
        reg_462 <= grp_fu_446_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12) | (ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26) | (ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_54) | (ap_const_logic_1 == ap_sig_cseq_ST_st69_fsm_68) | (ap_const_logic_1 == ap_sig_cseq_ST_st83_fsm_82) | (ap_const_logic_1 == ap_sig_cseq_ST_st95_fsm_94) | (ap_const_logic_1 == ap_sig_cseq_ST_st106_fsm_105))) begin
        reg_468 <= grp_fu_442_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st85_fsm_84) & (ap_const_lv1_0 == exitcond2_fu_872_p2))) begin
        tmp_174_trn_cast_reg_1233[3 : 0] <= tmp_174_trn_cast_fu_884_p1[3 : 0];
    end
end

/// C1_bias_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st28_fsm_27 or ap_sig_cseq_ST_st21_fsm_20)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27) | (ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20))) begin
        C1_bias_ce0 = ap_const_logic_1;
    end else begin
        C1_bias_ce0 = ap_const_logic_0;
    end
end

/// C1_bias_we0 assign process. ///
always @ (ap_sig_cseq_ST_st28_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        C1_bias_we0 = ap_const_logic_1;
    end else begin
        C1_bias_we0 = ap_const_logic_0;
    end
end

/// C1_dbias_address0 assign process. ///
always @ (tmp_reg_967 or ap_sig_cseq_ST_st3_fsm_2 or C1_dbias_addr_reg_996 or ap_sig_cseq_ST_st15_fsm_14)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        C1_dbias_address0 = C1_dbias_addr_reg_996;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        C1_dbias_address0 = tmp_reg_967;
    end else begin
        C1_dbias_address0 = 'bx;
    end
end

/// C1_dbias_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st15_fsm_14)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14))) begin
        C1_dbias_ce0 = ap_const_logic_1;
    end else begin
        C1_dbias_ce0 = ap_const_logic_0;
    end
end

/// C1_dbias_we0 assign process. ///
always @ (ap_sig_cseq_ST_st15_fsm_14)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        C1_dbias_we0 = ap_const_logic_1;
    end else begin
        C1_dbias_we0 = ap_const_logic_0;
    end
end

/// C1_dmapData_address0 assign process. ///
always @ (ap_sig_cseq_ST_st4_fsm_3 or C1_dmapData_addr_reg_1014 or ap_sig_cseq_ST_st5_fsm_4 or tmp_204_fu_582_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        C1_dmapData_address0 = C1_dmapData_addr_reg_1014;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        C1_dmapData_address0 = tmp_204_fu_582_p1;
    end else begin
        C1_dmapData_address0 = 'bx;
    end
end

/// C1_dmapData_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st5_fsm_4)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4))) begin
        C1_dmapData_ce0 = ap_const_logic_1;
    end else begin
        C1_dmapData_ce0 = ap_const_logic_0;
    end
end

/// C1_dmapData_we0 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        C1_dmapData_we0 = ap_const_logic_1;
    end else begin
        C1_dmapData_we0 = ap_const_logic_0;
    end
end

/// C1_mapData_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st14_fsm_13 or ap_sig_cseq_ST_st7_fsm_6)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6))) begin
        C1_mapData_ce0 = ap_const_logic_1;
    end else begin
        C1_mapData_ce0 = ap_const_logic_0;
    end
end

/// C1_mapData_we0 assign process. ///
always @ (ap_sig_cseq_ST_st14_fsm_13)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        C1_mapData_we0 = ap_const_logic_1;
    end else begin
        C1_mapData_we0 = ap_const_logic_0;
    end
end

/// C3_bias_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st56_fsm_55 or ap_sig_cseq_ST_st49_fsm_48)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_55) | (ap_const_logic_1 == ap_sig_cseq_ST_st49_fsm_48))) begin
        C3_bias_ce0 = ap_const_logic_1;
    end else begin
        C3_bias_ce0 = ap_const_logic_0;
    end
end

/// C3_bias_we0 assign process. ///
always @ (ap_sig_cseq_ST_st56_fsm_55)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_55)) begin
        C3_bias_we0 = ap_const_logic_1;
    end else begin
        C3_bias_we0 = ap_const_logic_0;
    end
end

/// C3_dbias_address0 assign process. ///
always @ (tmp_s_reg_1047 or ap_sig_cseq_ST_st30_fsm_29 or C3_dbias_addr_reg_1076 or ap_sig_cseq_ST_st43_fsm_42)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_42)) begin
        C3_dbias_address0 = C3_dbias_addr_reg_1076;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29)) begin
        C3_dbias_address0 = tmp_s_reg_1047;
    end else begin
        C3_dbias_address0 = 'bx;
    end
end

/// C3_dbias_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st30_fsm_29 or ap_sig_cseq_ST_st43_fsm_42)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29) | (ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_42))) begin
        C3_dbias_ce0 = ap_const_logic_1;
    end else begin
        C3_dbias_ce0 = ap_const_logic_0;
    end
end

/// C3_dbias_we0 assign process. ///
always @ (ap_sig_cseq_ST_st43_fsm_42)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_42)) begin
        C3_dbias_we0 = ap_const_logic_1;
    end else begin
        C3_dbias_we0 = ap_const_logic_0;
    end
end

/// C3_dmapData_address0 assign process. ///
always @ (ap_sig_cseq_ST_st32_fsm_31 or C3_dmapData_addr_reg_1107 or ap_sig_cseq_ST_st33_fsm_32 or tmp_208_fu_735_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        C3_dmapData_address0 = C3_dmapData_addr_reg_1107;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        C3_dmapData_address0 = tmp_208_fu_735_p1;
    end else begin
        C3_dmapData_address0 = 'bx;
    end
end

/// C3_dmapData_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st32_fsm_31 or ap_sig_cseq_ST_st33_fsm_32)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) | (ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32))) begin
        C3_dmapData_ce0 = ap_const_logic_1;
    end else begin
        C3_dmapData_ce0 = ap_const_logic_0;
    end
end

/// C3_dmapData_we0 assign process. ///
always @ (ap_sig_cseq_ST_st33_fsm_32)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        C3_dmapData_we0 = ap_const_logic_1;
    end else begin
        C3_dmapData_we0 = ap_const_logic_0;
    end
end

/// C3_mapData_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st42_fsm_41 or ap_sig_cseq_ST_st35_fsm_34)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) | (ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_34))) begin
        C3_mapData_ce0 = ap_const_logic_1;
    end else begin
        C3_mapData_ce0 = ap_const_logic_0;
    end
end

/// C3_mapData_we0 assign process. ///
always @ (ap_sig_cseq_ST_st42_fsm_41)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        C3_mapData_we0 = ap_const_logic_1;
    end else begin
        C3_mapData_we0 = ap_const_logic_0;
    end
end

/// C5_bias_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st84_fsm_83 or ap_sig_cseq_ST_st77_fsm_76)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st84_fsm_83) | (ap_const_logic_1 == ap_sig_cseq_ST_st77_fsm_76))) begin
        C5_bias_ce0 = ap_const_logic_1;
    end else begin
        C5_bias_ce0 = ap_const_logic_0;
    end
end

/// C5_bias_we0 assign process. ///
always @ (ap_sig_cseq_ST_st84_fsm_83)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st84_fsm_83)) begin
        C5_bias_we0 = ap_const_logic_1;
    end else begin
        C5_bias_we0 = ap_const_logic_0;
    end
end

/// C5_dbias_address0 assign process. ///
always @ (tmp_111_reg_1140 or ap_sig_cseq_ST_st58_fsm_57 or C5_dbias_addr_reg_1169 or ap_sig_cseq_ST_st71_fsm_70)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st71_fsm_70)) begin
        C5_dbias_address0 = C5_dbias_addr_reg_1169;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_57)) begin
        C5_dbias_address0 = tmp_111_reg_1140;
    end else begin
        C5_dbias_address0 = 'bx;
    end
end

/// C5_dbias_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st58_fsm_57 or ap_sig_cseq_ST_st71_fsm_70)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_57) | (ap_const_logic_1 == ap_sig_cseq_ST_st71_fsm_70))) begin
        C5_dbias_ce0 = ap_const_logic_1;
    end else begin
        C5_dbias_ce0 = ap_const_logic_0;
    end
end

/// C5_dbias_we0 assign process. ///
always @ (ap_sig_cseq_ST_st71_fsm_70)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st71_fsm_70)) begin
        C5_dbias_we0 = ap_const_logic_1;
    end else begin
        C5_dbias_we0 = ap_const_logic_0;
    end
end

/// C5_dmapData_address0 assign process. ///
always @ (ap_sig_cseq_ST_st60_fsm_59 or C5_dmapData_addr_reg_1200 or ap_sig_cseq_ST_st61_fsm_60 or tmp_209_fu_866_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st61_fsm_60)) begin
        C5_dmapData_address0 = C5_dmapData_addr_reg_1200;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st60_fsm_59)) begin
        C5_dmapData_address0 = tmp_209_fu_866_p1;
    end else begin
        C5_dmapData_address0 = 'bx;
    end
end

/// C5_dmapData_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st60_fsm_59 or ap_sig_cseq_ST_st61_fsm_60)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st60_fsm_59) | (ap_const_logic_1 == ap_sig_cseq_ST_st61_fsm_60))) begin
        C5_dmapData_ce0 = ap_const_logic_1;
    end else begin
        C5_dmapData_ce0 = ap_const_logic_0;
    end
end

/// C5_dmapData_we0 assign process. ///
always @ (ap_sig_cseq_ST_st61_fsm_60)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st61_fsm_60)) begin
        C5_dmapData_we0 = ap_const_logic_1;
    end else begin
        C5_dmapData_we0 = ap_const_logic_0;
    end
end

/// C5_mapData_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st70_fsm_69 or ap_sig_cseq_ST_st63_fsm_62)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st70_fsm_69) | (ap_const_logic_1 == ap_sig_cseq_ST_st63_fsm_62))) begin
        C5_mapData_ce0 = ap_const_logic_1;
    end else begin
        C5_mapData_ce0 = ap_const_logic_0;
    end
end

/// C5_mapData_we0 assign process. ///
always @ (ap_sig_cseq_ST_st70_fsm_69)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st70_fsm_69)) begin
        C5_mapData_we0 = ap_const_logic_1;
    end else begin
        C5_mapData_we0 = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st97_fsm_96 or exitcond_fu_941_p2)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st97_fsm_96) & ~(ap_const_lv1_0 == exitcond_fu_941_p2)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st97_fsm_96 or exitcond_fu_941_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st97_fsm_96) & ~(ap_const_lv1_0 == exitcond_fu_941_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st100_fsm_99 assign process. ///
always @ (ap_sig_bdd_914)
begin
    if (ap_sig_bdd_914) begin
        ap_sig_cseq_ST_st100_fsm_99 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st100_fsm_99 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st101_fsm_100 assign process. ///
always @ (ap_sig_bdd_344)
begin
    if (ap_sig_bdd_344) begin
        ap_sig_cseq_ST_st101_fsm_100 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st101_fsm_100 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st102_fsm_101 assign process. ///
always @ (ap_sig_bdd_974)
begin
    if (ap_sig_bdd_974) begin
        ap_sig_cseq_ST_st102_fsm_101 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st102_fsm_101 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st106_fsm_105 assign process. ///
always @ (ap_sig_bdd_409)
begin
    if (ap_sig_bdd_409) begin
        ap_sig_cseq_ST_st106_fsm_105 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st106_fsm_105 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st107_fsm_106 assign process. ///
always @ (ap_sig_bdd_821)
begin
    if (ap_sig_bdd_821) begin
        ap_sig_cseq_ST_st107_fsm_106 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st107_fsm_106 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st13_fsm_12 assign process. ///
always @ (ap_sig_bdd_354)
begin
    if (ap_sig_bdd_354) begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st14_fsm_13 assign process. ///
always @ (ap_sig_bdd_739)
begin
    if (ap_sig_bdd_739) begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st15_fsm_14 assign process. ///
always @ (ap_sig_bdd_480)
begin
    if (ap_sig_bdd_480) begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st18_fsm_17 assign process. ///
always @ (ap_sig_bdd_272)
begin
    if (ap_sig_bdd_272) begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st19_fsm_18 assign process. ///
always @ (ap_sig_bdd_994)
begin
    if (ap_sig_bdd_994) begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_125)
begin
    if (ap_sig_bdd_125) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st21_fsm_20 assign process. ///
always @ (ap_sig_bdd_848)
begin
    if (ap_sig_bdd_848) begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st22_fsm_21 assign process. ///
always @ (ap_sig_bdd_280)
begin
    if (ap_sig_bdd_280) begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st23_fsm_22 assign process. ///
always @ (ap_sig_bdd_932)
begin
    if (ap_sig_bdd_932) begin
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st27_fsm_26 assign process. ///
always @ (ap_sig_bdd_361)
begin
    if (ap_sig_bdd_361) begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st28_fsm_27 assign process. ///
always @ (ap_sig_bdd_726)
begin
    if (ap_sig_bdd_726) begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st29_fsm_28 assign process. ///
always @ (ap_sig_bdd_490)
begin
    if (ap_sig_bdd_490) begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_419)
begin
    if (ap_sig_bdd_419) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st30_fsm_29 assign process. ///
always @ (ap_sig_bdd_506)
begin
    if (ap_sig_bdd_506) begin
        ap_sig_cseq_ST_st30_fsm_29 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st30_fsm_29 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st31_fsm_30 assign process. ///
always @ (ap_sig_bdd_526)
begin
    if (ap_sig_bdd_526) begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st32_fsm_31 assign process. ///
always @ (ap_sig_bdd_540)
begin
    if (ap_sig_bdd_540) begin
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st33_fsm_32 assign process. ///
always @ (ap_sig_bdd_555)
begin
    if (ap_sig_bdd_555) begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st35_fsm_34 assign process. ///
always @ (ap_sig_bdd_861)
begin
    if (ap_sig_bdd_861) begin
        ap_sig_cseq_ST_st35_fsm_34 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st35_fsm_34 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st36_fsm_35 assign process. ///
always @ (ap_sig_bdd_288)
begin
    if (ap_sig_bdd_288) begin
        ap_sig_cseq_ST_st36_fsm_35 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st36_fsm_35 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st37_fsm_36 assign process. ///
always @ (ap_sig_bdd_939)
begin
    if (ap_sig_bdd_939) begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_436)
begin
    if (ap_sig_bdd_436) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st41_fsm_40 assign process. ///
always @ (ap_sig_bdd_369)
begin
    if (ap_sig_bdd_369) begin
        ap_sig_cseq_ST_st41_fsm_40 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st41_fsm_40 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st42_fsm_41 assign process. ///
always @ (ap_sig_bdd_768)
begin
    if (ap_sig_bdd_768) begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st43_fsm_42 assign process. ///
always @ (ap_sig_bdd_564)
begin
    if (ap_sig_bdd_564) begin
        ap_sig_cseq_ST_st43_fsm_42 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st43_fsm_42 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st46_fsm_45 assign process. ///
always @ (ap_sig_bdd_296)
begin
    if (ap_sig_bdd_296) begin
        ap_sig_cseq_ST_st46_fsm_45 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st46_fsm_45 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st47_fsm_46 assign process. ///
always @ (ap_sig_bdd_1001)
begin
    if (ap_sig_bdd_1001) begin
        ap_sig_cseq_ST_st47_fsm_46 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st47_fsm_46 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st49_fsm_48 assign process. ///
always @ (ap_sig_bdd_870)
begin
    if (ap_sig_bdd_870) begin
        ap_sig_cseq_ST_st49_fsm_48 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st49_fsm_48 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_456)
begin
    if (ap_sig_bdd_456) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st50_fsm_49 assign process. ///
always @ (ap_sig_bdd_304)
begin
    if (ap_sig_bdd_304) begin
        ap_sig_cseq_ST_st50_fsm_49 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st50_fsm_49 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st51_fsm_50 assign process. ///
always @ (ap_sig_bdd_946)
begin
    if (ap_sig_bdd_946) begin
        ap_sig_cseq_ST_st51_fsm_50 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st51_fsm_50 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st55_fsm_54 assign process. ///
always @ (ap_sig_bdd_377)
begin
    if (ap_sig_bdd_377) begin
        ap_sig_cseq_ST_st55_fsm_54 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st55_fsm_54 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st56_fsm_55 assign process. ///
always @ (ap_sig_bdd_748)
begin
    if (ap_sig_bdd_748) begin
        ap_sig_cseq_ST_st56_fsm_55 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st56_fsm_55 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st57_fsm_56 assign process. ///
always @ (ap_sig_bdd_574)
begin
    if (ap_sig_bdd_574) begin
        ap_sig_cseq_ST_st57_fsm_56 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st57_fsm_56 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st58_fsm_57 assign process. ///
always @ (ap_sig_bdd_590)
begin
    if (ap_sig_bdd_590) begin
        ap_sig_cseq_ST_st58_fsm_57 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st58_fsm_57 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st59_fsm_58 assign process. ///
always @ (ap_sig_bdd_610)
begin
    if (ap_sig_bdd_610) begin
        ap_sig_cseq_ST_st59_fsm_58 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st59_fsm_58 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_471)
begin
    if (ap_sig_bdd_471) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st60_fsm_59 assign process. ///
always @ (ap_sig_bdd_624)
begin
    if (ap_sig_bdd_624) begin
        ap_sig_cseq_ST_st60_fsm_59 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st60_fsm_59 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st61_fsm_60 assign process. ///
always @ (ap_sig_bdd_639)
begin
    if (ap_sig_bdd_639) begin
        ap_sig_cseq_ST_st61_fsm_60 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st61_fsm_60 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st63_fsm_62 assign process. ///
always @ (ap_sig_bdd_883)
begin
    if (ap_sig_bdd_883) begin
        ap_sig_cseq_ST_st63_fsm_62 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st63_fsm_62 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st64_fsm_63 assign process. ///
always @ (ap_sig_bdd_312)
begin
    if (ap_sig_bdd_312) begin
        ap_sig_cseq_ST_st64_fsm_63 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st64_fsm_63 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st65_fsm_64 assign process. ///
always @ (ap_sig_bdd_953)
begin
    if (ap_sig_bdd_953) begin
        ap_sig_cseq_ST_st65_fsm_64 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st65_fsm_64 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st69_fsm_68 assign process. ///
always @ (ap_sig_bdd_385)
begin
    if (ap_sig_bdd_385) begin
        ap_sig_cseq_ST_st69_fsm_68 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st69_fsm_68 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st70_fsm_69 assign process. ///
always @ (ap_sig_bdd_796)
begin
    if (ap_sig_bdd_796) begin
        ap_sig_cseq_ST_st70_fsm_69 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st70_fsm_69 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st71_fsm_70 assign process. ///
always @ (ap_sig_bdd_648)
begin
    if (ap_sig_bdd_648) begin
        ap_sig_cseq_ST_st71_fsm_70 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st71_fsm_70 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st74_fsm_73 assign process. ///
always @ (ap_sig_bdd_320)
begin
    if (ap_sig_bdd_320) begin
        ap_sig_cseq_ST_st74_fsm_73 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st74_fsm_73 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st75_fsm_74 assign process. ///
always @ (ap_sig_bdd_1009)
begin
    if (ap_sig_bdd_1009) begin
        ap_sig_cseq_ST_st75_fsm_74 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st75_fsm_74 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st77_fsm_76 assign process. ///
always @ (ap_sig_bdd_892)
begin
    if (ap_sig_bdd_892) begin
        ap_sig_cseq_ST_st77_fsm_76 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st77_fsm_76 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st78_fsm_77 assign process. ///
always @ (ap_sig_bdd_328)
begin
    if (ap_sig_bdd_328) begin
        ap_sig_cseq_ST_st78_fsm_77 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st78_fsm_77 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st79_fsm_78 assign process. ///
always @ (ap_sig_bdd_960)
begin
    if (ap_sig_bdd_960) begin
        ap_sig_cseq_ST_st79_fsm_78 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st79_fsm_78 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_839)
begin
    if (ap_sig_bdd_839) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st83_fsm_82 assign process. ///
always @ (ap_sig_bdd_393)
begin
    if (ap_sig_bdd_393) begin
        ap_sig_cseq_ST_st83_fsm_82 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st83_fsm_82 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st84_fsm_83 assign process. ///
always @ (ap_sig_bdd_777)
begin
    if (ap_sig_bdd_777) begin
        ap_sig_cseq_ST_st84_fsm_83 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st84_fsm_83 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st85_fsm_84 assign process. ///
always @ (ap_sig_bdd_658)
begin
    if (ap_sig_bdd_658) begin
        ap_sig_cseq_ST_st85_fsm_84 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st85_fsm_84 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st86_fsm_85 assign process. ///
always @ (ap_sig_bdd_672)
begin
    if (ap_sig_bdd_672) begin
        ap_sig_cseq_ST_st86_fsm_85 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st86_fsm_85 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st87_fsm_86 assign process. ///
always @ (ap_sig_bdd_687)
begin
    if (ap_sig_bdd_687) begin
        ap_sig_cseq_ST_st87_fsm_86 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st87_fsm_86 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st89_fsm_88 assign process. ///
always @ (ap_sig_bdd_903)
begin
    if (ap_sig_bdd_903) begin
        ap_sig_cseq_ST_st89_fsm_88 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st89_fsm_88 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_7 assign process. ///
always @ (ap_sig_bdd_265)
begin
    if (ap_sig_bdd_265) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st90_fsm_89 assign process. ///
always @ (ap_sig_bdd_336)
begin
    if (ap_sig_bdd_336) begin
        ap_sig_cseq_ST_st90_fsm_89 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st90_fsm_89 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st91_fsm_90 assign process. ///
always @ (ap_sig_bdd_967)
begin
    if (ap_sig_bdd_967) begin
        ap_sig_cseq_ST_st91_fsm_90 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st91_fsm_90 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st95_fsm_94 assign process. ///
always @ (ap_sig_bdd_401)
begin
    if (ap_sig_bdd_401) begin
        ap_sig_cseq_ST_st95_fsm_94 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st95_fsm_94 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st96_fsm_95 assign process. ///
always @ (ap_sig_bdd_812)
begin
    if (ap_sig_bdd_812) begin
        ap_sig_cseq_ST_st96_fsm_95 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st96_fsm_95 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st97_fsm_96 assign process. ///
always @ (ap_sig_bdd_697)
begin
    if (ap_sig_bdd_697) begin
        ap_sig_cseq_ST_st97_fsm_96 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st97_fsm_96 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st98_fsm_97 assign process. ///
always @ (ap_sig_bdd_712)
begin
    if (ap_sig_bdd_712) begin
        ap_sig_cseq_ST_st98_fsm_97 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st98_fsm_97 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st9_fsm_8 assign process. ///
always @ (ap_sig_bdd_925)
begin
    if (ap_sig_bdd_925) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

/// grp_fu_442_p0 assign process. ///
always @ (C1_mapData_load_reg_1024 or C1_bias_load_reg_1034 or C3_mapData_load_reg_1117 or C3_bias_load_reg_1127 or C5_mapData_load_reg_1210 or C5_bias_load_reg_1220 or output_wei_load_reg_1261 or output_bias_load_reg_1289 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st23_fsm_22 or ap_sig_cseq_ST_st37_fsm_36 or ap_sig_cseq_ST_st51_fsm_50 or ap_sig_cseq_ST_st65_fsm_64 or ap_sig_cseq_ST_st79_fsm_78 or ap_sig_cseq_ST_st91_fsm_90 or ap_sig_cseq_ST_st102_fsm_101)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st102_fsm_101)) begin
        grp_fu_442_p0 = output_bias_load_reg_1289;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st91_fsm_90)) begin
        grp_fu_442_p0 = output_wei_load_reg_1261;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_78)) begin
        grp_fu_442_p0 = C5_bias_load_reg_1220;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st65_fsm_64)) begin
        grp_fu_442_p0 = C5_mapData_load_reg_1210;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_50)) begin
        grp_fu_442_p0 = C3_bias_load_reg_1127;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        grp_fu_442_p0 = C3_mapData_load_reg_1117;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_fu_442_p0 = C1_bias_load_reg_1034;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        grp_fu_442_p0 = C1_mapData_load_reg_1024;
    end else begin
        grp_fu_442_p0 = 'bx;
    end
end

/// grp_fu_446_p0 assign process. ///
always @ (C1_dmapData_q0 or C1_dbias_q0 or C3_dmapData_q0 or C3_dbias_q0 or C5_dmapData_q0 or C5_dbias_q0 or output_dwei_q0 or output_dbias_q0 or reg_462 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st15_fsm_14 or ap_sig_cseq_ST_st33_fsm_32 or ap_sig_cseq_ST_st43_fsm_42 or ap_sig_cseq_ST_st61_fsm_60 or ap_sig_cseq_ST_st71_fsm_70 or ap_sig_cseq_ST_st87_fsm_86 or ap_sig_cseq_ST_st98_fsm_97 or ap_sig_cseq_ST_st19_fsm_18 or ap_sig_cseq_ST_st47_fsm_46 or ap_sig_cseq_ST_st75_fsm_74)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st98_fsm_97)) begin
        grp_fu_446_p0 = output_dbias_q0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st87_fsm_86)) begin
        grp_fu_446_p0 = output_dwei_q0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st71_fsm_70)) begin
        grp_fu_446_p0 = C5_dbias_q0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st61_fsm_60)) begin
        grp_fu_446_p0 = C5_dmapData_q0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_42)) begin
        grp_fu_446_p0 = C3_dbias_q0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        grp_fu_446_p0 = C3_dmapData_q0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18) | (ap_const_logic_1 == ap_sig_cseq_ST_st47_fsm_46) | (ap_const_logic_1 == ap_sig_cseq_ST_st75_fsm_74))) begin
        grp_fu_446_p0 = reg_462;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        grp_fu_446_p0 = C1_dbias_q0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        grp_fu_446_p0 = C1_dmapData_q0;
    end else begin
        grp_fu_446_p0 = 'bx;
    end
end

/// grp_fu_446_p1 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st15_fsm_14 or ap_sig_cseq_ST_st33_fsm_32 or ap_sig_cseq_ST_st43_fsm_42 or ap_sig_cseq_ST_st61_fsm_60 or ap_sig_cseq_ST_st71_fsm_70 or ap_sig_cseq_ST_st87_fsm_86 or ap_sig_cseq_ST_st98_fsm_97 or ap_sig_cseq_ST_st19_fsm_18 or ap_sig_cseq_ST_st47_fsm_46 or ap_sig_cseq_ST_st75_fsm_74)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st87_fsm_86) | (ap_const_logic_1 == ap_sig_cseq_ST_st98_fsm_97))) begin
        grp_fu_446_p1 = ap_const_lv32_37A7C5AD;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18) | (ap_const_logic_1 == ap_sig_cseq_ST_st47_fsm_46) | (ap_const_logic_1 == ap_sig_cseq_ST_st75_fsm_74))) begin
        grp_fu_446_p1 = ap_const_lv32_3CA3D70A;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14) | (ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_42) | (ap_const_logic_1 == ap_sig_cseq_ST_st71_fsm_70))) begin
        grp_fu_446_p1 = ap_const_lv32_3CCCCCCD;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32) | (ap_const_logic_1 == ap_sig_cseq_ST_st61_fsm_60))) begin
        grp_fu_446_p1 = ap_const_lv32_3827C5AD;
    end else begin
        grp_fu_446_p1 = 'bx;
    end
end

/// output_bias_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st107_fsm_106 or ap_sig_cseq_ST_st100_fsm_99)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st107_fsm_106) | (ap_const_logic_1 == ap_sig_cseq_ST_st100_fsm_99))) begin
        output_bias_ce0 = ap_const_logic_1;
    end else begin
        output_bias_ce0 = ap_const_logic_0;
    end
end

/// output_bias_we0 assign process. ///
always @ (ap_sig_cseq_ST_st107_fsm_106)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st107_fsm_106)) begin
        output_bias_we0 = ap_const_logic_1;
    end else begin
        output_bias_we0 = ap_const_logic_0;
    end
end

/// output_dbias_address0 assign process. ///
always @ (ap_sig_cseq_ST_st97_fsm_96 or output_dbias_addr_reg_1279 or ap_sig_cseq_ST_st98_fsm_97 or tmp_120_fu_953_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st98_fsm_97)) begin
        output_dbias_address0 = output_dbias_addr_reg_1279;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st97_fsm_96)) begin
        output_dbias_address0 = tmp_120_fu_953_p1;
    end else begin
        output_dbias_address0 = 'bx;
    end
end

/// output_dbias_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st97_fsm_96 or ap_sig_cseq_ST_st98_fsm_97)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st97_fsm_96) | (ap_const_logic_1 == ap_sig_cseq_ST_st98_fsm_97))) begin
        output_dbias_ce0 = ap_const_logic_1;
    end else begin
        output_dbias_ce0 = ap_const_logic_0;
    end
end

/// output_dbias_we0 assign process. ///
always @ (ap_sig_cseq_ST_st98_fsm_97)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st98_fsm_97)) begin
        output_dbias_we0 = ap_const_logic_1;
    end else begin
        output_dbias_we0 = ap_const_logic_0;
    end
end

/// output_dwei_address0 assign process. ///
always @ (ap_sig_cseq_ST_st86_fsm_85 or output_dwei_addr_reg_1251 or ap_sig_cseq_ST_st87_fsm_86 or tmp_207_fu_935_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st87_fsm_86)) begin
        output_dwei_address0 = output_dwei_addr_reg_1251;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st86_fsm_85)) begin
        output_dwei_address0 = tmp_207_fu_935_p1;
    end else begin
        output_dwei_address0 = 'bx;
    end
end

/// output_dwei_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st86_fsm_85 or ap_sig_cseq_ST_st87_fsm_86)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st86_fsm_85) | (ap_const_logic_1 == ap_sig_cseq_ST_st87_fsm_86))) begin
        output_dwei_ce0 = ap_const_logic_1;
    end else begin
        output_dwei_ce0 = ap_const_logic_0;
    end
end

/// output_dwei_we0 assign process. ///
always @ (ap_sig_cseq_ST_st87_fsm_86)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st87_fsm_86)) begin
        output_dwei_we0 = ap_const_logic_1;
    end else begin
        output_dwei_we0 = ap_const_logic_0;
    end
end

/// output_wei_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st96_fsm_95 or ap_sig_cseq_ST_st89_fsm_88)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st96_fsm_95) | (ap_const_logic_1 == ap_sig_cseq_ST_st89_fsm_88))) begin
        output_wei_ce0 = ap_const_logic_1;
    end else begin
        output_wei_ce0 = ap_const_logic_0;
    end
end

/// output_wei_we0 assign process. ///
always @ (ap_sig_cseq_ST_st96_fsm_95)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st96_fsm_95)) begin
        output_wei_we0 = ap_const_logic_1;
    end else begin
        output_wei_we0 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or exitcond13_fu_480_p2 or exitcond12_fu_518_p2 or exitcond11_fu_561_p2 or exitcond10_fu_588_p2 or exitcond9_fu_638_p2 or exitcond8_fu_681_p2 or exitcond7_fu_714_p2 or exitcond6_fu_741_p2 or exitcond5_fu_769_p2 or exitcond4_fu_812_p2 or exitcond3_fu_845_p2 or exitcond2_fu_872_p2 or exitcond1_fu_888_p2 or exitcond_fu_941_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if ((exitcond13_fu_480_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st29_fsm_28;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if ((ap_const_lv1_0 == exitcond12_fu_518_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st15_fsm_14;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            if ((ap_const_lv1_0 == exitcond11_fu_561_p2)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        ap_ST_st29_fsm_28 : 
        begin
            if ((ap_const_lv1_0 == exitcond10_fu_588_p2)) begin
                ap_NS_fsm = ap_ST_st30_fsm_29;
            end else begin
                ap_NS_fsm = ap_ST_st57_fsm_56;
            end
        end
        ap_ST_st30_fsm_29 : 
        begin
            if ((ap_const_lv1_0 == exitcond9_fu_638_p2)) begin
                ap_NS_fsm = ap_ST_st31_fsm_30;
            end else begin
                ap_NS_fsm = ap_ST_st43_fsm_42;
            end
        end
        ap_ST_st31_fsm_30 : 
        begin
            if ((ap_const_lv1_0 == exitcond8_fu_681_p2)) begin
                ap_NS_fsm = ap_ST_st32_fsm_31;
            end else begin
                ap_NS_fsm = ap_ST_st30_fsm_29;
            end
        end
        ap_ST_st32_fsm_31 : 
        begin
            if ((ap_const_lv1_0 == exitcond7_fu_714_p2)) begin
                ap_NS_fsm = ap_ST_st33_fsm_32;
            end else begin
                ap_NS_fsm = ap_ST_st31_fsm_30;
            end
        end
        ap_ST_st33_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : 
        begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : 
        begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : 
        begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st43_fsm_42 : 
        begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : 
        begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : 
        begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : 
        begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : 
        begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : 
        begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : 
        begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : 
        begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : 
        begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : 
        begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : 
        begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : 
        begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : 
        begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st57_fsm_56 : 
        begin
            if ((ap_const_lv1_0 == exitcond6_fu_741_p2)) begin
                ap_NS_fsm = ap_ST_st58_fsm_57;
            end else begin
                ap_NS_fsm = ap_ST_st85_fsm_84;
            end
        end
        ap_ST_st58_fsm_57 : 
        begin
            if ((ap_const_lv1_0 == exitcond5_fu_769_p2)) begin
                ap_NS_fsm = ap_ST_st59_fsm_58;
            end else begin
                ap_NS_fsm = ap_ST_st71_fsm_70;
            end
        end
        ap_ST_st59_fsm_58 : 
        begin
            if ((ap_const_lv1_0 == exitcond4_fu_812_p2)) begin
                ap_NS_fsm = ap_ST_st60_fsm_59;
            end else begin
                ap_NS_fsm = ap_ST_st58_fsm_57;
            end
        end
        ap_ST_st60_fsm_59 : 
        begin
            if ((ap_const_lv1_0 == exitcond3_fu_845_p2)) begin
                ap_NS_fsm = ap_ST_st61_fsm_60;
            end else begin
                ap_NS_fsm = ap_ST_st59_fsm_58;
            end
        end
        ap_ST_st61_fsm_60 : 
        begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st62_fsm_61 : 
        begin
            ap_NS_fsm = ap_ST_st63_fsm_62;
        end
        ap_ST_st63_fsm_62 : 
        begin
            ap_NS_fsm = ap_ST_st64_fsm_63;
        end
        ap_ST_st64_fsm_63 : 
        begin
            ap_NS_fsm = ap_ST_st65_fsm_64;
        end
        ap_ST_st65_fsm_64 : 
        begin
            ap_NS_fsm = ap_ST_st66_fsm_65;
        end
        ap_ST_st66_fsm_65 : 
        begin
            ap_NS_fsm = ap_ST_st67_fsm_66;
        end
        ap_ST_st67_fsm_66 : 
        begin
            ap_NS_fsm = ap_ST_st68_fsm_67;
        end
        ap_ST_st68_fsm_67 : 
        begin
            ap_NS_fsm = ap_ST_st69_fsm_68;
        end
        ap_ST_st69_fsm_68 : 
        begin
            ap_NS_fsm = ap_ST_st70_fsm_69;
        end
        ap_ST_st70_fsm_69 : 
        begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st71_fsm_70 : 
        begin
            ap_NS_fsm = ap_ST_st72_fsm_71;
        end
        ap_ST_st72_fsm_71 : 
        begin
            ap_NS_fsm = ap_ST_st73_fsm_72;
        end
        ap_ST_st73_fsm_72 : 
        begin
            ap_NS_fsm = ap_ST_st74_fsm_73;
        end
        ap_ST_st74_fsm_73 : 
        begin
            ap_NS_fsm = ap_ST_st75_fsm_74;
        end
        ap_ST_st75_fsm_74 : 
        begin
            ap_NS_fsm = ap_ST_st76_fsm_75;
        end
        ap_ST_st76_fsm_75 : 
        begin
            ap_NS_fsm = ap_ST_st77_fsm_76;
        end
        ap_ST_st77_fsm_76 : 
        begin
            ap_NS_fsm = ap_ST_st78_fsm_77;
        end
        ap_ST_st78_fsm_77 : 
        begin
            ap_NS_fsm = ap_ST_st79_fsm_78;
        end
        ap_ST_st79_fsm_78 : 
        begin
            ap_NS_fsm = ap_ST_st80_fsm_79;
        end
        ap_ST_st80_fsm_79 : 
        begin
            ap_NS_fsm = ap_ST_st81_fsm_80;
        end
        ap_ST_st81_fsm_80 : 
        begin
            ap_NS_fsm = ap_ST_st82_fsm_81;
        end
        ap_ST_st82_fsm_81 : 
        begin
            ap_NS_fsm = ap_ST_st83_fsm_82;
        end
        ap_ST_st83_fsm_82 : 
        begin
            ap_NS_fsm = ap_ST_st84_fsm_83;
        end
        ap_ST_st84_fsm_83 : 
        begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st85_fsm_84 : 
        begin
            if ((ap_const_lv1_0 == exitcond2_fu_872_p2)) begin
                ap_NS_fsm = ap_ST_st86_fsm_85;
            end else begin
                ap_NS_fsm = ap_ST_st97_fsm_96;
            end
        end
        ap_ST_st86_fsm_85 : 
        begin
            if ((ap_const_lv1_0 == exitcond1_fu_888_p2)) begin
                ap_NS_fsm = ap_ST_st87_fsm_86;
            end else begin
                ap_NS_fsm = ap_ST_st85_fsm_84;
            end
        end
        ap_ST_st87_fsm_86 : 
        begin
            ap_NS_fsm = ap_ST_st88_fsm_87;
        end
        ap_ST_st88_fsm_87 : 
        begin
            ap_NS_fsm = ap_ST_st89_fsm_88;
        end
        ap_ST_st89_fsm_88 : 
        begin
            ap_NS_fsm = ap_ST_st90_fsm_89;
        end
        ap_ST_st90_fsm_89 : 
        begin
            ap_NS_fsm = ap_ST_st91_fsm_90;
        end
        ap_ST_st91_fsm_90 : 
        begin
            ap_NS_fsm = ap_ST_st92_fsm_91;
        end
        ap_ST_st92_fsm_91 : 
        begin
            ap_NS_fsm = ap_ST_st93_fsm_92;
        end
        ap_ST_st93_fsm_92 : 
        begin
            ap_NS_fsm = ap_ST_st94_fsm_93;
        end
        ap_ST_st94_fsm_93 : 
        begin
            ap_NS_fsm = ap_ST_st95_fsm_94;
        end
        ap_ST_st95_fsm_94 : 
        begin
            ap_NS_fsm = ap_ST_st96_fsm_95;
        end
        ap_ST_st96_fsm_95 : 
        begin
            ap_NS_fsm = ap_ST_st86_fsm_85;
        end
        ap_ST_st97_fsm_96 : 
        begin
            if (~(ap_const_lv1_0 == exitcond_fu_941_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st98_fsm_97;
            end
        end
        ap_ST_st98_fsm_97 : 
        begin
            ap_NS_fsm = ap_ST_st99_fsm_98;
        end
        ap_ST_st99_fsm_98 : 
        begin
            ap_NS_fsm = ap_ST_st100_fsm_99;
        end
        ap_ST_st100_fsm_99 : 
        begin
            ap_NS_fsm = ap_ST_st101_fsm_100;
        end
        ap_ST_st101_fsm_100 : 
        begin
            ap_NS_fsm = ap_ST_st102_fsm_101;
        end
        ap_ST_st102_fsm_101 : 
        begin
            ap_NS_fsm = ap_ST_st103_fsm_102;
        end
        ap_ST_st103_fsm_102 : 
        begin
            ap_NS_fsm = ap_ST_st104_fsm_103;
        end
        ap_ST_st104_fsm_103 : 
        begin
            ap_NS_fsm = ap_ST_st105_fsm_104;
        end
        ap_ST_st105_fsm_104 : 
        begin
            ap_NS_fsm = ap_ST_st106_fsm_105;
        end
        ap_ST_st106_fsm_105 : 
        begin
            ap_NS_fsm = ap_ST_st107_fsm_106;
        end
        ap_ST_st107_fsm_106 : 
        begin
            ap_NS_fsm = ap_ST_st97_fsm_96;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C1_bias_address0 = C1_bias_addr_reg_991;
assign C1_bias_d0 = reg_468;
assign C1_dbias_d0 = ap_const_lv32_0;
assign C1_dmapData_d0 = ap_const_lv32_0;
assign C1_mapData_addr1_fu_512_p2 = (tmp_trn_cast_fu_496_p1 + p_shl_cast_fu_508_p1);
assign C1_mapData_addr2_cast_fu_539_p1 = C1_mapData_addr2_fu_534_p2;
assign C1_mapData_addr2_fu_534_p2 = (C1_mapData_addr1_reg_973 + tmp_173_trn_cast_fu_530_p1);
assign C1_mapData_addr3_fu_555_p2 = (C1_mapData_addr2_cast_fu_539_p1 + p_shl_fu_551_p1);
assign C1_mapData_addr4_fu_577_p2 = (C1_mapData_addr3_reg_986 + tmp_186_trn_fu_573_p1);
assign C1_mapData_address0 = C1_mapData_addr_reg_1009;
assign C1_mapData_d0 = reg_468;
assign C3_bias_address0 = C3_bias_addr_reg_1071;
assign C3_bias_d0 = reg_468;
assign C3_dbias_d0 = ap_const_lv32_0;
assign C3_dmapData_d0 = ap_const_lv32_0;
assign C3_mapData_addr12_cast_fu_634_p1 = $signed(C3_mapData_addr12_fu_628_p2);
assign C3_mapData_addr12_fu_628_p2 = (p_shl51_cast_fu_612_p1 - p_shl52_cast_fu_624_p1);
assign C3_mapData_addr13_cast_fu_659_p1 = C3_mapData_addr13_fu_654_p2;
assign C3_mapData_addr13_fu_654_p2 = ($signed(C3_mapData_addr12_cast_reg_1053) + $signed(tmp_178_trn_cast_fu_650_p1));
assign C3_mapData_addr14_fu_675_p2 = ($signed(C3_mapData_addr13_cast_fu_659_p1) + $signed(p_shl43_fu_671_p1));
assign C3_mapData_addr15_fu_697_p2 = ($signed(C3_mapData_addr14_reg_1066) + $signed(tmp_192_trn_fu_693_p1));
assign C3_mapData_addr16_fu_708_p2 = ($signed(C3_mapData_addr15_fu_697_p2) + $signed(tmp_138_fu_702_p2));
assign C3_mapData_addr17_fu_730_p2 = ($signed(C3_mapData_addr16_reg_1089) + $signed(tmp_194_trn_fu_726_p1));
assign C3_mapData_address0 = C3_mapData_addr_reg_1102;
assign C3_mapData_d0 = reg_468;
assign C5_bias_address0 = C5_bias_addr_reg_1164;
assign C5_bias_d0 = reg_468;
assign C5_dbias_d0 = ap_const_lv32_0;
assign C5_dmapData_d0 = ap_const_lv32_0;
assign C5_mapData_addr10_fu_839_p2 = (C5_mapData_addr9_fu_828_p2 + tmp_139_fu_833_p2);
assign C5_mapData_addr11_fu_861_p2 = (C5_mapData_addr10_reg_1182 + tmp_197_trn_fu_857_p1);
assign C5_mapData_addr16_cast_fu_765_p1 = tmp_203_fu_757_p3;
assign C5_mapData_addr17_cast_fu_790_p1 = C5_mapData_addr7_fu_785_p2;
assign C5_mapData_addr7_fu_785_p2 = (C5_mapData_addr16_cast_reg_1146 + tmp_185_trn_cast_fu_781_p1);
assign C5_mapData_addr8_fu_806_p2 = (C5_mapData_addr17_cast_fu_790_p1 + p_shl44_fu_802_p1);
assign C5_mapData_addr9_fu_828_p2 = (C5_mapData_addr8_reg_1159 + tmp_193_trn_fu_824_p1);
assign C5_mapData_address0 = C5_mapData_addr_reg_1195;
assign C5_mapData_d0 = reg_468;

/// ap_sig_bdd_1001 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1001 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2E]);
end

/// ap_sig_bdd_1009 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1009 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4A]);
end

/// ap_sig_bdd_125 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_125 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_265 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_265 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_272 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_272 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_11]);
end

/// ap_sig_bdd_280 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_280 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_15]);
end

/// ap_sig_bdd_288 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_288 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_23]);
end

/// ap_sig_bdd_296 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_296 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2D]);
end

/// ap_sig_bdd_304 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_304 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_31]);
end

/// ap_sig_bdd_312 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_312 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3F]);
end

/// ap_sig_bdd_320 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_320 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_49]);
end

/// ap_sig_bdd_328 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_328 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4D]);
end

/// ap_sig_bdd_336 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_336 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_59]);
end

/// ap_sig_bdd_344 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_344 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_64]);
end

/// ap_sig_bdd_354 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_354 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end

/// ap_sig_bdd_361 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_361 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1A]);
end

/// ap_sig_bdd_369 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_369 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_28]);
end

/// ap_sig_bdd_377 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_377 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_36]);
end

/// ap_sig_bdd_385 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_385 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_44]);
end

/// ap_sig_bdd_393 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_393 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_52]);
end

/// ap_sig_bdd_401 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_401 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5E]);
end

/// ap_sig_bdd_409 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_409 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_69]);
end

/// ap_sig_bdd_419 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_419 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_436 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_436 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_456 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_456 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_471 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_471 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_480 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_480 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end

/// ap_sig_bdd_490 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_490 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1C]);
end

/// ap_sig_bdd_506 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_506 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1D]);
end

/// ap_sig_bdd_526 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_526 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1E]);
end

/// ap_sig_bdd_540 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_540 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1F]);
end

/// ap_sig_bdd_555 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_555 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_20]);
end

/// ap_sig_bdd_564 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_564 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2A]);
end

/// ap_sig_bdd_574 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_574 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_38]);
end

/// ap_sig_bdd_590 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_590 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_39]);
end

/// ap_sig_bdd_610 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_610 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3A]);
end

/// ap_sig_bdd_624 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_624 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3B]);
end

/// ap_sig_bdd_639 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_639 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3C]);
end

/// ap_sig_bdd_648 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_648 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_46]);
end

/// ap_sig_bdd_658 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_658 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_54]);
end

/// ap_sig_bdd_672 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_672 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_55]);
end

/// ap_sig_bdd_687 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_687 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_56]);
end

/// ap_sig_bdd_697 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_697 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_60]);
end

/// ap_sig_bdd_712 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_712 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_61]);
end

/// ap_sig_bdd_726 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_726 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1B]);
end

/// ap_sig_bdd_739 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_739 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end

/// ap_sig_bdd_748 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_748 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_37]);
end

/// ap_sig_bdd_768 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_768 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_29]);
end

/// ap_sig_bdd_777 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_777 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_53]);
end

/// ap_sig_bdd_796 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_796 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_45]);
end

/// ap_sig_bdd_812 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_812 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5F]);
end

/// ap_sig_bdd_821 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_821 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6A]);
end

/// ap_sig_bdd_839 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_839 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_848 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_848 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_14]);
end

/// ap_sig_bdd_861 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_861 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_22]);
end

/// ap_sig_bdd_870 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_870 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_30]);
end

/// ap_sig_bdd_883 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_883 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3E]);
end

/// ap_sig_bdd_892 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_892 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4C]);
end

/// ap_sig_bdd_903 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_903 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_58]);
end

/// ap_sig_bdd_914 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_914 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_63]);
end

/// ap_sig_bdd_925 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_925 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_932 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_932 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_16]);
end

/// ap_sig_bdd_939 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_939 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_24]);
end

/// ap_sig_bdd_946 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_946 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_32]);
end

/// ap_sig_bdd_953 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_953 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_40]);
end

/// ap_sig_bdd_960 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_960 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4E]);
end

/// ap_sig_bdd_967 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_967 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5A]);
end

/// ap_sig_bdd_974 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_974 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_65]);
end

/// ap_sig_bdd_994 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_994 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_12]);
end
assign exitcond10_fu_588_p2 = (i_1_reg_321 == ap_const_lv5_10? 1'b1: 1'b0);
assign exitcond11_fu_561_p2 = (k_reg_310 == ap_const_lv3_5? 1'b1: 1'b0);
assign exitcond12_fu_518_p2 = (j_reg_299 == ap_const_lv3_5? 1'b1: 1'b0);
assign exitcond13_fu_480_p2 = (i_reg_288 == ap_const_lv3_6? 1'b1: 1'b0);
assign exitcond1_fu_888_p2 = (j_3_reg_420 == ap_const_lv5_1E? 1'b1: 1'b0);
assign exitcond2_fu_872_p2 = (i_3_reg_409 == ap_const_lv4_A? 1'b1: 1'b0);
assign exitcond3_fu_845_p2 = (m_1_reg_398 == ap_const_lv3_5? 1'b1: 1'b0);
assign exitcond4_fu_812_p2 = (k_2_reg_387 == ap_const_lv3_5? 1'b1: 1'b0);
assign exitcond5_fu_769_p2 = (j_2_reg_376 == ap_const_lv5_10? 1'b1: 1'b0);
assign exitcond6_fu_741_p2 = (i_2_reg_365 == ap_const_lv5_1E? 1'b1: 1'b0);
assign exitcond7_fu_714_p2 = (m_reg_354 == ap_const_lv3_5? 1'b1: 1'b0);
assign exitcond8_fu_681_p2 = (k_1_reg_343 == ap_const_lv3_5? 1'b1: 1'b0);
assign exitcond9_fu_638_p2 = (j_1_reg_332 == ap_const_lv3_6? 1'b1: 1'b0);
assign exitcond_fu_941_p2 = (i_4_reg_431 == ap_const_lv4_A? 1'b1: 1'b0);
assign grp_fu_442_ce = ap_const_logic_1;
assign grp_fu_442_p1 = reg_462;
assign grp_fu_446_ce = ap_const_logic_1;
assign i_22_fu_486_p2 = (i_reg_288 + ap_const_lv3_1);
assign i_23_fu_947_p2 = (i_4_reg_431 + ap_const_lv4_1);
assign i_5_fu_594_p2 = (i_1_reg_321 + ap_const_lv5_1);
assign i_6_fu_747_p2 = (i_2_reg_365 + ap_const_lv5_1);
assign i_7_fu_878_p2 = (i_3_reg_409 + ap_const_lv4_1);
assign j_18_fu_524_p2 = (j_reg_299 + ap_const_lv3_1);
assign j_19_fu_644_p2 = (j_1_reg_332 + ap_const_lv3_1);
assign j_20_fu_775_p2 = (j_2_reg_376 + ap_const_lv5_1);
assign j_21_fu_894_p2 = (j_3_reg_420 + ap_const_lv5_1);
assign k_16_fu_567_p2 = (k_reg_310 + ap_const_lv3_1);
assign k_17_fu_818_p2 = (k_2_reg_387 + ap_const_lv3_1);
assign k_6_fu_687_p2 = (k_1_reg_343 + ap_const_lv3_1);
assign m_10_fu_851_p2 = (m_1_reg_398 + ap_const_lv3_1);
assign m_9_fu_720_p2 = (m_reg_354 + ap_const_lv3_1);
assign output_bias_address0 = output_bias_addr_reg_1274;
assign output_bias_d0 = reg_468;
assign output_dbias_d0 = ap_const_lv32_0;
assign output_dwei_d0 = ap_const_lv32_0;
assign output_wei_addr1_fu_924_p2 = (p_shl58_cast_fu_920_p1 + p_shl57_cast_fu_908_p1);
assign output_wei_addr2_fu_930_p2 = (output_wei_addr1_fu_924_p2 + tmp_174_trn_cast_reg_1233);
assign output_wei_address0 = output_wei_addr_reg_1246;
assign output_wei_d0 = reg_468;
assign p_shl43_fu_671_p1 = $signed(tmp_136_fu_663_p3);
assign p_shl44_fu_802_p1 = tmp_137_fu_794_p3;
assign p_shl51_cast_fu_612_p1 = tmp_201_fu_604_p3;
assign p_shl52_cast_fu_624_p1 = tmp_202_fu_616_p3;
assign p_shl57_cast_fu_908_p1 = tmp_205_fu_900_p3;
assign p_shl58_cast_fu_920_p1 = tmp_206_fu_912_p3;
assign p_shl_cast_fu_508_p1 = tmp_200_fu_500_p3;
assign p_shl_fu_551_p1 = tmp_135_fu_543_p3;
assign tmp_111_fu_753_p1 = i_2_reg_365;
assign tmp_120_fu_953_p1 = i_4_reg_431;
assign tmp_135_fu_543_p3 = {{C1_mapData_addr2_fu_534_p2}, {ap_const_lv2_0}};
assign tmp_136_fu_663_p3 = {{C3_mapData_addr13_fu_654_p2}, {ap_const_lv2_0}};
assign tmp_137_fu_794_p3 = {{C5_mapData_addr7_fu_785_p2}, {ap_const_lv2_0}};
assign tmp_138_fu_702_p2 = C3_mapData_addr15_fu_697_p2 << ap_const_lv32_2;
assign tmp_139_fu_833_p2 = C5_mapData_addr9_fu_828_p2 << ap_const_lv32_2;
assign tmp_173_trn_cast_fu_530_p1 = j_reg_299;
assign tmp_174_trn_cast_fu_884_p1 = i_3_reg_409;
assign tmp_178_trn_cast_fu_650_p1 = j_1_reg_332;
assign tmp_185_trn_cast_fu_781_p1 = j_2_reg_376;
assign tmp_186_trn_fu_573_p1 = k_reg_310;
assign tmp_192_trn_fu_693_p1 = k_1_reg_343;
assign tmp_193_trn_fu_824_p1 = k_2_reg_387;
assign tmp_194_trn_fu_726_p1 = m_reg_354;
assign tmp_197_trn_fu_857_p1 = m_1_reg_398;
assign tmp_200_fu_500_p3 = {{i_reg_288}, {ap_const_lv2_0}};
assign tmp_201_fu_604_p3 = {{i_1_reg_321}, {ap_const_lv3_0}};
assign tmp_202_fu_616_p3 = {{i_1_reg_321}, {ap_const_lv1_0}};
assign tmp_203_fu_757_p3 = {{i_2_reg_365}, {ap_const_lv4_0}};
assign tmp_204_fu_582_p1 = C1_mapData_addr4_fu_577_p2;
assign tmp_205_fu_900_p3 = {{j_3_reg_420}, {ap_const_lv3_0}};
assign tmp_206_fu_912_p3 = {{j_3_reg_420}, {ap_const_lv1_0}};
assign tmp_207_fu_935_p1 = output_wei_addr2_fu_930_p2;
assign tmp_208_fu_735_p1 = $unsigned(C3_mapData_addr17_fu_730_p2);
assign tmp_209_fu_866_p1 = C5_mapData_addr11_fu_861_p2;
assign tmp_fu_492_p1 = i_reg_288;
assign tmp_s_fu_600_p1 = i_1_reg_321;
assign tmp_trn_cast_fu_496_p1 = i_reg_288;
always @ (posedge ap_clk)
begin
    tmp_reg_967[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    tmp_s_reg_1047[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    C3_mapData_addr12_cast_reg_1053[0] <= 1'b0;
    tmp_111_reg_1140[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    C5_mapData_addr16_cast_reg_1146[3:0] <= 4'b0000;
    C5_mapData_addr16_cast_reg_1146[9] <= 1'b0;
    tmp_174_trn_cast_reg_1233[8:4] <= 5'b00000;
end



endmodule //dateport_upadteall

