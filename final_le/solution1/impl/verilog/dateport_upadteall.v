// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dateport_upadteall (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        C1_mapData_address0,
        C1_mapData_ce0,
        C1_mapData_we0,
        C1_mapData_d0,
        C1_mapData_q0,
        C1_dmapData_address0,
        C1_dmapData_ce0,
        C1_dmapData_we0,
        C1_dmapData_d0,
        C1_dmapData_q0,
        C1_bias_address0,
        C1_bias_ce0,
        C1_bias_we0,
        C1_bias_d0,
        C1_bias_q0,
        C1_dbias_address0,
        C1_dbias_ce0,
        C1_dbias_we0,
        C1_dbias_d0,
        C1_dbias_q0,
        C3_mapData_address0,
        C3_mapData_ce0,
        C3_mapData_q0,
        C3_mapData_address1,
        C3_mapData_ce1,
        C3_mapData_we1,
        C3_mapData_d1,
        C3_dmapData_address0,
        C3_dmapData_ce0,
        C3_dmapData_q0,
        C3_dmapData_address1,
        C3_dmapData_ce1,
        C3_dmapData_we1,
        C3_dmapData_d1,
        C3_bias_address0,
        C3_bias_ce0,
        C3_bias_we0,
        C3_bias_d0,
        C3_bias_q0,
        C3_dbias_address0,
        C3_dbias_ce0,
        C3_dbias_we0,
        C3_dbias_d0,
        C3_dbias_q0,
        C5_mapData_address0,
        C5_mapData_ce0,
        C5_mapData_we0,
        C5_mapData_d0,
        C5_mapData_q0,
        C5_dmapData_address0,
        C5_dmapData_ce0,
        C5_dmapData_we0,
        C5_dmapData_d0,
        C5_dmapData_q0,
        C5_bias_address0,
        C5_bias_ce0,
        C5_bias_we0,
        C5_bias_d0,
        C5_bias_q0,
        C5_dbias_address0,
        C5_dbias_ce0,
        C5_dbias_we0,
        C5_dbias_d0,
        C5_dbias_q0,
        output_wei_address0,
        output_wei_ce0,
        output_wei_we0,
        output_wei_d0,
        output_wei_q0,
        output_dwei_address0,
        output_dwei_ce0,
        output_dwei_we0,
        output_dwei_d0,
        output_dwei_q0,
        output_bias_address0,
        output_bias_ce0,
        output_bias_we0,
        output_bias_d0,
        output_bias_q0,
        output_dbias_address0,
        output_dbias_ce0,
        output_dbias_we0,
        output_dbias_d0,
        output_dbias_q0
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 96'b1;
parameter    ap_ST_st2_fsm_1 = 96'b10;
parameter    ap_ST_st3_fsm_2 = 96'b100;
parameter    ap_ST_st4_fsm_3 = 96'b1000;
parameter    ap_ST_st5_fsm_4 = 96'b10000;
parameter    ap_ST_st6_fsm_5 = 96'b100000;
parameter    ap_ST_st7_fsm_6 = 96'b1000000;
parameter    ap_ST_st8_fsm_7 = 96'b10000000;
parameter    ap_ST_st9_fsm_8 = 96'b100000000;
parameter    ap_ST_st10_fsm_9 = 96'b1000000000;
parameter    ap_ST_st11_fsm_10 = 96'b10000000000;
parameter    ap_ST_st12_fsm_11 = 96'b100000000000;
parameter    ap_ST_st13_fsm_12 = 96'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 96'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 96'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 96'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 96'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 96'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 96'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 96'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 96'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 96'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 96'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 96'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 96'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 96'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 96'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 96'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 96'b10000000000000000000000000000;
parameter    ap_ST_pp0_stg0_fsm_29 = 96'b100000000000000000000000000000;
parameter    ap_ST_st42_fsm_30 = 96'b1000000000000000000000000000000;
parameter    ap_ST_st43_fsm_31 = 96'b10000000000000000000000000000000;
parameter    ap_ST_st44_fsm_32 = 96'b100000000000000000000000000000000;
parameter    ap_ST_st45_fsm_33 = 96'b1000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_34 = 96'b10000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_35 = 96'b100000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_36 = 96'b1000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_37 = 96'b10000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_38 = 96'b100000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_39 = 96'b1000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_40 = 96'b10000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_41 = 96'b100000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_42 = 96'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_43 = 96'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_44 = 96'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_45 = 96'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_46 = 96'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_47 = 96'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_48 = 96'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_49 = 96'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_50 = 96'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_51 = 96'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st64_fsm_52 = 96'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st65_fsm_53 = 96'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st66_fsm_54 = 96'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st67_fsm_55 = 96'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st68_fsm_56 = 96'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st69_fsm_57 = 96'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st70_fsm_58 = 96'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st71_fsm_59 = 96'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st72_fsm_60 = 96'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st73_fsm_61 = 96'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st74_fsm_62 = 96'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st75_fsm_63 = 96'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st76_fsm_64 = 96'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st77_fsm_65 = 96'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st78_fsm_66 = 96'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st79_fsm_67 = 96'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st80_fsm_68 = 96'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st81_fsm_69 = 96'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st82_fsm_70 = 96'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st83_fsm_71 = 96'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st84_fsm_72 = 96'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st85_fsm_73 = 96'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st86_fsm_74 = 96'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st87_fsm_75 = 96'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st88_fsm_76 = 96'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st89_fsm_77 = 96'b100000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st90_fsm_78 = 96'b1000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st91_fsm_79 = 96'b10000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st92_fsm_80 = 96'b100000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st93_fsm_81 = 96'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st94_fsm_82 = 96'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st95_fsm_83 = 96'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st96_fsm_84 = 96'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st97_fsm_85 = 96'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st98_fsm_86 = 96'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st99_fsm_87 = 96'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st100_fsm_88 = 96'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st101_fsm_89 = 96'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st102_fsm_90 = 96'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st103_fsm_91 = 96'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st104_fsm_92 = 96'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st105_fsm_93 = 96'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st106_fsm_94 = 96'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st107_fsm_95 = 96'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_true = 1'b1;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv32_42 = 32'b1000010;
parameter    ap_const_lv32_4E = 32'b1001110;
parameter    ap_const_lv32_59 = 32'b1011001;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_2B = 32'b101011;
parameter    ap_const_lv32_39 = 32'b111001;
parameter    ap_const_lv32_47 = 32'b1000111;
parameter    ap_const_lv32_53 = 32'b1010011;
parameter    ap_const_lv32_5E = 32'b1011110;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_2D = 32'b101101;
parameter    ap_const_lv32_2E = 32'b101110;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv32_30 = 32'b110000;
parameter    ap_const_lv32_31 = 32'b110001;
parameter    ap_const_lv32_3B = 32'b111011;
parameter    ap_const_lv32_49 = 32'b1001001;
parameter    ap_const_lv32_4A = 32'b1001010;
parameter    ap_const_lv32_4B = 32'b1001011;
parameter    ap_const_lv32_55 = 32'b1010101;
parameter    ap_const_lv32_56 = 32'b1010110;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_2C = 32'b101100;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv32_48 = 32'b1001000;
parameter    ap_const_lv32_3A = 32'b111010;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_54 = 32'b1010100;
parameter    ap_const_lv32_5F = 32'b1011111;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv32_33 = 32'b110011;
parameter    ap_const_lv32_41 = 32'b1000001;
parameter    ap_const_lv32_4D = 32'b1001101;
parameter    ap_const_lv32_58 = 32'b1011000;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_27 = 32'b100111;
parameter    ap_const_lv32_35 = 32'b110101;
parameter    ap_const_lv32_43 = 32'b1000011;
parameter    ap_const_lv32_4F = 32'b1001111;
parameter    ap_const_lv32_5A = 32'b1011010;
parameter    ap_const_lv32_3827C5AD = 32'b111000001001111100010110101101;
parameter    ap_const_lv32_3CCCCCCD = 32'b111100110011001100110011001101;
parameter    ap_const_lv32_3CA3D70A = 32'b111100101000111101011100001010;
parameter    ap_const_lv32_37A7C5AD = 32'b110111101001111100010110101101;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv3_6 = 3'b110;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv3_5 = 3'b101;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv8_96 = 8'b10010110;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv6_19 = 6'b11001;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv5_1E = 5'b11110;
parameter    ap_const_lv4_A = 4'b1010;
parameter    ap_const_lv4_1 = 4'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] C1_mapData_address0;
output   C1_mapData_ce0;
output   C1_mapData_we0;
output  [31:0] C1_mapData_d0;
input  [31:0] C1_mapData_q0;
output  [7:0] C1_dmapData_address0;
output   C1_dmapData_ce0;
output   C1_dmapData_we0;
output  [31:0] C1_dmapData_d0;
input  [31:0] C1_dmapData_q0;
output  [2:0] C1_bias_address0;
output   C1_bias_ce0;
output   C1_bias_we0;
output  [31:0] C1_bias_d0;
input  [31:0] C1_bias_q0;
output  [2:0] C1_dbias_address0;
output   C1_dbias_ce0;
output   C1_dbias_we0;
output  [31:0] C1_dbias_d0;
input  [31:0] C1_dbias_q0;
output  [11:0] C3_mapData_address0;
output   C3_mapData_ce0;
input  [31:0] C3_mapData_q0;
output  [11:0] C3_mapData_address1;
output   C3_mapData_ce1;
output   C3_mapData_we1;
output  [31:0] C3_mapData_d1;
output  [11:0] C3_dmapData_address0;
output   C3_dmapData_ce0;
input  [31:0] C3_dmapData_q0;
output  [11:0] C3_dmapData_address1;
output   C3_dmapData_ce1;
output   C3_dmapData_we1;
output  [31:0] C3_dmapData_d1;
output  [3:0] C3_bias_address0;
output   C3_bias_ce0;
output   C3_bias_we0;
output  [31:0] C3_bias_d0;
input  [31:0] C3_bias_q0;
output  [3:0] C3_dbias_address0;
output   C3_dbias_ce0;
output   C3_dbias_we0;
output  [31:0] C3_dbias_d0;
input  [31:0] C3_dbias_q0;
output  [13:0] C5_mapData_address0;
output   C5_mapData_ce0;
output   C5_mapData_we0;
output  [31:0] C5_mapData_d0;
input  [31:0] C5_mapData_q0;
output  [13:0] C5_dmapData_address0;
output   C5_dmapData_ce0;
output   C5_dmapData_we0;
output  [31:0] C5_dmapData_d0;
input  [31:0] C5_dmapData_q0;
output  [4:0] C5_bias_address0;
output   C5_bias_ce0;
output   C5_bias_we0;
output  [31:0] C5_bias_d0;
input  [31:0] C5_bias_q0;
output  [4:0] C5_dbias_address0;
output   C5_dbias_ce0;
output   C5_dbias_we0;
output  [31:0] C5_dbias_d0;
input  [31:0] C5_dbias_q0;
output  [8:0] output_wei_address0;
output   output_wei_ce0;
output   output_wei_we0;
output  [31:0] output_wei_d0;
input  [31:0] output_wei_q0;
output  [8:0] output_dwei_address0;
output   output_dwei_ce0;
output   output_dwei_we0;
output  [31:0] output_dwei_d0;
input  [31:0] output_dwei_q0;
output  [3:0] output_bias_address0;
output   output_bias_ce0;
output   output_bias_we0;
output  [31:0] output_bias_d0;
input  [31:0] output_bias_q0;
output  [3:0] output_dbias_address0;
output   output_dbias_ce0;
output   output_dbias_we0;
output  [31:0] output_dbias_d0;
input  [31:0] output_dbias_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg C1_mapData_ce0;
reg C1_mapData_we0;
reg[7:0] C1_dmapData_address0;
reg C1_dmapData_ce0;
reg C1_dmapData_we0;
reg C1_bias_ce0;
reg C1_bias_we0;
reg[2:0] C1_dbias_address0;
reg C1_dbias_ce0;
reg C1_dbias_we0;
reg C3_mapData_ce0;
reg C3_mapData_ce1;
reg C3_mapData_we1;
reg C3_dmapData_ce0;
reg C3_dmapData_ce1;
reg C3_dmapData_we1;
reg C3_bias_ce0;
reg C3_bias_we0;
reg[3:0] C3_dbias_address0;
reg C3_dbias_ce0;
reg C3_dbias_we0;
reg C5_mapData_ce0;
reg C5_mapData_we0;
reg[13:0] C5_dmapData_address0;
reg C5_dmapData_ce0;
reg C5_dmapData_we0;
reg C5_bias_ce0;
reg C5_bias_we0;
reg[4:0] C5_dbias_address0;
reg C5_dbias_ce0;
reg C5_dbias_we0;
reg output_wei_ce0;
reg output_wei_we0;
reg[8:0] output_dwei_address0;
reg output_dwei_ce0;
reg output_dwei_we0;
reg output_bias_ce0;
reg output_bias_we0;
reg[3:0] output_dbias_address0;
reg output_dbias_ce0;
reg output_dbias_we0;
(* fsm_encoding = "none" *) reg   [95:0] ap_CS_fsm = 96'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_114;
reg   [7:0] indvar_flatten2_reg_374;
reg   [2:0] j_1_reg_385;
reg   [5:0] indvar_flatten_reg_396;
reg   [2:0] k_1_reg_407;
reg   [2:0] m_reg_418;
wire   [31:0] grp_fu_510_p2;
reg   [31:0] reg_526;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_268;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg    ap_reg_ppiten_pp0_it3 = 1'b0;
reg    ap_reg_ppiten_pp0_it4 = 1'b0;
reg    ap_reg_ppiten_pp0_it5 = 1'b0;
reg    ap_reg_ppiten_pp0_it6 = 1'b0;
reg    ap_reg_ppiten_pp0_it7 = 1'b0;
reg    ap_reg_ppiten_pp0_it8 = 1'b0;
reg    ap_reg_ppiten_pp0_it9 = 1'b0;
reg    ap_reg_ppiten_pp0_it10 = 1'b0;
reg    ap_reg_ppiten_pp0_it11 = 1'b0;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_bdd_304;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_bdd_312;
reg   [0:0] exitcond_flatten_reg_1192;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it4;
reg    ap_sig_cseq_ST_st46_fsm_34;
reg    ap_sig_bdd_325;
reg    ap_sig_cseq_ST_st50_fsm_38;
reg    ap_sig_bdd_333;
reg    ap_sig_cseq_ST_st64_fsm_52;
reg    ap_sig_bdd_341;
reg    ap_sig_cseq_ST_st74_fsm_62;
reg    ap_sig_bdd_349;
reg    ap_sig_cseq_ST_st78_fsm_66;
reg    ap_sig_bdd_357;
reg    ap_sig_cseq_ST_st90_fsm_78;
reg    ap_sig_bdd_365;
reg    ap_sig_cseq_ST_st101_fsm_89;
reg    ap_sig_bdd_373;
wire   [31:0] grp_fu_506_p2;
reg   [31:0] reg_532;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_bdd_383;
reg    ap_sig_cseq_ST_st27_fsm_26;
reg    ap_sig_bdd_390;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it9;
reg    ap_sig_cseq_ST_st55_fsm_43;
reg    ap_sig_bdd_401;
reg    ap_sig_cseq_ST_st69_fsm_57;
reg    ap_sig_bdd_409;
reg    ap_sig_cseq_ST_st83_fsm_71;
reg    ap_sig_bdd_417;
reg    ap_sig_cseq_ST_st95_fsm_83;
reg    ap_sig_bdd_425;
reg    ap_sig_cseq_ST_st106_fsm_94;
reg    ap_sig_bdd_433;
wire   [2:0] i_22_fu_550_p2;
reg   [2:0] i_22_reg_1095;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_443;
wire   [63:0] tmp_fu_556_p1;
reg   [63:0] tmp_reg_1100;
wire   [0:0] exitcond13_fu_544_p2;
wire   [5:0] C1_mapData_addr1_fu_576_p2;
reg   [5:0] C1_mapData_addr1_reg_1106;
wire   [2:0] j_18_fu_588_p2;
reg   [2:0] j_18_reg_1114;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_459;
wire   [31:0] C1_mapData_addr3_fu_619_p2;
reg   [31:0] C1_mapData_addr3_reg_1119;
wire   [0:0] exitcond12_fu_582_p2;
reg   [2:0] C1_bias_addr_reg_1124;
reg   [2:0] C1_dbias_addr_reg_1129;
wire   [2:0] k_3_fu_631_p2;
reg   [2:0] k_3_reg_1137;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_479;
reg   [7:0] C1_mapData_addr_reg_1142;
wire   [0:0] exitcond11_fu_625_p2;
reg   [7:0] C1_dmapData_addr_reg_1147;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_494;
reg   [31:0] C1_mapData_load_reg_1157;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_bdd_503;
reg   [31:0] C1_bias_load_reg_1167;
wire   [0:0] exitcond10_fu_652_p2;
reg    ap_sig_cseq_ST_st29_fsm_28;
reg    ap_sig_bdd_513;
wire   [4:0] i_5_fu_658_p2;
reg   [4:0] i_5_reg_1176;
wire   [63:0] tmp_s_fu_664_p1;
reg   [63:0] tmp_s_reg_1181;
wire  signed [9:0] C3_mapData_addr19_cast_fu_698_p1;
reg  signed [9:0] C3_mapData_addr19_cast_reg_1187;
wire   [0:0] exitcond_flatten_fu_702_p2;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_29;
reg    ap_sig_bdd_529;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it1;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it2;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it3;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it5;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it6;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it7;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it8;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it10;
wire   [7:0] indvar_flatten_next2_fu_708_p2;
wire   [2:0] j_1_mid2_fu_752_p3;
reg   [2:0] j_1_mid2_reg_1201;
wire   [2:0] m_mid2_fu_772_p3;
reg   [2:0] m_mid2_reg_1206;
wire   [2:0] k_1_mid2_fu_780_p3;
reg   [2:0] k_1_mid2_reg_1211;
wire  signed [31:0] C3_mapData_addr17_fu_823_p2;
reg  signed [31:0] C3_mapData_addr17_reg_1216;
wire   [2:0] m_7_fu_829_p2;
wire   [5:0] indvar_flatten_next_fu_841_p3;
reg   [11:0] C3_mapData_addr_reg_1232;
reg   [11:0] ap_reg_ppstg_C3_mapData_addr_reg_1232_pp0_it2;
reg   [11:0] ap_reg_ppstg_C3_mapData_addr_reg_1232_pp0_it3;
reg   [11:0] ap_reg_ppstg_C3_mapData_addr_reg_1232_pp0_it4;
reg   [11:0] ap_reg_ppstg_C3_mapData_addr_reg_1232_pp0_it5;
reg   [11:0] ap_reg_ppstg_C3_mapData_addr_reg_1232_pp0_it6;
reg   [11:0] ap_reg_ppstg_C3_mapData_addr_reg_1232_pp0_it7;
reg   [11:0] ap_reg_ppstg_C3_mapData_addr_reg_1232_pp0_it8;
reg   [11:0] ap_reg_ppstg_C3_mapData_addr_reg_1232_pp0_it9;
reg   [11:0] ap_reg_ppstg_C3_mapData_addr_reg_1232_pp0_it10;
reg   [11:0] C3_dmapData_addr_reg_1238;
reg   [31:0] C3_mapData_load_reg_1249;
reg   [3:0] C3_bias_addr_reg_1254;
reg    ap_sig_cseq_ST_st42_fsm_30;
reg    ap_sig_bdd_592;
reg   [3:0] C3_dbias_addr_reg_1259;
reg    ap_sig_cseq_ST_st43_fsm_31;
reg    ap_sig_bdd_602;
reg   [31:0] C3_bias_load_reg_1269;
wire   [4:0] i_6_fu_880_p2;
reg   [4:0] i_6_reg_1277;
reg    ap_sig_cseq_ST_st57_fsm_45;
reg    ap_sig_bdd_612;
wire   [63:0] tmp_111_fu_886_p1;
reg   [63:0] tmp_111_reg_1282;
wire   [0:0] exitcond6_fu_874_p2;
wire   [9:0] C5_mapData_addr16_cast_fu_898_p1;
reg   [9:0] C5_mapData_addr16_cast_reg_1288;
wire   [4:0] j_19_fu_908_p2;
reg   [4:0] j_19_reg_1296;
reg    ap_sig_cseq_ST_st58_fsm_46;
reg    ap_sig_bdd_628;
wire   [31:0] C5_mapData_addr8_fu_939_p2;
reg   [31:0] C5_mapData_addr8_reg_1301;
wire   [0:0] exitcond5_fu_902_p2;
reg   [4:0] C5_bias_addr_reg_1306;
reg   [4:0] C5_dbias_addr_reg_1311;
wire   [2:0] k_4_fu_951_p2;
reg   [2:0] k_4_reg_1319;
reg    ap_sig_cseq_ST_st59_fsm_47;
reg    ap_sig_bdd_648;
wire   [31:0] C5_mapData_addr10_fu_972_p2;
reg   [31:0] C5_mapData_addr10_reg_1324;
wire   [0:0] exitcond4_fu_945_p2;
wire   [2:0] m_8_fu_984_p2;
reg   [2:0] m_8_reg_1332;
reg    ap_sig_cseq_ST_st60_fsm_48;
reg    ap_sig_bdd_662;
reg   [13:0] C5_mapData_addr_reg_1337;
wire   [0:0] exitcond3_fu_978_p2;
reg   [13:0] C5_dmapData_addr_reg_1342;
reg    ap_sig_cseq_ST_st61_fsm_49;
reg    ap_sig_bdd_677;
reg   [31:0] C5_mapData_load_reg_1352;
reg    ap_sig_cseq_ST_st71_fsm_59;
reg    ap_sig_bdd_686;
reg   [31:0] C5_bias_load_reg_1362;
wire   [3:0] i_7_fu_1011_p2;
reg   [3:0] i_7_reg_1370;
reg    ap_sig_cseq_ST_st85_fsm_73;
reg    ap_sig_bdd_696;
wire   [8:0] tmp_173_trn_cast_fu_1017_p1;
reg   [8:0] tmp_173_trn_cast_reg_1375;
wire   [0:0] exitcond2_fu_1005_p2;
wire   [4:0] j_4_fu_1027_p2;
reg   [4:0] j_4_reg_1383;
reg    ap_sig_cseq_ST_st86_fsm_74;
reg    ap_sig_bdd_710;
reg   [8:0] output_wei_addr_reg_1388;
wire   [0:0] exitcond1_fu_1021_p2;
reg   [8:0] output_dwei_addr_reg_1393;
reg    ap_sig_cseq_ST_st87_fsm_75;
reg    ap_sig_bdd_725;
reg   [31:0] output_wei_load_reg_1403;
wire   [3:0] i_23_fu_1080_p2;
reg   [3:0] i_23_reg_1411;
reg    ap_sig_cseq_ST_st97_fsm_85;
reg    ap_sig_bdd_735;
reg   [3:0] output_bias_addr_reg_1416;
wire   [0:0] exitcond_fu_1074_p2;
reg   [3:0] output_dbias_addr_reg_1421;
reg    ap_sig_cseq_ST_st98_fsm_86;
reg    ap_sig_bdd_750;
reg   [31:0] output_bias_load_reg_1431;
reg   [2:0] i_reg_330;
reg    ap_sig_cseq_ST_st28_fsm_27;
reg    ap_sig_bdd_767;
reg   [2:0] j_reg_341;
reg   [2:0] k_reg_352;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_bdd_780;
reg   [4:0] i_1_reg_363;
reg    ap_sig_cseq_ST_st56_fsm_44;
reg    ap_sig_bdd_789;
reg   [2:0] j_1_phi_fu_389_p4;
reg   [2:0] k_1_phi_fu_411_p4;
reg   [4:0] i_2_reg_429;
reg    ap_sig_cseq_ST_st84_fsm_72;
reg    ap_sig_bdd_810;
reg   [4:0] j_2_reg_440;
reg   [2:0] k_2_reg_451;
reg   [2:0] m_1_reg_462;
reg    ap_sig_cseq_ST_st70_fsm_58;
reg    ap_sig_bdd_829;
reg   [3:0] i_3_reg_473;
reg   [4:0] j_3_reg_484;
reg    ap_sig_cseq_ST_st96_fsm_84;
reg    ap_sig_bdd_845;
reg   [3:0] i_4_reg_495;
reg    ap_sig_cseq_ST_st107_fsm_95;
reg    ap_sig_bdd_854;
wire   [63:0] tmp_214_fu_646_p1;
wire   [63:0] tmp_213_fu_868_p1;
wire   [63:0] tmp_218_fu_999_p1;
wire   [63:0] tmp_217_fu_1068_p1;
wire   [63:0] tmp_122_fu_1086_p1;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_872;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_bdd_881;
reg    ap_sig_cseq_ST_st49_fsm_37;
reg    ap_sig_bdd_897;
reg    ap_sig_cseq_ST_st63_fsm_51;
reg    ap_sig_bdd_910;
reg    ap_sig_cseq_ST_st77_fsm_65;
reg    ap_sig_bdd_919;
reg    ap_sig_cseq_ST_st89_fsm_77;
reg    ap_sig_bdd_930;
reg    ap_sig_cseq_ST_st100_fsm_88;
reg    ap_sig_bdd_941;
reg   [31:0] grp_fu_506_p0;
wire   [31:0] grp_fu_506_p1;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_952;
reg    ap_sig_cseq_ST_st23_fsm_22;
reg    ap_sig_bdd_959;
reg    ap_sig_cseq_ST_st51_fsm_39;
reg    ap_sig_bdd_966;
reg    ap_sig_cseq_ST_st65_fsm_53;
reg    ap_sig_bdd_973;
reg    ap_sig_cseq_ST_st79_fsm_67;
reg    ap_sig_bdd_980;
reg    ap_sig_cseq_ST_st91_fsm_79;
reg    ap_sig_bdd_987;
reg    ap_sig_cseq_ST_st102_fsm_90;
reg    ap_sig_bdd_994;
reg   [31:0] grp_fu_510_p0;
reg   [31:0] grp_fu_510_p1;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_bdd_1014;
reg    ap_sig_cseq_ST_st47_fsm_35;
reg    ap_sig_bdd_1021;
reg    ap_sig_cseq_ST_st75_fsm_63;
reg    ap_sig_bdd_1029;
wire   [4:0] tmp_208_fu_564_p3;
wire   [5:0] tmp_trn_cast_fu_560_p1;
wire   [5:0] p_shl_cast_fu_572_p1;
wire   [5:0] tmp_172_trn_cast_fu_594_p1;
wire   [5:0] C1_mapData_addr2_fu_598_p2;
wire   [7:0] tmp_135_fu_607_p3;
wire   [31:0] C1_mapData_addr2_cast_fu_603_p1;
wire   [31:0] p_shl_fu_615_p1;
wire   [31:0] tmp_185_trn_fu_637_p1;
wire   [31:0] C1_mapData_addr4_fu_641_p2;
wire   [7:0] tmp_209_fu_668_p3;
wire   [5:0] tmp_210_fu_680_p3;
wire   [8:0] p_shl64_cast_fu_676_p1;
wire   [8:0] p_shl65_cast_fu_688_p1;
wire   [8:0] C3_mapData_addr14_fu_692_p2;
wire   [0:0] exitcond_flatten6_fu_714_p2;
wire   [0:0] exitcond17_fu_734_p2;
wire   [0:0] not_exitcond_flatten_fu_728_p2;
wire   [2:0] j_s_fu_746_p2;
wire   [2:0] k_1_mid_fu_720_p3;
wire   [0:0] exitcond7_mid_fu_740_p2;
wire   [0:0] tmp_212_fu_766_p2;
wire   [2:0] k_19_fu_760_p2;
wire   [9:0] tmp_177_trn_cast_fu_788_p1;
wire  signed [9:0] C3_mapData_addr15_fu_792_p2;
wire   [11:0] tmp_136_fu_805_p3;
wire  signed [31:0] p_shl44_fu_813_p1;
wire  signed [31:0] C3_mapData_addr20_cast_fu_797_p1;
wire   [31:0] tmp_191_trn_fu_801_p1;
wire  signed [31:0] C3_mapData_addr16_fu_817_p2;
wire   [5:0] indvar_flatten_op_fu_835_p2;
wire   [31:0] tmp_137_fu_852_p2;
wire   [31:0] tmp_193_trn_fu_849_p1;
wire  signed [31:0] C3_mapData_addr18_fu_857_p2;
wire  signed [31:0] C3_mapData_addr19_fu_862_p2;
wire   [8:0] tmp_211_fu_890_p3;
wire   [9:0] tmp_184_trn_cast_fu_914_p1;
wire   [9:0] C5_mapData_addr7_fu_918_p2;
wire   [11:0] tmp_138_fu_927_p3;
wire   [31:0] C5_mapData_addr17_cast_fu_923_p1;
wire   [31:0] p_shl45_fu_935_p1;
wire   [31:0] tmp_192_trn_fu_957_p1;
wire   [31:0] C5_mapData_addr9_fu_961_p2;
wire   [31:0] tmp_139_fu_966_p2;
wire   [31:0] tmp_196_trn_fu_990_p1;
wire   [31:0] C5_mapData_addr11_fu_994_p2;
wire   [7:0] tmp_215_fu_1033_p3;
wire   [5:0] tmp_216_fu_1045_p3;
wire   [8:0] p_shl71_cast_fu_1053_p1;
wire   [8:0] p_shl70_cast_fu_1041_p1;
wire   [8:0] output_wei_addr1_fu_1057_p2;
wire   [8:0] output_wei_addr2_fu_1063_p2;
wire    grp_fu_506_ce;
wire    grp_fu_510_ce;
reg   [95:0] ap_NS_fsm;


dateport_fsub_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dateport_fsub_32ns_32ns_32_5_full_dsp_U107(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_506_p0 ),
    .din1( grp_fu_506_p1 ),
    .ce( grp_fu_506_ce ),
    .dout( grp_fu_506_p2 )
);

dateport_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dateport_fmul_32ns_32ns_32_4_max_dsp_U108(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_510_p0 ),
    .din1( grp_fu_510_p1 ),
    .ce( grp_fu_510_ce ),
    .dout( grp_fu_510_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_29) & ~(ap_const_lv1_0 == exitcond_flatten_fu_702_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) & (ap_const_lv1_0 == exitcond10_fu_652_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_29) & (ap_const_lv1_0 == exitcond_flatten_fu_702_p2))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) & (ap_const_lv1_0 == exitcond10_fu_652_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_29) & ~(ap_const_lv1_0 == exitcond_flatten_fu_702_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it10 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it10
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
    end
end

/// ap_reg_ppiten_pp0_it11 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it11
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
    end
end

/// ap_reg_ppiten_pp0_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it3
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
    end
end

/// ap_reg_ppiten_pp0_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it4
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
    end
end

/// ap_reg_ppiten_pp0_it5 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it5
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
    end
end

/// ap_reg_ppiten_pp0_it6 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it6
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
    end
end

/// ap_reg_ppiten_pp0_it7 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it7
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
    end
end

/// ap_reg_ppiten_pp0_it8 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it8
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
    end
end

/// ap_reg_ppiten_pp0_it9 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it9
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond13_fu_544_p2))) begin
        i_1_reg_363 <= ap_const_lv5_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_44)) begin
        i_1_reg_363 <= i_5_reg_1176;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) & ~(ap_const_lv1_0 == exitcond10_fu_652_p2))) begin
        i_2_reg_429 <= ap_const_lv5_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st84_fsm_72)) begin
        i_2_reg_429 <= i_6_reg_1277;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st86_fsm_74) & ~(ap_const_lv1_0 == exitcond1_fu_1021_p2))) begin
        i_3_reg_473 <= i_7_reg_1370;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_45) & ~(ap_const_lv1_0 == exitcond6_fu_874_p2))) begin
        i_3_reg_473 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st85_fsm_73) & ~(ap_const_lv1_0 == exitcond2_fu_1005_p2))) begin
        i_4_reg_495 <= ap_const_lv4_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st107_fsm_95)) begin
        i_4_reg_495 <= i_23_reg_1411;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        i_reg_330 <= i_22_reg_1095;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_330 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_29) & (ap_const_lv1_0 == exitcond_flatten_fu_702_p2))) begin
        indvar_flatten2_reg_374 <= indvar_flatten_next2_fu_708_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) & (ap_const_lv1_0 == exitcond10_fu_652_p2))) begin
        indvar_flatten2_reg_374 <= ap_const_lv8_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_29) & (ap_const_lv1_0 == exitcond_flatten_fu_702_p2))) begin
        indvar_flatten_reg_396 <= indvar_flatten_next_fu_841_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) & (ap_const_lv1_0 == exitcond10_fu_652_p2))) begin
        indvar_flatten_reg_396 <= ap_const_lv6_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_29) & (exitcond_flatten_reg_1192 == ap_const_lv1_0))) begin
        j_1_reg_385 <= j_1_mid2_reg_1201;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) & (ap_const_lv1_0 == exitcond10_fu_652_p2))) begin
        j_1_reg_385 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st59_fsm_47) & ~(ap_const_lv1_0 == exitcond4_fu_945_p2))) begin
        j_2_reg_440 <= j_19_reg_1296;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_45) & (ap_const_lv1_0 == exitcond6_fu_874_p2))) begin
        j_2_reg_440 <= ap_const_lv5_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st85_fsm_73) & (ap_const_lv1_0 == exitcond2_fu_1005_p2))) begin
        j_3_reg_484 <= ap_const_lv5_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st96_fsm_84)) begin
        j_3_reg_484 <= j_4_reg_1383;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == exitcond11_fu_625_p2))) begin
        j_reg_341 <= j_18_reg_1114;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond13_fu_544_p2))) begin
        j_reg_341 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_29) & (exitcond_flatten_reg_1192 == ap_const_lv1_0))) begin
        k_1_reg_407 <= k_1_mid2_reg_1211;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) & (ap_const_lv1_0 == exitcond10_fu_652_p2))) begin
        k_1_reg_407 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st60_fsm_48) & ~(ap_const_lv1_0 == exitcond3_fu_978_p2))) begin
        k_2_reg_451 <= k_4_reg_1319;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_46) & (ap_const_lv1_0 == exitcond5_fu_902_p2))) begin
        k_2_reg_451 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond12_fu_582_p2))) begin
        k_reg_352 <= ap_const_lv3_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        k_reg_352 <= k_3_reg_1137;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st59_fsm_47) & (ap_const_lv1_0 == exitcond4_fu_945_p2))) begin
        m_1_reg_462 <= ap_const_lv3_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st70_fsm_58)) begin
        m_1_reg_462 <= m_8_reg_1332;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_29) & (ap_const_lv1_0 == exitcond_flatten_fu_702_p2))) begin
        m_reg_418 <= m_7_fu_829_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) & (ap_const_lv1_0 == exitcond10_fu_652_p2))) begin
        m_reg_418 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == exitcond12_fu_582_p2))) begin
        C1_bias_addr_reg_1124 <= tmp_reg_1100;
        C1_dbias_addr_reg_1129 <= tmp_reg_1100;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        C1_bias_load_reg_1167 <= C1_bias_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == exitcond11_fu_625_p2))) begin
        C1_dmapData_addr_reg_1147 <= tmp_214_fu_646_p1;
        C1_mapData_addr_reg_1142 <= tmp_214_fu_646_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond13_fu_544_p2))) begin
        C1_mapData_addr1_reg_1106 <= C1_mapData_addr1_fu_576_p2;
        tmp_reg_1100[2 : 0] <= tmp_fu_556_p1[2 : 0];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond12_fu_582_p2))) begin
        C1_mapData_addr3_reg_1119 <= C1_mapData_addr3_fu_619_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        C1_mapData_load_reg_1157 <= C1_mapData_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_30)) begin
        C3_bias_addr_reg_1254 <= tmp_s_reg_1181;
        C3_dbias_addr_reg_1259 <= tmp_s_reg_1181;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_38)) begin
        C3_bias_load_reg_1269 <= C3_bias_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_29) & (exitcond_flatten_reg_1192 == ap_const_lv1_0))) begin
        C3_dmapData_addr_reg_1238 <= tmp_213_fu_868_p1;
        C3_mapData_addr_reg_1232 <= tmp_213_fu_868_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_29) & (ap_const_lv1_0 == exitcond_flatten_fu_702_p2))) begin
        C3_mapData_addr17_reg_1216 <= C3_mapData_addr17_fu_823_p2;
        m_mid2_reg_1206 <= m_mid2_fu_772_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) & (ap_const_lv1_0 == exitcond10_fu_652_p2))) begin
        C3_mapData_addr19_cast_reg_1187[9 : 1] <= C3_mapData_addr19_cast_fu_698_p1[9 : 1];
        tmp_s_reg_1181[4 : 0] <= tmp_s_fu_664_p1[4 : 0];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it4 == ap_const_lv1_0)) begin
        C3_mapData_load_reg_1249 <= C3_mapData_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_46) & ~(ap_const_lv1_0 == exitcond5_fu_902_p2))) begin
        C5_bias_addr_reg_1306 <= tmp_111_reg_1282;
        C5_dbias_addr_reg_1311 <= tmp_111_reg_1282;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st78_fsm_66)) begin
        C5_bias_load_reg_1362 <= C5_bias_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st60_fsm_48) & (ap_const_lv1_0 == exitcond3_fu_978_p2))) begin
        C5_dmapData_addr_reg_1342 <= tmp_218_fu_999_p1;
        C5_mapData_addr_reg_1337 <= tmp_218_fu_999_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st59_fsm_47) & (ap_const_lv1_0 == exitcond4_fu_945_p2))) begin
        C5_mapData_addr10_reg_1324 <= C5_mapData_addr10_fu_972_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_45) & (ap_const_lv1_0 == exitcond6_fu_874_p2))) begin
        C5_mapData_addr16_cast_reg_1288[8 : 4] <= C5_mapData_addr16_cast_fu_898_p1[8 : 4];
        tmp_111_reg_1282[4 : 0] <= tmp_111_fu_886_p1[4 : 0];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_46) & (ap_const_lv1_0 == exitcond5_fu_902_p2))) begin
        C5_mapData_addr8_reg_1301 <= C5_mapData_addr8_fu_939_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st64_fsm_52)) begin
        C5_mapData_load_reg_1352 <= C5_mapData_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_true == ap_true)) begin
        ap_reg_ppstg_C3_mapData_addr_reg_1232_pp0_it10 <= ap_reg_ppstg_C3_mapData_addr_reg_1232_pp0_it9;
        ap_reg_ppstg_C3_mapData_addr_reg_1232_pp0_it2 <= C3_mapData_addr_reg_1232;
        ap_reg_ppstg_C3_mapData_addr_reg_1232_pp0_it3 <= ap_reg_ppstg_C3_mapData_addr_reg_1232_pp0_it2;
        ap_reg_ppstg_C3_mapData_addr_reg_1232_pp0_it4 <= ap_reg_ppstg_C3_mapData_addr_reg_1232_pp0_it3;
        ap_reg_ppstg_C3_mapData_addr_reg_1232_pp0_it5 <= ap_reg_ppstg_C3_mapData_addr_reg_1232_pp0_it4;
        ap_reg_ppstg_C3_mapData_addr_reg_1232_pp0_it6 <= ap_reg_ppstg_C3_mapData_addr_reg_1232_pp0_it5;
        ap_reg_ppstg_C3_mapData_addr_reg_1232_pp0_it7 <= ap_reg_ppstg_C3_mapData_addr_reg_1232_pp0_it6;
        ap_reg_ppstg_C3_mapData_addr_reg_1232_pp0_it8 <= ap_reg_ppstg_C3_mapData_addr_reg_1232_pp0_it7;
        ap_reg_ppstg_C3_mapData_addr_reg_1232_pp0_it9 <= ap_reg_ppstg_C3_mapData_addr_reg_1232_pp0_it8;
        ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it10 <= ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it9;
        ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it2 <= ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it1;
        ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it3 <= ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it2;
        ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it4 <= ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it3;
        ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it5 <= ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it4;
        ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it6 <= ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it5;
        ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it7 <= ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it6;
        ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it8 <= ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it7;
        ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it9 <= ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it8;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_29)) begin
        ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it1 <= exitcond_flatten_reg_1192;
        exitcond_flatten_reg_1192 <= exitcond_flatten_fu_702_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_22_reg_1095 <= i_22_fu_550_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st97_fsm_85)) begin
        i_23_reg_1411 <= i_23_fu_1080_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        i_5_reg_1176 <= i_5_fu_658_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_45)) begin
        i_6_reg_1277 <= i_6_fu_880_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st85_fsm_73)) begin
        i_7_reg_1370 <= i_7_fu_1011_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        j_18_reg_1114 <= j_18_fu_588_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_46)) begin
        j_19_reg_1296 <= j_19_fu_908_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_29) & (ap_const_lv1_0 == exitcond_flatten_fu_702_p2))) begin
        j_1_mid2_reg_1201 <= j_1_mid2_fu_752_p3;
        k_1_mid2_reg_1211 <= k_1_mid2_fu_780_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st86_fsm_74)) begin
        j_4_reg_1383 <= j_4_fu_1027_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        k_3_reg_1137 <= k_3_fu_631_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st59_fsm_47)) begin
        k_4_reg_1319 <= k_4_fu_951_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st60_fsm_48)) begin
        m_8_reg_1332 <= m_8_fu_984_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st97_fsm_85) & (ap_const_lv1_0 == exitcond_fu_1074_p2))) begin
        output_bias_addr_reg_1416 <= tmp_122_fu_1086_p1;
        output_dbias_addr_reg_1421 <= tmp_122_fu_1086_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st101_fsm_89)) begin
        output_bias_load_reg_1431 <= output_bias_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st86_fsm_74) & (ap_const_lv1_0 == exitcond1_fu_1021_p2))) begin
        output_dwei_addr_reg_1393 <= tmp_217_fu_1068_p1;
        output_wei_addr_reg_1388 <= tmp_217_fu_1068_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st90_fsm_78)) begin
        output_wei_load_reg_1403 <= output_wei_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17) | (ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) | (ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it4 == ap_const_lv1_0) | (ap_const_logic_1 == ap_sig_cseq_ST_st46_fsm_34) | (ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_38) | (ap_const_logic_1 == ap_sig_cseq_ST_st64_fsm_52) | (ap_const_logic_1 == ap_sig_cseq_ST_st74_fsm_62) | (ap_const_logic_1 == ap_sig_cseq_ST_st78_fsm_66) | (ap_const_logic_1 == ap_sig_cseq_ST_st90_fsm_78) | (ap_const_logic_1 == ap_sig_cseq_ST_st101_fsm_89))) begin
        reg_526 <= grp_fu_510_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12) | (ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it9) | (ap_const_logic_1 == ap_sig_cseq_ST_st55_fsm_43) | (ap_const_logic_1 == ap_sig_cseq_ST_st69_fsm_57) | (ap_const_logic_1 == ap_sig_cseq_ST_st83_fsm_71) | (ap_const_logic_1 == ap_sig_cseq_ST_st95_fsm_83) | (ap_const_logic_1 == ap_sig_cseq_ST_st106_fsm_94))) begin
        reg_532 <= grp_fu_506_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st85_fsm_73) & (ap_const_lv1_0 == exitcond2_fu_1005_p2))) begin
        tmp_173_trn_cast_reg_1375[3 : 0] <= tmp_173_trn_cast_fu_1017_p1[3 : 0];
    end
end

/// C1_bias_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st28_fsm_27 or ap_sig_cseq_ST_st21_fsm_20)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27) | (ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20))) begin
        C1_bias_ce0 = ap_const_logic_1;
    end else begin
        C1_bias_ce0 = ap_const_logic_0;
    end
end

/// C1_bias_we0 assign process. ///
always @ (ap_sig_cseq_ST_st28_fsm_27)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        C1_bias_we0 = ap_const_logic_1;
    end else begin
        C1_bias_we0 = ap_const_logic_0;
    end
end

/// C1_dbias_address0 assign process. ///
always @ (tmp_reg_1100 or ap_sig_cseq_ST_st3_fsm_2 or C1_dbias_addr_reg_1129 or ap_sig_cseq_ST_st15_fsm_14)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        C1_dbias_address0 = C1_dbias_addr_reg_1129;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        C1_dbias_address0 = tmp_reg_1100;
    end else begin
        C1_dbias_address0 = 'bx;
    end
end

/// C1_dbias_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st15_fsm_14)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14))) begin
        C1_dbias_ce0 = ap_const_logic_1;
    end else begin
        C1_dbias_ce0 = ap_const_logic_0;
    end
end

/// C1_dbias_we0 assign process. ///
always @ (ap_sig_cseq_ST_st15_fsm_14)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        C1_dbias_we0 = ap_const_logic_1;
    end else begin
        C1_dbias_we0 = ap_const_logic_0;
    end
end

/// C1_dmapData_address0 assign process. ///
always @ (ap_sig_cseq_ST_st4_fsm_3 or C1_dmapData_addr_reg_1147 or ap_sig_cseq_ST_st5_fsm_4 or tmp_214_fu_646_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        C1_dmapData_address0 = C1_dmapData_addr_reg_1147;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        C1_dmapData_address0 = tmp_214_fu_646_p1;
    end else begin
        C1_dmapData_address0 = 'bx;
    end
end

/// C1_dmapData_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st5_fsm_4)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4))) begin
        C1_dmapData_ce0 = ap_const_logic_1;
    end else begin
        C1_dmapData_ce0 = ap_const_logic_0;
    end
end

/// C1_dmapData_we0 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        C1_dmapData_we0 = ap_const_logic_1;
    end else begin
        C1_dmapData_we0 = ap_const_logic_0;
    end
end

/// C1_mapData_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st14_fsm_13 or ap_sig_cseq_ST_st7_fsm_6)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6))) begin
        C1_mapData_ce0 = ap_const_logic_1;
    end else begin
        C1_mapData_ce0 = ap_const_logic_0;
    end
end

/// C1_mapData_we0 assign process. ///
always @ (ap_sig_cseq_ST_st14_fsm_13)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        C1_mapData_we0 = ap_const_logic_1;
    end else begin
        C1_mapData_we0 = ap_const_logic_0;
    end
end

/// C3_bias_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st56_fsm_44 or ap_sig_cseq_ST_st49_fsm_37)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_44) | (ap_const_logic_1 == ap_sig_cseq_ST_st49_fsm_37))) begin
        C3_bias_ce0 = ap_const_logic_1;
    end else begin
        C3_bias_ce0 = ap_const_logic_0;
    end
end

/// C3_bias_we0 assign process. ///
always @ (ap_sig_cseq_ST_st56_fsm_44)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st56_fsm_44)) begin
        C3_bias_we0 = ap_const_logic_1;
    end else begin
        C3_bias_we0 = ap_const_logic_0;
    end
end

/// C3_dbias_address0 assign process. ///
always @ (tmp_s_reg_1181 or ap_sig_cseq_ST_st42_fsm_30 or C3_dbias_addr_reg_1259 or ap_sig_cseq_ST_st43_fsm_31)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_31)) begin
        C3_dbias_address0 = C3_dbias_addr_reg_1259;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_30)) begin
        C3_dbias_address0 = tmp_s_reg_1181;
    end else begin
        C3_dbias_address0 = 'bx;
    end
end

/// C3_dbias_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st42_fsm_30 or ap_sig_cseq_ST_st43_fsm_31)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_30) | (ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_31))) begin
        C3_dbias_ce0 = ap_const_logic_1;
    end else begin
        C3_dbias_ce0 = ap_const_logic_0;
    end
end

/// C3_dbias_we0 assign process. ///
always @ (ap_sig_cseq_ST_st43_fsm_31)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_31)) begin
        C3_dbias_we0 = ap_const_logic_1;
    end else begin
        C3_dbias_we0 = ap_const_logic_0;
    end
end

/// C3_dmapData_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg0_fsm_29)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_29))) begin
        C3_dmapData_ce0 = ap_const_logic_1;
    end else begin
        C3_dmapData_ce0 = ap_const_logic_0;
    end
end

/// C3_dmapData_ce1 assign process. ///
always @ (ap_reg_ppiten_pp0_it2)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) begin
        C3_dmapData_ce1 = ap_const_logic_1;
    end else begin
        C3_dmapData_ce1 = ap_const_logic_0;
    end
end

/// C3_dmapData_we1 assign process. ///
always @ (ap_reg_ppiten_pp0_it2 or ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it1))) begin
        C3_dmapData_we1 = ap_const_logic_1;
    end else begin
        C3_dmapData_we1 = ap_const_logic_0;
    end
end

/// C3_mapData_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it4)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it4)) begin
        C3_mapData_ce0 = ap_const_logic_1;
    end else begin
        C3_mapData_ce0 = ap_const_logic_0;
    end
end

/// C3_mapData_ce1 assign process. ///
always @ (ap_reg_ppiten_pp0_it11)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it11)) begin
        C3_mapData_ce1 = ap_const_logic_1;
    end else begin
        C3_mapData_ce1 = ap_const_logic_0;
    end
end

/// C3_mapData_we1 assign process. ///
always @ (ap_reg_ppiten_pp0_it11 or ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it10)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it11) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1192_pp0_it10))) begin
        C3_mapData_we1 = ap_const_logic_1;
    end else begin
        C3_mapData_we1 = ap_const_logic_0;
    end
end

/// C5_bias_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st84_fsm_72 or ap_sig_cseq_ST_st77_fsm_65)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st84_fsm_72) | (ap_const_logic_1 == ap_sig_cseq_ST_st77_fsm_65))) begin
        C5_bias_ce0 = ap_const_logic_1;
    end else begin
        C5_bias_ce0 = ap_const_logic_0;
    end
end

/// C5_bias_we0 assign process. ///
always @ (ap_sig_cseq_ST_st84_fsm_72)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st84_fsm_72)) begin
        C5_bias_we0 = ap_const_logic_1;
    end else begin
        C5_bias_we0 = ap_const_logic_0;
    end
end

/// C5_dbias_address0 assign process. ///
always @ (tmp_111_reg_1282 or ap_sig_cseq_ST_st58_fsm_46 or C5_dbias_addr_reg_1311 or ap_sig_cseq_ST_st71_fsm_59)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st71_fsm_59)) begin
        C5_dbias_address0 = C5_dbias_addr_reg_1311;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_46)) begin
        C5_dbias_address0 = tmp_111_reg_1282;
    end else begin
        C5_dbias_address0 = 'bx;
    end
end

/// C5_dbias_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st58_fsm_46 or ap_sig_cseq_ST_st71_fsm_59)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_46) | (ap_const_logic_1 == ap_sig_cseq_ST_st71_fsm_59))) begin
        C5_dbias_ce0 = ap_const_logic_1;
    end else begin
        C5_dbias_ce0 = ap_const_logic_0;
    end
end

/// C5_dbias_we0 assign process. ///
always @ (ap_sig_cseq_ST_st71_fsm_59)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st71_fsm_59)) begin
        C5_dbias_we0 = ap_const_logic_1;
    end else begin
        C5_dbias_we0 = ap_const_logic_0;
    end
end

/// C5_dmapData_address0 assign process. ///
always @ (ap_sig_cseq_ST_st60_fsm_48 or C5_dmapData_addr_reg_1342 or ap_sig_cseq_ST_st61_fsm_49 or tmp_218_fu_999_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st61_fsm_49)) begin
        C5_dmapData_address0 = C5_dmapData_addr_reg_1342;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st60_fsm_48)) begin
        C5_dmapData_address0 = tmp_218_fu_999_p1;
    end else begin
        C5_dmapData_address0 = 'bx;
    end
end

/// C5_dmapData_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st60_fsm_48 or ap_sig_cseq_ST_st61_fsm_49)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st60_fsm_48) | (ap_const_logic_1 == ap_sig_cseq_ST_st61_fsm_49))) begin
        C5_dmapData_ce0 = ap_const_logic_1;
    end else begin
        C5_dmapData_ce0 = ap_const_logic_0;
    end
end

/// C5_dmapData_we0 assign process. ///
always @ (ap_sig_cseq_ST_st61_fsm_49)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st61_fsm_49)) begin
        C5_dmapData_we0 = ap_const_logic_1;
    end else begin
        C5_dmapData_we0 = ap_const_logic_0;
    end
end

/// C5_mapData_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st70_fsm_58 or ap_sig_cseq_ST_st63_fsm_51)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st70_fsm_58) | (ap_const_logic_1 == ap_sig_cseq_ST_st63_fsm_51))) begin
        C5_mapData_ce0 = ap_const_logic_1;
    end else begin
        C5_mapData_ce0 = ap_const_logic_0;
    end
end

/// C5_mapData_we0 assign process. ///
always @ (ap_sig_cseq_ST_st70_fsm_58)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st70_fsm_58)) begin
        C5_mapData_we0 = ap_const_logic_1;
    end else begin
        C5_mapData_we0 = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st97_fsm_85 or exitcond_fu_1074_p2)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st97_fsm_85) & ~(ap_const_lv1_0 == exitcond_fu_1074_p2)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st97_fsm_85 or exitcond_fu_1074_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st97_fsm_85) & ~(ap_const_lv1_0 == exitcond_fu_1074_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_29 assign process. ///
always @ (ap_sig_bdd_529)
begin
    if (ap_sig_bdd_529) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_29 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_29 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st100_fsm_88 assign process. ///
always @ (ap_sig_bdd_941)
begin
    if (ap_sig_bdd_941) begin
        ap_sig_cseq_ST_st100_fsm_88 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st100_fsm_88 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st101_fsm_89 assign process. ///
always @ (ap_sig_bdd_373)
begin
    if (ap_sig_bdd_373) begin
        ap_sig_cseq_ST_st101_fsm_89 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st101_fsm_89 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st102_fsm_90 assign process. ///
always @ (ap_sig_bdd_994)
begin
    if (ap_sig_bdd_994) begin
        ap_sig_cseq_ST_st102_fsm_90 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st102_fsm_90 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st106_fsm_94 assign process. ///
always @ (ap_sig_bdd_433)
begin
    if (ap_sig_bdd_433) begin
        ap_sig_cseq_ST_st106_fsm_94 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st106_fsm_94 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st107_fsm_95 assign process. ///
always @ (ap_sig_bdd_854)
begin
    if (ap_sig_bdd_854) begin
        ap_sig_cseq_ST_st107_fsm_95 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st107_fsm_95 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st13_fsm_12 assign process. ///
always @ (ap_sig_bdd_383)
begin
    if (ap_sig_bdd_383) begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st14_fsm_13 assign process. ///
always @ (ap_sig_bdd_780)
begin
    if (ap_sig_bdd_780) begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st15_fsm_14 assign process. ///
always @ (ap_sig_bdd_503)
begin
    if (ap_sig_bdd_503) begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st18_fsm_17 assign process. ///
always @ (ap_sig_bdd_304)
begin
    if (ap_sig_bdd_304) begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st19_fsm_18 assign process. ///
always @ (ap_sig_bdd_1014)
begin
    if (ap_sig_bdd_1014) begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_114)
begin
    if (ap_sig_bdd_114) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st21_fsm_20 assign process. ///
always @ (ap_sig_bdd_881)
begin
    if (ap_sig_bdd_881) begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st22_fsm_21 assign process. ///
always @ (ap_sig_bdd_312)
begin
    if (ap_sig_bdd_312) begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st23_fsm_22 assign process. ///
always @ (ap_sig_bdd_959)
begin
    if (ap_sig_bdd_959) begin
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st27_fsm_26 assign process. ///
always @ (ap_sig_bdd_390)
begin
    if (ap_sig_bdd_390) begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st28_fsm_27 assign process. ///
always @ (ap_sig_bdd_767)
begin
    if (ap_sig_bdd_767) begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st29_fsm_28 assign process. ///
always @ (ap_sig_bdd_513)
begin
    if (ap_sig_bdd_513) begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_443)
begin
    if (ap_sig_bdd_443) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_459)
begin
    if (ap_sig_bdd_459) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st42_fsm_30 assign process. ///
always @ (ap_sig_bdd_592)
begin
    if (ap_sig_bdd_592) begin
        ap_sig_cseq_ST_st42_fsm_30 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st42_fsm_30 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st43_fsm_31 assign process. ///
always @ (ap_sig_bdd_602)
begin
    if (ap_sig_bdd_602) begin
        ap_sig_cseq_ST_st43_fsm_31 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st43_fsm_31 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st46_fsm_34 assign process. ///
always @ (ap_sig_bdd_325)
begin
    if (ap_sig_bdd_325) begin
        ap_sig_cseq_ST_st46_fsm_34 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st46_fsm_34 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st47_fsm_35 assign process. ///
always @ (ap_sig_bdd_1021)
begin
    if (ap_sig_bdd_1021) begin
        ap_sig_cseq_ST_st47_fsm_35 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st47_fsm_35 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st49_fsm_37 assign process. ///
always @ (ap_sig_bdd_897)
begin
    if (ap_sig_bdd_897) begin
        ap_sig_cseq_ST_st49_fsm_37 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st49_fsm_37 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_479)
begin
    if (ap_sig_bdd_479) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st50_fsm_38 assign process. ///
always @ (ap_sig_bdd_333)
begin
    if (ap_sig_bdd_333) begin
        ap_sig_cseq_ST_st50_fsm_38 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st50_fsm_38 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st51_fsm_39 assign process. ///
always @ (ap_sig_bdd_966)
begin
    if (ap_sig_bdd_966) begin
        ap_sig_cseq_ST_st51_fsm_39 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st51_fsm_39 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st55_fsm_43 assign process. ///
always @ (ap_sig_bdd_401)
begin
    if (ap_sig_bdd_401) begin
        ap_sig_cseq_ST_st55_fsm_43 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st55_fsm_43 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st56_fsm_44 assign process. ///
always @ (ap_sig_bdd_789)
begin
    if (ap_sig_bdd_789) begin
        ap_sig_cseq_ST_st56_fsm_44 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st56_fsm_44 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st57_fsm_45 assign process. ///
always @ (ap_sig_bdd_612)
begin
    if (ap_sig_bdd_612) begin
        ap_sig_cseq_ST_st57_fsm_45 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st57_fsm_45 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st58_fsm_46 assign process. ///
always @ (ap_sig_bdd_628)
begin
    if (ap_sig_bdd_628) begin
        ap_sig_cseq_ST_st58_fsm_46 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st58_fsm_46 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st59_fsm_47 assign process. ///
always @ (ap_sig_bdd_648)
begin
    if (ap_sig_bdd_648) begin
        ap_sig_cseq_ST_st59_fsm_47 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st59_fsm_47 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_494)
begin
    if (ap_sig_bdd_494) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st60_fsm_48 assign process. ///
always @ (ap_sig_bdd_662)
begin
    if (ap_sig_bdd_662) begin
        ap_sig_cseq_ST_st60_fsm_48 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st60_fsm_48 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st61_fsm_49 assign process. ///
always @ (ap_sig_bdd_677)
begin
    if (ap_sig_bdd_677) begin
        ap_sig_cseq_ST_st61_fsm_49 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st61_fsm_49 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st63_fsm_51 assign process. ///
always @ (ap_sig_bdd_910)
begin
    if (ap_sig_bdd_910) begin
        ap_sig_cseq_ST_st63_fsm_51 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st63_fsm_51 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st64_fsm_52 assign process. ///
always @ (ap_sig_bdd_341)
begin
    if (ap_sig_bdd_341) begin
        ap_sig_cseq_ST_st64_fsm_52 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st64_fsm_52 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st65_fsm_53 assign process. ///
always @ (ap_sig_bdd_973)
begin
    if (ap_sig_bdd_973) begin
        ap_sig_cseq_ST_st65_fsm_53 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st65_fsm_53 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st69_fsm_57 assign process. ///
always @ (ap_sig_bdd_409)
begin
    if (ap_sig_bdd_409) begin
        ap_sig_cseq_ST_st69_fsm_57 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st69_fsm_57 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st70_fsm_58 assign process. ///
always @ (ap_sig_bdd_829)
begin
    if (ap_sig_bdd_829) begin
        ap_sig_cseq_ST_st70_fsm_58 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st70_fsm_58 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st71_fsm_59 assign process. ///
always @ (ap_sig_bdd_686)
begin
    if (ap_sig_bdd_686) begin
        ap_sig_cseq_ST_st71_fsm_59 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st71_fsm_59 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st74_fsm_62 assign process. ///
always @ (ap_sig_bdd_349)
begin
    if (ap_sig_bdd_349) begin
        ap_sig_cseq_ST_st74_fsm_62 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st74_fsm_62 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st75_fsm_63 assign process. ///
always @ (ap_sig_bdd_1029)
begin
    if (ap_sig_bdd_1029) begin
        ap_sig_cseq_ST_st75_fsm_63 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st75_fsm_63 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st77_fsm_65 assign process. ///
always @ (ap_sig_bdd_919)
begin
    if (ap_sig_bdd_919) begin
        ap_sig_cseq_ST_st77_fsm_65 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st77_fsm_65 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st78_fsm_66 assign process. ///
always @ (ap_sig_bdd_357)
begin
    if (ap_sig_bdd_357) begin
        ap_sig_cseq_ST_st78_fsm_66 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st78_fsm_66 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st79_fsm_67 assign process. ///
always @ (ap_sig_bdd_980)
begin
    if (ap_sig_bdd_980) begin
        ap_sig_cseq_ST_st79_fsm_67 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st79_fsm_67 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_872)
begin
    if (ap_sig_bdd_872) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st83_fsm_71 assign process. ///
always @ (ap_sig_bdd_417)
begin
    if (ap_sig_bdd_417) begin
        ap_sig_cseq_ST_st83_fsm_71 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st83_fsm_71 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st84_fsm_72 assign process. ///
always @ (ap_sig_bdd_810)
begin
    if (ap_sig_bdd_810) begin
        ap_sig_cseq_ST_st84_fsm_72 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st84_fsm_72 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st85_fsm_73 assign process. ///
always @ (ap_sig_bdd_696)
begin
    if (ap_sig_bdd_696) begin
        ap_sig_cseq_ST_st85_fsm_73 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st85_fsm_73 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st86_fsm_74 assign process. ///
always @ (ap_sig_bdd_710)
begin
    if (ap_sig_bdd_710) begin
        ap_sig_cseq_ST_st86_fsm_74 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st86_fsm_74 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st87_fsm_75 assign process. ///
always @ (ap_sig_bdd_725)
begin
    if (ap_sig_bdd_725) begin
        ap_sig_cseq_ST_st87_fsm_75 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st87_fsm_75 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st89_fsm_77 assign process. ///
always @ (ap_sig_bdd_930)
begin
    if (ap_sig_bdd_930) begin
        ap_sig_cseq_ST_st89_fsm_77 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st89_fsm_77 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_7 assign process. ///
always @ (ap_sig_bdd_268)
begin
    if (ap_sig_bdd_268) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st90_fsm_78 assign process. ///
always @ (ap_sig_bdd_365)
begin
    if (ap_sig_bdd_365) begin
        ap_sig_cseq_ST_st90_fsm_78 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st90_fsm_78 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st91_fsm_79 assign process. ///
always @ (ap_sig_bdd_987)
begin
    if (ap_sig_bdd_987) begin
        ap_sig_cseq_ST_st91_fsm_79 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st91_fsm_79 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st95_fsm_83 assign process. ///
always @ (ap_sig_bdd_425)
begin
    if (ap_sig_bdd_425) begin
        ap_sig_cseq_ST_st95_fsm_83 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st95_fsm_83 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st96_fsm_84 assign process. ///
always @ (ap_sig_bdd_845)
begin
    if (ap_sig_bdd_845) begin
        ap_sig_cseq_ST_st96_fsm_84 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st96_fsm_84 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st97_fsm_85 assign process. ///
always @ (ap_sig_bdd_735)
begin
    if (ap_sig_bdd_735) begin
        ap_sig_cseq_ST_st97_fsm_85 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st97_fsm_85 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st98_fsm_86 assign process. ///
always @ (ap_sig_bdd_750)
begin
    if (ap_sig_bdd_750) begin
        ap_sig_cseq_ST_st98_fsm_86 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st98_fsm_86 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st9_fsm_8 assign process. ///
always @ (ap_sig_bdd_952)
begin
    if (ap_sig_bdd_952) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

/// grp_fu_506_p0 assign process. ///
always @ (ap_reg_ppiten_pp0_it6 or C1_mapData_load_reg_1157 or C1_bias_load_reg_1167 or C3_mapData_load_reg_1249 or C3_bias_load_reg_1269 or C5_mapData_load_reg_1352 or C5_bias_load_reg_1362 or output_wei_load_reg_1403 or output_bias_load_reg_1431 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st23_fsm_22 or ap_sig_cseq_ST_st51_fsm_39 or ap_sig_cseq_ST_st65_fsm_53 or ap_sig_cseq_ST_st79_fsm_67 or ap_sig_cseq_ST_st91_fsm_79 or ap_sig_cseq_ST_st102_fsm_90)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st102_fsm_90)) begin
        grp_fu_506_p0 = output_bias_load_reg_1431;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st91_fsm_79)) begin
        grp_fu_506_p0 = output_wei_load_reg_1403;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st79_fsm_67)) begin
        grp_fu_506_p0 = C5_bias_load_reg_1362;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st65_fsm_53)) begin
        grp_fu_506_p0 = C5_mapData_load_reg_1352;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_39)) begin
        grp_fu_506_p0 = C3_bias_load_reg_1269;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it6)) begin
        grp_fu_506_p0 = C3_mapData_load_reg_1249;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_fu_506_p0 = C1_bias_load_reg_1167;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        grp_fu_506_p0 = C1_mapData_load_reg_1157;
    end else begin
        grp_fu_506_p0 = 'bx;
    end
end

/// grp_fu_510_p0 assign process. ///
always @ (C1_dmapData_q0 or C1_dbias_q0 or C3_dmapData_q0 or C3_dbias_q0 or C5_dmapData_q0 or C5_dbias_q0 or output_dwei_q0 or output_dbias_q0 or reg_526 or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st15_fsm_14 or ap_sig_cseq_ST_st43_fsm_31 or ap_sig_cseq_ST_st61_fsm_49 or ap_sig_cseq_ST_st71_fsm_59 or ap_sig_cseq_ST_st87_fsm_75 or ap_sig_cseq_ST_st98_fsm_86 or ap_sig_cseq_ST_st19_fsm_18 or ap_sig_cseq_ST_st47_fsm_35 or ap_sig_cseq_ST_st75_fsm_63)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st98_fsm_86)) begin
        grp_fu_510_p0 = output_dbias_q0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st87_fsm_75)) begin
        grp_fu_510_p0 = output_dwei_q0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st71_fsm_59)) begin
        grp_fu_510_p0 = C5_dbias_q0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st61_fsm_49)) begin
        grp_fu_510_p0 = C5_dmapData_q0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_31)) begin
        grp_fu_510_p0 = C3_dbias_q0;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) begin
        grp_fu_510_p0 = C3_dmapData_q0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18) | (ap_const_logic_1 == ap_sig_cseq_ST_st47_fsm_35) | (ap_const_logic_1 == ap_sig_cseq_ST_st75_fsm_63))) begin
        grp_fu_510_p0 = reg_526;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        grp_fu_510_p0 = C1_dbias_q0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        grp_fu_510_p0 = C1_dmapData_q0;
    end else begin
        grp_fu_510_p0 = 'bx;
    end
end

/// grp_fu_510_p1 assign process. ///
always @ (ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st15_fsm_14 or ap_sig_cseq_ST_st43_fsm_31 or ap_sig_cseq_ST_st61_fsm_49 or ap_sig_cseq_ST_st71_fsm_59 or ap_sig_cseq_ST_st87_fsm_75 or ap_sig_cseq_ST_st98_fsm_86 or ap_sig_cseq_ST_st19_fsm_18 or ap_sig_cseq_ST_st47_fsm_35 or ap_sig_cseq_ST_st75_fsm_63)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st87_fsm_75) | (ap_const_logic_1 == ap_sig_cseq_ST_st98_fsm_86))) begin
        grp_fu_510_p1 = ap_const_lv32_37A7C5AD;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18) | (ap_const_logic_1 == ap_sig_cseq_ST_st47_fsm_35) | (ap_const_logic_1 == ap_sig_cseq_ST_st75_fsm_63))) begin
        grp_fu_510_p1 = ap_const_lv32_3CA3D70A;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14) | (ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_31) | (ap_const_logic_1 == ap_sig_cseq_ST_st71_fsm_59))) begin
        grp_fu_510_p1 = ap_const_lv32_3CCCCCCD;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st61_fsm_49))) begin
        grp_fu_510_p1 = ap_const_lv32_3827C5AD;
    end else begin
        grp_fu_510_p1 = 'bx;
    end
end

/// j_1_phi_fu_389_p4 assign process. ///
always @ (j_1_reg_385 or ap_reg_ppiten_pp0_it1 or exitcond_flatten_reg_1192 or ap_sig_cseq_ST_pp0_stg0_fsm_29 or j_1_mid2_reg_1201)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_29) & (exitcond_flatten_reg_1192 == ap_const_lv1_0))) begin
        j_1_phi_fu_389_p4 = j_1_mid2_reg_1201;
    end else begin
        j_1_phi_fu_389_p4 = j_1_reg_385;
    end
end

/// k_1_phi_fu_411_p4 assign process. ///
always @ (k_1_reg_407 or ap_reg_ppiten_pp0_it1 or exitcond_flatten_reg_1192 or ap_sig_cseq_ST_pp0_stg0_fsm_29 or k_1_mid2_reg_1211)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_29) & (exitcond_flatten_reg_1192 == ap_const_lv1_0))) begin
        k_1_phi_fu_411_p4 = k_1_mid2_reg_1211;
    end else begin
        k_1_phi_fu_411_p4 = k_1_reg_407;
    end
end

/// output_bias_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st107_fsm_95 or ap_sig_cseq_ST_st100_fsm_88)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st107_fsm_95) | (ap_const_logic_1 == ap_sig_cseq_ST_st100_fsm_88))) begin
        output_bias_ce0 = ap_const_logic_1;
    end else begin
        output_bias_ce0 = ap_const_logic_0;
    end
end

/// output_bias_we0 assign process. ///
always @ (ap_sig_cseq_ST_st107_fsm_95)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st107_fsm_95)) begin
        output_bias_we0 = ap_const_logic_1;
    end else begin
        output_bias_we0 = ap_const_logic_0;
    end
end

/// output_dbias_address0 assign process. ///
always @ (ap_sig_cseq_ST_st97_fsm_85 or output_dbias_addr_reg_1421 or ap_sig_cseq_ST_st98_fsm_86 or tmp_122_fu_1086_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st98_fsm_86)) begin
        output_dbias_address0 = output_dbias_addr_reg_1421;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st97_fsm_85)) begin
        output_dbias_address0 = tmp_122_fu_1086_p1;
    end else begin
        output_dbias_address0 = 'bx;
    end
end

/// output_dbias_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st97_fsm_85 or ap_sig_cseq_ST_st98_fsm_86)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st97_fsm_85) | (ap_const_logic_1 == ap_sig_cseq_ST_st98_fsm_86))) begin
        output_dbias_ce0 = ap_const_logic_1;
    end else begin
        output_dbias_ce0 = ap_const_logic_0;
    end
end

/// output_dbias_we0 assign process. ///
always @ (ap_sig_cseq_ST_st98_fsm_86)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st98_fsm_86)) begin
        output_dbias_we0 = ap_const_logic_1;
    end else begin
        output_dbias_we0 = ap_const_logic_0;
    end
end

/// output_dwei_address0 assign process. ///
always @ (ap_sig_cseq_ST_st86_fsm_74 or output_dwei_addr_reg_1393 or ap_sig_cseq_ST_st87_fsm_75 or tmp_217_fu_1068_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st87_fsm_75)) begin
        output_dwei_address0 = output_dwei_addr_reg_1393;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st86_fsm_74)) begin
        output_dwei_address0 = tmp_217_fu_1068_p1;
    end else begin
        output_dwei_address0 = 'bx;
    end
end

/// output_dwei_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st86_fsm_74 or ap_sig_cseq_ST_st87_fsm_75)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st86_fsm_74) | (ap_const_logic_1 == ap_sig_cseq_ST_st87_fsm_75))) begin
        output_dwei_ce0 = ap_const_logic_1;
    end else begin
        output_dwei_ce0 = ap_const_logic_0;
    end
end

/// output_dwei_we0 assign process. ///
always @ (ap_sig_cseq_ST_st87_fsm_75)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st87_fsm_75)) begin
        output_dwei_we0 = ap_const_logic_1;
    end else begin
        output_dwei_we0 = ap_const_logic_0;
    end
end

/// output_wei_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st96_fsm_84 or ap_sig_cseq_ST_st89_fsm_77)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st96_fsm_84) | (ap_const_logic_1 == ap_sig_cseq_ST_st89_fsm_77))) begin
        output_wei_ce0 = ap_const_logic_1;
    end else begin
        output_wei_ce0 = ap_const_logic_0;
    end
end

/// output_wei_we0 assign process. ///
always @ (ap_sig_cseq_ST_st96_fsm_84)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st96_fsm_84)) begin
        output_wei_we0 = ap_const_logic_1;
    end else begin
        output_wei_we0 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it10 or ap_reg_ppiten_pp0_it11 or exitcond13_fu_544_p2 or exitcond12_fu_582_p2 or exitcond11_fu_625_p2 or exitcond10_fu_652_p2 or exitcond_flatten_fu_702_p2 or exitcond6_fu_874_p2 or exitcond5_fu_902_p2 or exitcond4_fu_945_p2 or exitcond3_fu_978_p2 or exitcond2_fu_1005_p2 or exitcond1_fu_1021_p2 or exitcond_fu_1074_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if ((ap_const_lv1_0 == exitcond13_fu_544_p2)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st29_fsm_28;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if ((ap_const_lv1_0 == exitcond12_fu_582_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st15_fsm_14;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            if ((ap_const_lv1_0 == exitcond11_fu_625_p2)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        ap_ST_st29_fsm_28 : 
        begin
            if ((ap_const_lv1_0 == exitcond10_fu_652_p2)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_29;
            end else begin
                ap_NS_fsm = ap_ST_st57_fsm_45;
            end
        end
        ap_ST_pp0_stg0_fsm_29 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp0_it11) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it10)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond_flatten_fu_702_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_29;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond_flatten_fu_702_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_st42_fsm_30;
            end else begin
                ap_NS_fsm = ap_ST_st42_fsm_30;
            end
        end
        ap_ST_st42_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_st43_fsm_31;
        end
        ap_ST_st43_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st44_fsm_32;
        end
        ap_ST_st44_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st45_fsm_33;
        end
        ap_ST_st45_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_st46_fsm_34;
        end
        ap_ST_st46_fsm_34 : 
        begin
            ap_NS_fsm = ap_ST_st47_fsm_35;
        end
        ap_ST_st47_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_st48_fsm_36;
        end
        ap_ST_st48_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st49_fsm_37;
        end
        ap_ST_st49_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st50_fsm_38;
        end
        ap_ST_st50_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_st51_fsm_39;
        end
        ap_ST_st51_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st52_fsm_40;
        end
        ap_ST_st52_fsm_40 : 
        begin
            ap_NS_fsm = ap_ST_st53_fsm_41;
        end
        ap_ST_st53_fsm_41 : 
        begin
            ap_NS_fsm = ap_ST_st54_fsm_42;
        end
        ap_ST_st54_fsm_42 : 
        begin
            ap_NS_fsm = ap_ST_st55_fsm_43;
        end
        ap_ST_st55_fsm_43 : 
        begin
            ap_NS_fsm = ap_ST_st56_fsm_44;
        end
        ap_ST_st56_fsm_44 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st57_fsm_45 : 
        begin
            if ((ap_const_lv1_0 == exitcond6_fu_874_p2)) begin
                ap_NS_fsm = ap_ST_st58_fsm_46;
            end else begin
                ap_NS_fsm = ap_ST_st85_fsm_73;
            end
        end
        ap_ST_st58_fsm_46 : 
        begin
            if ((ap_const_lv1_0 == exitcond5_fu_902_p2)) begin
                ap_NS_fsm = ap_ST_st59_fsm_47;
            end else begin
                ap_NS_fsm = ap_ST_st71_fsm_59;
            end
        end
        ap_ST_st59_fsm_47 : 
        begin
            if ((ap_const_lv1_0 == exitcond4_fu_945_p2)) begin
                ap_NS_fsm = ap_ST_st60_fsm_48;
            end else begin
                ap_NS_fsm = ap_ST_st58_fsm_46;
            end
        end
        ap_ST_st60_fsm_48 : 
        begin
            if ((ap_const_lv1_0 == exitcond3_fu_978_p2)) begin
                ap_NS_fsm = ap_ST_st61_fsm_49;
            end else begin
                ap_NS_fsm = ap_ST_st59_fsm_47;
            end
        end
        ap_ST_st61_fsm_49 : 
        begin
            ap_NS_fsm = ap_ST_st62_fsm_50;
        end
        ap_ST_st62_fsm_50 : 
        begin
            ap_NS_fsm = ap_ST_st63_fsm_51;
        end
        ap_ST_st63_fsm_51 : 
        begin
            ap_NS_fsm = ap_ST_st64_fsm_52;
        end
        ap_ST_st64_fsm_52 : 
        begin
            ap_NS_fsm = ap_ST_st65_fsm_53;
        end
        ap_ST_st65_fsm_53 : 
        begin
            ap_NS_fsm = ap_ST_st66_fsm_54;
        end
        ap_ST_st66_fsm_54 : 
        begin
            ap_NS_fsm = ap_ST_st67_fsm_55;
        end
        ap_ST_st67_fsm_55 : 
        begin
            ap_NS_fsm = ap_ST_st68_fsm_56;
        end
        ap_ST_st68_fsm_56 : 
        begin
            ap_NS_fsm = ap_ST_st69_fsm_57;
        end
        ap_ST_st69_fsm_57 : 
        begin
            ap_NS_fsm = ap_ST_st70_fsm_58;
        end
        ap_ST_st70_fsm_58 : 
        begin
            ap_NS_fsm = ap_ST_st60_fsm_48;
        end
        ap_ST_st71_fsm_59 : 
        begin
            ap_NS_fsm = ap_ST_st72_fsm_60;
        end
        ap_ST_st72_fsm_60 : 
        begin
            ap_NS_fsm = ap_ST_st73_fsm_61;
        end
        ap_ST_st73_fsm_61 : 
        begin
            ap_NS_fsm = ap_ST_st74_fsm_62;
        end
        ap_ST_st74_fsm_62 : 
        begin
            ap_NS_fsm = ap_ST_st75_fsm_63;
        end
        ap_ST_st75_fsm_63 : 
        begin
            ap_NS_fsm = ap_ST_st76_fsm_64;
        end
        ap_ST_st76_fsm_64 : 
        begin
            ap_NS_fsm = ap_ST_st77_fsm_65;
        end
        ap_ST_st77_fsm_65 : 
        begin
            ap_NS_fsm = ap_ST_st78_fsm_66;
        end
        ap_ST_st78_fsm_66 : 
        begin
            ap_NS_fsm = ap_ST_st79_fsm_67;
        end
        ap_ST_st79_fsm_67 : 
        begin
            ap_NS_fsm = ap_ST_st80_fsm_68;
        end
        ap_ST_st80_fsm_68 : 
        begin
            ap_NS_fsm = ap_ST_st81_fsm_69;
        end
        ap_ST_st81_fsm_69 : 
        begin
            ap_NS_fsm = ap_ST_st82_fsm_70;
        end
        ap_ST_st82_fsm_70 : 
        begin
            ap_NS_fsm = ap_ST_st83_fsm_71;
        end
        ap_ST_st83_fsm_71 : 
        begin
            ap_NS_fsm = ap_ST_st84_fsm_72;
        end
        ap_ST_st84_fsm_72 : 
        begin
            ap_NS_fsm = ap_ST_st57_fsm_45;
        end
        ap_ST_st85_fsm_73 : 
        begin
            if ((ap_const_lv1_0 == exitcond2_fu_1005_p2)) begin
                ap_NS_fsm = ap_ST_st86_fsm_74;
            end else begin
                ap_NS_fsm = ap_ST_st97_fsm_85;
            end
        end
        ap_ST_st86_fsm_74 : 
        begin
            if ((ap_const_lv1_0 == exitcond1_fu_1021_p2)) begin
                ap_NS_fsm = ap_ST_st87_fsm_75;
            end else begin
                ap_NS_fsm = ap_ST_st85_fsm_73;
            end
        end
        ap_ST_st87_fsm_75 : 
        begin
            ap_NS_fsm = ap_ST_st88_fsm_76;
        end
        ap_ST_st88_fsm_76 : 
        begin
            ap_NS_fsm = ap_ST_st89_fsm_77;
        end
        ap_ST_st89_fsm_77 : 
        begin
            ap_NS_fsm = ap_ST_st90_fsm_78;
        end
        ap_ST_st90_fsm_78 : 
        begin
            ap_NS_fsm = ap_ST_st91_fsm_79;
        end
        ap_ST_st91_fsm_79 : 
        begin
            ap_NS_fsm = ap_ST_st92_fsm_80;
        end
        ap_ST_st92_fsm_80 : 
        begin
            ap_NS_fsm = ap_ST_st93_fsm_81;
        end
        ap_ST_st93_fsm_81 : 
        begin
            ap_NS_fsm = ap_ST_st94_fsm_82;
        end
        ap_ST_st94_fsm_82 : 
        begin
            ap_NS_fsm = ap_ST_st95_fsm_83;
        end
        ap_ST_st95_fsm_83 : 
        begin
            ap_NS_fsm = ap_ST_st96_fsm_84;
        end
        ap_ST_st96_fsm_84 : 
        begin
            ap_NS_fsm = ap_ST_st86_fsm_74;
        end
        ap_ST_st97_fsm_85 : 
        begin
            if (~(ap_const_lv1_0 == exitcond_fu_1074_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st98_fsm_86;
            end
        end
        ap_ST_st98_fsm_86 : 
        begin
            ap_NS_fsm = ap_ST_st99_fsm_87;
        end
        ap_ST_st99_fsm_87 : 
        begin
            ap_NS_fsm = ap_ST_st100_fsm_88;
        end
        ap_ST_st100_fsm_88 : 
        begin
            ap_NS_fsm = ap_ST_st101_fsm_89;
        end
        ap_ST_st101_fsm_89 : 
        begin
            ap_NS_fsm = ap_ST_st102_fsm_90;
        end
        ap_ST_st102_fsm_90 : 
        begin
            ap_NS_fsm = ap_ST_st103_fsm_91;
        end
        ap_ST_st103_fsm_91 : 
        begin
            ap_NS_fsm = ap_ST_st104_fsm_92;
        end
        ap_ST_st104_fsm_92 : 
        begin
            ap_NS_fsm = ap_ST_st105_fsm_93;
        end
        ap_ST_st105_fsm_93 : 
        begin
            ap_NS_fsm = ap_ST_st106_fsm_94;
        end
        ap_ST_st106_fsm_94 : 
        begin
            ap_NS_fsm = ap_ST_st107_fsm_95;
        end
        ap_ST_st107_fsm_95 : 
        begin
            ap_NS_fsm = ap_ST_st97_fsm_85;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C1_bias_address0 = C1_bias_addr_reg_1124;
assign C1_bias_d0 = reg_532;
assign C1_dbias_d0 = ap_const_lv32_0;
assign C1_dmapData_d0 = ap_const_lv32_0;
assign C1_mapData_addr1_fu_576_p2 = (tmp_trn_cast_fu_560_p1 + p_shl_cast_fu_572_p1);
assign C1_mapData_addr2_cast_fu_603_p1 = C1_mapData_addr2_fu_598_p2;
assign C1_mapData_addr2_fu_598_p2 = (C1_mapData_addr1_reg_1106 + tmp_172_trn_cast_fu_594_p1);
assign C1_mapData_addr3_fu_619_p2 = (C1_mapData_addr2_cast_fu_603_p1 + p_shl_fu_615_p1);
assign C1_mapData_addr4_fu_641_p2 = (C1_mapData_addr3_reg_1119 + tmp_185_trn_fu_637_p1);
assign C1_mapData_address0 = C1_mapData_addr_reg_1142;
assign C1_mapData_d0 = reg_532;
assign C3_bias_address0 = C3_bias_addr_reg_1254;
assign C3_bias_d0 = reg_532;
assign C3_dbias_d0 = ap_const_lv32_0;
assign C3_dmapData_address0 = tmp_213_fu_868_p1;
assign C3_dmapData_address1 = C3_dmapData_addr_reg_1238;
assign C3_dmapData_d1 = ap_const_lv32_0;
assign C3_mapData_addr14_fu_692_p2 = (p_shl64_cast_fu_676_p1 - p_shl65_cast_fu_688_p1);
assign C3_mapData_addr15_fu_792_p2 = ($signed(tmp_177_trn_cast_fu_788_p1) + $signed(C3_mapData_addr19_cast_reg_1187));
assign C3_mapData_addr16_fu_817_p2 = ($signed(p_shl44_fu_813_p1) + $signed(C3_mapData_addr20_cast_fu_797_p1));
assign C3_mapData_addr17_fu_823_p2 = ($signed(tmp_191_trn_fu_801_p1) + $signed(C3_mapData_addr16_fu_817_p2));
assign C3_mapData_addr18_fu_857_p2 = ($signed(tmp_137_fu_852_p2) + $signed(C3_mapData_addr17_reg_1216));
assign C3_mapData_addr19_cast_fu_698_p1 = $signed(C3_mapData_addr14_fu_692_p2);
assign C3_mapData_addr19_fu_862_p2 = ($signed(tmp_193_trn_fu_849_p1) + $signed(C3_mapData_addr18_fu_857_p2));
assign C3_mapData_addr20_cast_fu_797_p1 = C3_mapData_addr15_fu_792_p2;
assign C3_mapData_address0 = ap_reg_ppstg_C3_mapData_addr_reg_1232_pp0_it3;
assign C3_mapData_address1 = ap_reg_ppstg_C3_mapData_addr_reg_1232_pp0_it10;
assign C3_mapData_d1 = reg_532;
assign C5_bias_address0 = C5_bias_addr_reg_1306;
assign C5_bias_d0 = reg_532;
assign C5_dbias_d0 = ap_const_lv32_0;
assign C5_dmapData_d0 = ap_const_lv32_0;
assign C5_mapData_addr10_fu_972_p2 = (C5_mapData_addr9_fu_961_p2 + tmp_139_fu_966_p2);
assign C5_mapData_addr11_fu_994_p2 = (C5_mapData_addr10_reg_1324 + tmp_196_trn_fu_990_p1);
assign C5_mapData_addr16_cast_fu_898_p1 = tmp_211_fu_890_p3;
assign C5_mapData_addr17_cast_fu_923_p1 = C5_mapData_addr7_fu_918_p2;
assign C5_mapData_addr7_fu_918_p2 = (C5_mapData_addr16_cast_reg_1288 + tmp_184_trn_cast_fu_914_p1);
assign C5_mapData_addr8_fu_939_p2 = (C5_mapData_addr17_cast_fu_923_p1 + p_shl45_fu_935_p1);
assign C5_mapData_addr9_fu_961_p2 = (C5_mapData_addr8_reg_1301 + tmp_192_trn_fu_957_p1);
assign C5_mapData_address0 = C5_mapData_addr_reg_1337;
assign C5_mapData_d0 = reg_532;

/// ap_sig_bdd_1014 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1014 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_12]);
end

/// ap_sig_bdd_1021 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1021 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_23]);
end

/// ap_sig_bdd_1029 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1029 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3F]);
end

/// ap_sig_bdd_114 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_114 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_268 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_268 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_304 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_304 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_11]);
end

/// ap_sig_bdd_312 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_312 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_15]);
end

/// ap_sig_bdd_325 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_325 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_22]);
end

/// ap_sig_bdd_333 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_333 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_26]);
end

/// ap_sig_bdd_341 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_341 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_34]);
end

/// ap_sig_bdd_349 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_349 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3E]);
end

/// ap_sig_bdd_357 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_357 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_42]);
end

/// ap_sig_bdd_365 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_365 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4E]);
end

/// ap_sig_bdd_373 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_373 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_59]);
end

/// ap_sig_bdd_383 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_383 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end

/// ap_sig_bdd_390 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_390 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1A]);
end

/// ap_sig_bdd_401 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_401 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2B]);
end

/// ap_sig_bdd_409 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_409 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_39]);
end

/// ap_sig_bdd_417 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_417 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_47]);
end

/// ap_sig_bdd_425 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_425 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_53]);
end

/// ap_sig_bdd_433 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_433 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5E]);
end

/// ap_sig_bdd_443 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_443 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_459 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_459 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_479 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_479 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_494 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_494 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_503 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_503 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end

/// ap_sig_bdd_513 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_513 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1C]);
end

/// ap_sig_bdd_529 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_529 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1D]);
end

/// ap_sig_bdd_592 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_592 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1E]);
end

/// ap_sig_bdd_602 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_602 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1F]);
end

/// ap_sig_bdd_612 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_612 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2D]);
end

/// ap_sig_bdd_628 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_628 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2E]);
end

/// ap_sig_bdd_648 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_648 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2F]);
end

/// ap_sig_bdd_662 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_662 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_30]);
end

/// ap_sig_bdd_677 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_677 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_31]);
end

/// ap_sig_bdd_686 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_686 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3B]);
end

/// ap_sig_bdd_696 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_696 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_49]);
end

/// ap_sig_bdd_710 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_710 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4A]);
end

/// ap_sig_bdd_725 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_725 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4B]);
end

/// ap_sig_bdd_735 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_735 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_55]);
end

/// ap_sig_bdd_750 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_750 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_56]);
end

/// ap_sig_bdd_767 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_767 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1B]);
end

/// ap_sig_bdd_780 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_780 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end

/// ap_sig_bdd_789 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_789 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2C]);
end

/// ap_sig_bdd_810 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_810 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_48]);
end

/// ap_sig_bdd_829 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_829 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3A]);
end

/// ap_sig_bdd_845 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_845 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_54]);
end

/// ap_sig_bdd_854 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_854 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5F]);
end

/// ap_sig_bdd_872 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_872 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_881 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_881 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_14]);
end

/// ap_sig_bdd_897 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_897 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_25]);
end

/// ap_sig_bdd_910 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_910 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_33]);
end

/// ap_sig_bdd_919 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_919 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_41]);
end

/// ap_sig_bdd_930 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_930 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4D]);
end

/// ap_sig_bdd_941 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_941 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_58]);
end

/// ap_sig_bdd_952 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_952 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_959 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_959 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_16]);
end

/// ap_sig_bdd_966 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_966 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_27]);
end

/// ap_sig_bdd_973 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_973 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_35]);
end

/// ap_sig_bdd_980 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_980 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_43]);
end

/// ap_sig_bdd_987 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_987 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4F]);
end

/// ap_sig_bdd_994 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_994 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5A]);
end
assign exitcond10_fu_652_p2 = (i_1_reg_363 == ap_const_lv5_10? 1'b1: 1'b0);
assign exitcond11_fu_625_p2 = (k_reg_352 == ap_const_lv3_5? 1'b1: 1'b0);
assign exitcond12_fu_582_p2 = (j_reg_341 == ap_const_lv3_5? 1'b1: 1'b0);
assign exitcond13_fu_544_p2 = (i_reg_330 == ap_const_lv3_6? 1'b1: 1'b0);
assign exitcond17_fu_734_p2 = (m_reg_418 == ap_const_lv3_5? 1'b1: 1'b0);
assign exitcond1_fu_1021_p2 = (j_3_reg_484 == ap_const_lv5_1E? 1'b1: 1'b0);
assign exitcond2_fu_1005_p2 = (i_3_reg_473 == ap_const_lv4_A? 1'b1: 1'b0);
assign exitcond3_fu_978_p2 = (m_1_reg_462 == ap_const_lv3_5? 1'b1: 1'b0);
assign exitcond4_fu_945_p2 = (k_2_reg_451 == ap_const_lv3_5? 1'b1: 1'b0);
assign exitcond5_fu_902_p2 = (j_2_reg_440 == ap_const_lv5_10? 1'b1: 1'b0);
assign exitcond6_fu_874_p2 = (i_2_reg_429 == ap_const_lv5_1E? 1'b1: 1'b0);
assign exitcond7_mid_fu_740_p2 = (exitcond17_fu_734_p2 & not_exitcond_flatten_fu_728_p2);
assign exitcond_flatten6_fu_714_p2 = (indvar_flatten_reg_396 == ap_const_lv6_19? 1'b1: 1'b0);
assign exitcond_flatten_fu_702_p2 = (indvar_flatten2_reg_374 == ap_const_lv8_96? 1'b1: 1'b0);
assign exitcond_fu_1074_p2 = (i_4_reg_495 == ap_const_lv4_A? 1'b1: 1'b0);
assign grp_fu_506_ce = ap_const_logic_1;
assign grp_fu_506_p1 = reg_526;
assign grp_fu_510_ce = ap_const_logic_1;
assign i_22_fu_550_p2 = (i_reg_330 + ap_const_lv3_1);
assign i_23_fu_1080_p2 = (i_4_reg_495 + ap_const_lv4_1);
assign i_5_fu_658_p2 = (i_1_reg_363 + ap_const_lv5_1);
assign i_6_fu_880_p2 = (i_2_reg_429 + ap_const_lv5_1);
assign i_7_fu_1011_p2 = (i_3_reg_473 + ap_const_lv4_1);
assign indvar_flatten_next2_fu_708_p2 = (indvar_flatten2_reg_374 + ap_const_lv8_1);
assign indvar_flatten_next_fu_841_p3 = ((exitcond_flatten6_fu_714_p2[0:0]===1'b1)? ap_const_lv6_1: indvar_flatten_op_fu_835_p2);
assign indvar_flatten_op_fu_835_p2 = (ap_const_lv6_1 + indvar_flatten_reg_396);
assign j_18_fu_588_p2 = (j_reg_341 + ap_const_lv3_1);
assign j_19_fu_908_p2 = (j_2_reg_440 + ap_const_lv5_1);
assign j_1_mid2_fu_752_p3 = ((exitcond_flatten6_fu_714_p2[0:0]===1'b1)? j_s_fu_746_p2: j_1_phi_fu_389_p4);
assign j_4_fu_1027_p2 = (j_3_reg_484 + ap_const_lv5_1);
assign j_s_fu_746_p2 = (ap_const_lv3_1 + j_1_phi_fu_389_p4);
assign k_19_fu_760_p2 = (ap_const_lv3_1 + k_1_mid_fu_720_p3);
assign k_1_mid2_fu_780_p3 = ((exitcond7_mid_fu_740_p2[0:0]===1'b1)? k_19_fu_760_p2: k_1_mid_fu_720_p3);
assign k_1_mid_fu_720_p3 = ((exitcond_flatten6_fu_714_p2[0:0]===1'b1)? ap_const_lv3_0: k_1_phi_fu_411_p4);
assign k_3_fu_631_p2 = (k_reg_352 + ap_const_lv3_1);
assign k_4_fu_951_p2 = (k_2_reg_451 + ap_const_lv3_1);
assign m_7_fu_829_p2 = (ap_const_lv3_1 + m_mid2_fu_772_p3);
assign m_8_fu_984_p2 = (m_1_reg_462 + ap_const_lv3_1);
assign m_mid2_fu_772_p3 = ((tmp_212_fu_766_p2[0:0]===1'b1)? ap_const_lv3_0: m_reg_418);
assign not_exitcond_flatten_fu_728_p2 = (exitcond_flatten6_fu_714_p2 ^ ap_const_lv1_1);
assign output_bias_address0 = output_bias_addr_reg_1416;
assign output_bias_d0 = reg_532;
assign output_dbias_d0 = ap_const_lv32_0;
assign output_dwei_d0 = ap_const_lv32_0;
assign output_wei_addr1_fu_1057_p2 = (p_shl71_cast_fu_1053_p1 + p_shl70_cast_fu_1041_p1);
assign output_wei_addr2_fu_1063_p2 = (output_wei_addr1_fu_1057_p2 + tmp_173_trn_cast_reg_1375);
assign output_wei_address0 = output_wei_addr_reg_1388;
assign output_wei_d0 = reg_532;
assign p_shl44_fu_813_p1 = $signed(tmp_136_fu_805_p3);
assign p_shl45_fu_935_p1 = tmp_138_fu_927_p3;
assign p_shl64_cast_fu_676_p1 = tmp_209_fu_668_p3;
assign p_shl65_cast_fu_688_p1 = tmp_210_fu_680_p3;
assign p_shl70_cast_fu_1041_p1 = tmp_215_fu_1033_p3;
assign p_shl71_cast_fu_1053_p1 = tmp_216_fu_1045_p3;
assign p_shl_cast_fu_572_p1 = tmp_208_fu_564_p3;
assign p_shl_fu_615_p1 = tmp_135_fu_607_p3;
assign tmp_111_fu_886_p1 = i_2_reg_429;
assign tmp_122_fu_1086_p1 = i_4_reg_495;
assign tmp_135_fu_607_p3 = {{C1_mapData_addr2_fu_598_p2}, {ap_const_lv2_0}};
assign tmp_136_fu_805_p3 = {{C3_mapData_addr15_fu_792_p2}, {ap_const_lv2_0}};
assign tmp_137_fu_852_p2 = C3_mapData_addr17_reg_1216 << ap_const_lv32_2;
assign tmp_138_fu_927_p3 = {{C5_mapData_addr7_fu_918_p2}, {ap_const_lv2_0}};
assign tmp_139_fu_966_p2 = C5_mapData_addr9_fu_961_p2 << ap_const_lv32_2;
assign tmp_172_trn_cast_fu_594_p1 = j_reg_341;
assign tmp_173_trn_cast_fu_1017_p1 = i_3_reg_473;
assign tmp_177_trn_cast_fu_788_p1 = j_1_mid2_fu_752_p3;
assign tmp_184_trn_cast_fu_914_p1 = j_2_reg_440;
assign tmp_185_trn_fu_637_p1 = k_reg_352;
assign tmp_191_trn_fu_801_p1 = k_1_mid2_fu_780_p3;
assign tmp_192_trn_fu_957_p1 = k_2_reg_451;
assign tmp_193_trn_fu_849_p1 = m_mid2_reg_1206;
assign tmp_196_trn_fu_990_p1 = m_1_reg_462;
assign tmp_208_fu_564_p3 = {{i_reg_330}, {ap_const_lv2_0}};
assign tmp_209_fu_668_p3 = {{i_1_reg_363}, {ap_const_lv3_0}};
assign tmp_210_fu_680_p3 = {{i_1_reg_363}, {ap_const_lv1_0}};
assign tmp_211_fu_890_p3 = {{i_2_reg_429}, {ap_const_lv4_0}};
assign tmp_212_fu_766_p2 = (exitcond7_mid_fu_740_p2 | exitcond_flatten6_fu_714_p2);
assign tmp_213_fu_868_p1 = $unsigned(C3_mapData_addr19_fu_862_p2);
assign tmp_214_fu_646_p1 = C1_mapData_addr4_fu_641_p2;
assign tmp_215_fu_1033_p3 = {{j_3_reg_484}, {ap_const_lv3_0}};
assign tmp_216_fu_1045_p3 = {{j_3_reg_484}, {ap_const_lv1_0}};
assign tmp_217_fu_1068_p1 = output_wei_addr2_fu_1063_p2;
assign tmp_218_fu_999_p1 = C5_mapData_addr11_fu_994_p2;
assign tmp_fu_556_p1 = i_reg_330;
assign tmp_s_fu_664_p1 = i_1_reg_363;
assign tmp_trn_cast_fu_560_p1 = i_reg_330;
always @ (posedge ap_clk)
begin
    tmp_reg_1100[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    tmp_s_reg_1181[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    C3_mapData_addr19_cast_reg_1187[0] <= 1'b0;
    tmp_111_reg_1282[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    C5_mapData_addr16_cast_reg_1288[3:0] <= 4'b0000;
    C5_mapData_addr16_cast_reg_1288[9] <= 1'b0;
    tmp_173_trn_cast_reg_1375[8:4] <= 5'b00000;
end



endmodule //dateport_upadteall

