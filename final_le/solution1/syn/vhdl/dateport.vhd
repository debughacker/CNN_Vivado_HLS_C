-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.2
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dateport is
generic (
    C_S_AXI_AXILITES_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_AXILITES_DATA_WIDTH : INTEGER := 32 );
port (
    s_axi_AXILiteS_AWVALID : IN STD_LOGIC;
    s_axi_AXILiteS_AWREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_WVALID : IN STD_LOGIC;
    s_axi_AXILiteS_WREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH/8-1 downto 0);
    s_axi_AXILiteS_ARVALID : IN STD_LOGIC;
    s_axi_AXILiteS_ARREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_RVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_RREADY : IN STD_LOGIC;
    s_axi_AXILiteS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_AXILiteS_BVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_BREADY : IN STD_LOGIC;
    s_axi_AXILiteS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    interrupt : OUT STD_LOGIC );
end;


architecture behav of dateport is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "dateport,hls_ip_2015_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=14.512000,HLS_SYN_LAT=923977,HLS_SYN_TPT=none,HLS_SYN_MEM=177,HLS_SYN_DSP=102,HLS_SYN_FF=22247,HLS_SYN_LUT=34083}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000100000000000000";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000001000000000000000";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000010000000000000000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000100000000000000000";
    constant ap_ST_st19_fsm_18 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000001000000000000000000";
    constant ap_ST_st20_fsm_19 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000010000000000000000000";
    constant ap_ST_st21_fsm_20 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000100000000000000000000";
    constant ap_ST_st22_fsm_21 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000001000000000000000000000";
    constant ap_ST_st23_fsm_22 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000010000000000000000000000";
    constant ap_ST_st24_fsm_23 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000100000000000000000000000";
    constant ap_ST_st25_fsm_24 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000001000000000000000000000000";
    constant ap_ST_st26_fsm_25 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000010000000000000000000000000";
    constant ap_ST_st27_fsm_26 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000100000000000000000000000000";
    constant ap_ST_st28_fsm_27 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000001000000000000000000000000000";
    constant ap_ST_st29_fsm_28 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000010000000000000000000000000000";
    constant ap_ST_st30_fsm_29 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000100000000000000000000000000000";
    constant ap_ST_st31_fsm_30 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000001000000000000000000000000000000";
    constant ap_ST_st32_fsm_31 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000010000000000000000000000000000000";
    constant ap_ST_st33_fsm_32 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000100000000000000000000000000000000";
    constant ap_ST_st34_fsm_33 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000001000000000000000000000000000000000";
    constant ap_ST_st35_fsm_34 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000010000000000000000000000000000000000";
    constant ap_ST_st36_fsm_35 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000100000000000000000000000000000000000";
    constant ap_ST_st37_fsm_36 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000001000000000000000000000000000000000000";
    constant ap_ST_st38_fsm_37 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000010000000000000000000000000000000000000";
    constant ap_ST_st39_fsm_38 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000100000000000000000000000000000000000000";
    constant ap_ST_st40_fsm_39 : STD_LOGIC_VECTOR (48 downto 0) := "0000000001000000000000000000000000000000000000000";
    constant ap_ST_st41_fsm_40 : STD_LOGIC_VECTOR (48 downto 0) := "0000000010000000000000000000000000000000000000000";
    constant ap_ST_st42_fsm_41 : STD_LOGIC_VECTOR (48 downto 0) := "0000000100000000000000000000000000000000000000000";
    constant ap_ST_st43_fsm_42 : STD_LOGIC_VECTOR (48 downto 0) := "0000001000000000000000000000000000000000000000000";
    constant ap_ST_st44_fsm_43 : STD_LOGIC_VECTOR (48 downto 0) := "0000010000000000000000000000000000000000000000000";
    constant ap_ST_st45_fsm_44 : STD_LOGIC_VECTOR (48 downto 0) := "0000100000000000000000000000000000000000000000000";
    constant ap_ST_st46_fsm_45 : STD_LOGIC_VECTOR (48 downto 0) := "0001000000000000000000000000000000000000000000000";
    constant ap_ST_st47_fsm_46 : STD_LOGIC_VECTOR (48 downto 0) := "0010000000000000000000000000000000000000000000000";
    constant ap_ST_st48_fsm_47 : STD_LOGIC_VECTOR (48 downto 0) := "0100000000000000000000000000000000000000000000000";
    constant ap_ST_st49_fsm_48 : STD_LOGIC_VECTOR (48 downto 0) := "1000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_BF800000 : STD_LOGIC_VECTOR (31 downto 0) := "10111111100000000000000000000000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_32 : STD_LOGIC_VECTOR (5 downto 0) := "110010";
    constant ap_const_lv6_F : STD_LOGIC_VECTOR (5 downto 0) := "001111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_400 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000000000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_90 : BOOLEAN;
    signal ap_ready : STD_LOGIC;
    signal date : STD_LOGIC_VECTOR (31 downto 0);
    signal date_0_data_reg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal date_0_vld_reg : STD_LOGIC := '0';
    signal date_0_ack_out : STD_LOGIC;
    signal signal_r : STD_LOGIC_VECTOR (7 downto 0);
    signal signal_r_0_data_reg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal signal_r_0_vld_reg : STD_LOGIC := '0';
    signal signal_r_0_ack_out : STD_LOGIC;
    signal led : STD_LOGIC_VECTOR (15 downto 0);
    signal led_ap_vld : STD_LOGIC;
    signal led_1_data_reg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal led_1_vld_reg : STD_LOGIC := '0';
    signal led_1_vld_in : STD_LOGIC;
    signal led_1_ack_in : STD_LOGIC;
    signal signal_out : STD_LOGIC_VECTOR (7 downto 0);
    signal signal_out_ap_vld : STD_LOGIC;
    signal signal_out_1_data_reg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal signal_out_1_data_in : STD_LOGIC_VECTOR (7 downto 0);
    signal signal_out_1_vld_reg : STD_LOGIC := '0';
    signal signal_out_1_vld_in : STD_LOGIC;
    signal signal_out_1_ack_in : STD_LOGIC;
    signal input_i : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal input_img_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal input_img_ce0 : STD_LOGIC;
    signal input_img_we0 : STD_LOGIC;
    signal input_img_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_img_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_img_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal input_img_ce1 : STD_LOGIC;
    signal input_img_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal C1_v_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal C1_v_ce0 : STD_LOGIC;
    signal C1_v_we0 : STD_LOGIC;
    signal C1_v_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C1_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C1_v_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal C1_v_ce1 : STD_LOGIC;
    signal C1_v_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal C1_bias_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal C1_bias_ce0 : STD_LOGIC;
    signal C1_bias_we0 : STD_LOGIC;
    signal C1_bias_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C1_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C1_y_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal C1_y_ce0 : STD_LOGIC;
    signal C1_y_we0 : STD_LOGIC;
    signal C1_y_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C1_y_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C1_y_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal C1_y_ce1 : STD_LOGIC;
    signal C1_y_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal C1_mapData_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal C1_mapData_ce0 : STD_LOGIC;
    signal C1_mapData_we0 : STD_LOGIC;
    signal C1_mapData_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C1_mapData_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C1_mapData_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal C1_mapData_ce1 : STD_LOGIC;
    signal C1_mapData_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal S2_y_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal S2_y_ce0 : STD_LOGIC;
    signal S2_y_we0 : STD_LOGIC;
    signal S2_y_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal S2_y_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal S2_y_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal S2_y_ce1 : STD_LOGIC;
    signal S2_y_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal C3_mapData_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal C3_mapData_ce0 : STD_LOGIC;
    signal C3_mapData_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C3_mapData_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal C3_mapData_ce1 : STD_LOGIC;
    signal C3_mapData_we1 : STD_LOGIC;
    signal C3_mapData_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal C3_mapData_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal C3_bias_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal C3_bias_ce0 : STD_LOGIC;
    signal C3_bias_we0 : STD_LOGIC;
    signal C3_bias_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C3_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C3_y_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal C3_y_ce0 : STD_LOGIC;
    signal C3_y_we0 : STD_LOGIC;
    signal C3_y_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C3_y_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C3_y_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal C3_y_ce1 : STD_LOGIC;
    signal C3_y_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal S4_y_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal S4_y_ce0 : STD_LOGIC;
    signal S4_y_we0 : STD_LOGIC;
    signal S4_y_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal S4_y_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal S4_y_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal S4_y_ce1 : STD_LOGIC;
    signal S4_y_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal C5_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal C5_v_ce0 : STD_LOGIC;
    signal C5_v_we0 : STD_LOGIC;
    signal C5_v_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C5_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C5_mapData_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal C5_mapData_ce0 : STD_LOGIC;
    signal C5_mapData_we0 : STD_LOGIC;
    signal C5_mapData_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C5_mapData_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C5_mapData_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal C5_mapData_ce1 : STD_LOGIC;
    signal C5_mapData_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal C5_bias_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal C5_bias_ce0 : STD_LOGIC;
    signal C5_bias_we0 : STD_LOGIC;
    signal C5_bias_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C5_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C5_y_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal C5_y_ce0 : STD_LOGIC;
    signal C5_y_we0 : STD_LOGIC;
    signal C5_y_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C5_y_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_wei_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal output_wei_ce0 : STD_LOGIC;
    signal output_wei_we0 : STD_LOGIC;
    signal output_wei_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_wei_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_bias_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_bias_ce0 : STD_LOGIC;
    signal output_bias_we0 : STD_LOGIC;
    signal output_bias_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_y_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_y_ce0 : STD_LOGIC;
    signal output_y_we0 : STD_LOGIC;
    signal output_y_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_y_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal resid_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal resid_ce0 : STD_LOGIC;
    signal resid_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_d_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_d_ce0 : STD_LOGIC;
    signal output_d_we0 : STD_LOGIC;
    signal output_d_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_d_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C5_d_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal C5_d_ce0 : STD_LOGIC;
    signal C5_d_we0 : STD_LOGIC;
    signal C5_d_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C5_d_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal S4_d_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal S4_d_ce0 : STD_LOGIC;
    signal S4_d_we0 : STD_LOGIC;
    signal S4_d_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal S4_d_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal S4_d_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal S4_d_ce1 : STD_LOGIC;
    signal S4_d_we1 : STD_LOGIC;
    signal S4_d_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal S4_d_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal C3_d_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal C3_d_ce0 : STD_LOGIC;
    signal C3_d_we0 : STD_LOGIC;
    signal C3_d_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C3_d_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C3_d_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal C3_d_ce1 : STD_LOGIC;
    signal C3_d_we1 : STD_LOGIC;
    signal C3_d_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal C3_d_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal S2_d_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal S2_d_ce0 : STD_LOGIC;
    signal S2_d_we0 : STD_LOGIC;
    signal S2_d_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal S2_d_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C1_d_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal C1_d_ce0 : STD_LOGIC;
    signal C1_d_we0 : STD_LOGIC;
    signal C1_d_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C1_d_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C1_d_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal C1_d_ce1 : STD_LOGIC;
    signal C1_d_we1 : STD_LOGIC;
    signal C1_d_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal C1_d_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal C1_dmapData_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal C1_dmapData_ce0 : STD_LOGIC;
    signal C1_dmapData_we0 : STD_LOGIC;
    signal C1_dmapData_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C1_dmapData_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C1_dbias_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal C1_dbias_ce0 : STD_LOGIC;
    signal C1_dbias_we0 : STD_LOGIC;
    signal C1_dbias_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C1_dbias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C3_dmapData_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal C3_dmapData_ce0 : STD_LOGIC;
    signal C3_dmapData_we0 : STD_LOGIC;
    signal C3_dmapData_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C3_dmapData_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C3_dmapData_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal C3_dmapData_ce1 : STD_LOGIC;
    signal C3_dmapData_we1 : STD_LOGIC;
    signal C3_dmapData_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal C3_dbias_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal C3_dbias_ce0 : STD_LOGIC;
    signal C3_dbias_we0 : STD_LOGIC;
    signal C3_dbias_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C3_dbias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C5_dmapData_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal C5_dmapData_ce0 : STD_LOGIC;
    signal C5_dmapData_we0 : STD_LOGIC;
    signal C5_dmapData_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C5_dmapData_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C5_dbias_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal C5_dbias_ce0 : STD_LOGIC;
    signal C5_dbias_we0 : STD_LOGIC;
    signal C5_dbias_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal C5_dbias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_dwei_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal output_dwei_ce0 : STD_LOGIC;
    signal output_dwei_we0 : STD_LOGIC;
    signal output_dwei_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_dwei_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_dbias_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_dbias_ce0 : STD_LOGIC;
    signal output_dbias_we0 : STD_LOGIC;
    signal output_dbias_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_dbias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal renew : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    signal righht_i : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal dateport_AXILiteS_s_axi_U_ap_dummy_ce : STD_LOGIC;
    signal reg_547 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st21_fsm_20 : STD_LOGIC;
    signal ap_sig_bdd_578 : BOOLEAN;
    signal ap_sig_cseq_ST_st42_fsm_41 : STD_LOGIC;
    signal ap_sig_bdd_585 : BOOLEAN;
    signal date_read_reg_861 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_595 : BOOLEAN;
    signal tmp_1_fu_553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_559_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_565_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal resid_addr3_fu_593_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal resid_addr3_reg_884 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st13_fsm_12 : STD_LOGIC;
    signal ap_sig_bdd_616 : BOOLEAN;
    signal grp_dateport_O_layer_fu_328_ap_done : STD_LOGIC;
    signal i_fu_605_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_reg_892 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st14_fsm_13 : STD_LOGIC;
    signal ap_sig_bdd_629 : BOOLEAN;
    signal exitcond_i_i_fu_599_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal resid_load_reg_902 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st15_fsm_14 : STD_LOGIC;
    signal ap_sig_bdd_642 : BOOLEAN;
    signal ap_sig_cseq_ST_st16_fsm_15 : STD_LOGIC;
    signal ap_sig_bdd_651 : BOOLEAN;
    signal tmp_i_i_fu_629_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_i_reg_912 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_cseq_ST_st20_fsm_19 : STD_LOGIC;
    signal ap_sig_bdd_660 : BOOLEAN;
    signal grp_fu_534_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_80_i_i_reg_922 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_530_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_81_i_i_reg_927 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st26_fsm_25 : STD_LOGIC;
    signal ap_sig_bdd_673 : BOOLEAN;
    signal tmp_10_fu_638_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_10_reg_932 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_sig_cseq_ST_st38_fsm_37 : STD_LOGIC;
    signal ap_sig_bdd_682 : BOOLEAN;
    signal grp_dateport_update_C1_fu_316_ap_done : STD_LOGIC;
    signal tmp_i_fu_646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_938 : STD_LOGIC_VECTOR (0 downto 0);
    signal offset_cast1_fu_686_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal offset_cast1_reg_942 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st41_fsm_40 : STD_LOGIC;
    signal ap_sig_bdd_697 : BOOLEAN;
    signal j_fu_696_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_reg_950 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond_i_fu_690_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_reg_963 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st43_fsm_42 : STD_LOGIC;
    signal ap_sig_bdd_713 : BOOLEAN;
    signal h_1_fu_807_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st44_fsm_43 : STD_LOGIC;
    signal ap_sig_bdd_722 : BOOLEAN;
    signal offset_1_fu_815_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st45_fsm_44 : STD_LOGIC;
    signal ap_sig_bdd_733 : BOOLEAN;
    signal grp_dateport_update_C1_fu_316_ap_start : STD_LOGIC;
    signal grp_dateport_update_C1_fu_316_ap_idle : STD_LOGIC;
    signal grp_dateport_update_C1_fu_316_ap_ready : STD_LOGIC;
    signal grp_dateport_update_C1_fu_316_inputimg_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_dateport_update_C1_fu_316_inputimg_ce0 : STD_LOGIC;
    signal grp_dateport_update_C1_fu_316_inputimg_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_update_C1_fu_316_inputimg_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_dateport_update_C1_fu_316_inputimg_ce1 : STD_LOGIC;
    signal grp_dateport_update_C1_fu_316_inputimg_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_update_C1_fu_316_C1_d_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_dateport_update_C1_fu_316_C1_d_ce0 : STD_LOGIC;
    signal grp_dateport_update_C1_fu_316_C1_d_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_update_C1_fu_316_C1_d_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_dateport_update_C1_fu_316_C1_d_ce1 : STD_LOGIC;
    signal grp_dateport_update_C1_fu_316_C1_d_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_update_C1_fu_316_C1_dmapData_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dateport_update_C1_fu_316_C1_dmapData_ce0 : STD_LOGIC;
    signal grp_dateport_update_C1_fu_316_C1_dmapData_we0 : STD_LOGIC;
    signal grp_dateport_update_C1_fu_316_C1_dmapData_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_update_C1_fu_316_C1_dmapData_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_update_C1_fu_316_C1_dbias_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dateport_update_C1_fu_316_C1_dbias_ce0 : STD_LOGIC;
    signal grp_dateport_update_C1_fu_316_C1_dbias_we0 : STD_LOGIC;
    signal grp_dateport_update_C1_fu_316_C1_dbias_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_update_C1_fu_316_C1_dbias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_O_layer_fu_328_ap_start : STD_LOGIC;
    signal grp_dateport_O_layer_fu_328_ap_idle : STD_LOGIC;
    signal grp_dateport_O_layer_fu_328_ap_ready : STD_LOGIC;
    signal grp_dateport_O_layer_fu_328_C5_y_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dateport_O_layer_fu_328_C5_y_ce0 : STD_LOGIC;
    signal grp_dateport_O_layer_fu_328_C5_y_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_O_layer_fu_328_output_wei_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dateport_O_layer_fu_328_output_wei_ce0 : STD_LOGIC;
    signal grp_dateport_O_layer_fu_328_output_wei_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_O_layer_fu_328_output_bias_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dateport_O_layer_fu_328_output_bias_ce0 : STD_LOGIC;
    signal grp_dateport_O_layer_fu_328_output_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_O_layer_fu_328_output_y_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dateport_O_layer_fu_328_output_y_ce0 : STD_LOGIC;
    signal grp_dateport_O_layer_fu_328_output_y_we0 : STD_LOGIC;
    signal grp_dateport_O_layer_fu_328_output_y_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_DC1_layer_fu_342_ap_start : STD_LOGIC;
    signal grp_dateport_DC1_layer_fu_342_ap_done : STD_LOGIC;
    signal grp_dateport_DC1_layer_fu_342_ap_idle : STD_LOGIC;
    signal grp_dateport_DC1_layer_fu_342_ap_ready : STD_LOGIC;
    signal grp_dateport_DC1_layer_fu_342_C1_bias_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dateport_DC1_layer_fu_342_C1_bias_ce0 : STD_LOGIC;
    signal grp_dateport_DC1_layer_fu_342_C1_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_DC1_layer_fu_342_S2_d_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_dateport_DC1_layer_fu_342_S2_d_ce0 : STD_LOGIC;
    signal grp_dateport_DC1_layer_fu_342_S2_d_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_DC1_layer_fu_342_C1_v_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_dateport_DC1_layer_fu_342_C1_v_ce0 : STD_LOGIC;
    signal grp_dateport_DC1_layer_fu_342_C1_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_DC1_layer_fu_342_C1_v_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_dateport_DC1_layer_fu_342_C1_v_ce1 : STD_LOGIC;
    signal grp_dateport_DC1_layer_fu_342_C1_v_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_DC1_layer_fu_342_C1_d_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_dateport_DC1_layer_fu_342_C1_d_ce0 : STD_LOGIC;
    signal grp_dateport_DC1_layer_fu_342_C1_d_we0 : STD_LOGIC;
    signal grp_dateport_DC1_layer_fu_342_C1_d_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_DC1_layer_fu_342_C1_d_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_dateport_DC1_layer_fu_342_C1_d_ce1 : STD_LOGIC;
    signal grp_dateport_DC1_layer_fu_342_C1_d_we1 : STD_LOGIC;
    signal grp_dateport_DC1_layer_fu_342_C1_d_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_DC3_layer_fu_354_ap_start : STD_LOGIC;
    signal grp_dateport_DC3_layer_fu_354_ap_done : STD_LOGIC;
    signal grp_dateport_DC3_layer_fu_354_ap_idle : STD_LOGIC;
    signal grp_dateport_DC3_layer_fu_354_ap_ready : STD_LOGIC;
    signal grp_dateport_DC3_layer_fu_354_C3_bias_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dateport_DC3_layer_fu_354_C3_bias_ce0 : STD_LOGIC;
    signal grp_dateport_DC3_layer_fu_354_C3_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_DC3_layer_fu_354_S4_d_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dateport_DC3_layer_fu_354_S4_d_ce0 : STD_LOGIC;
    signal grp_dateport_DC3_layer_fu_354_S4_d_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_DC3_layer_fu_354_C3_y_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_dateport_DC3_layer_fu_354_C3_y_ce0 : STD_LOGIC;
    signal grp_dateport_DC3_layer_fu_354_C3_y_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_DC3_layer_fu_354_C3_y_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_dateport_DC3_layer_fu_354_C3_y_ce1 : STD_LOGIC;
    signal grp_dateport_DC3_layer_fu_354_C3_y_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_DC3_layer_fu_354_C3_d_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_dateport_DC3_layer_fu_354_C3_d_ce0 : STD_LOGIC;
    signal grp_dateport_DC3_layer_fu_354_C3_d_we0 : STD_LOGIC;
    signal grp_dateport_DC3_layer_fu_354_C3_d_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_DC3_layer_fu_354_C3_d_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_dateport_DC3_layer_fu_354_C3_d_ce1 : STD_LOGIC;
    signal grp_dateport_DC3_layer_fu_354_C3_d_we1 : STD_LOGIC;
    signal grp_dateport_DC3_layer_fu_354_C3_d_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_update_C3_fu_366_ap_start : STD_LOGIC;
    signal grp_dateport_update_C3_fu_366_ap_done : STD_LOGIC;
    signal grp_dateport_update_C3_fu_366_ap_idle : STD_LOGIC;
    signal grp_dateport_update_C3_fu_366_ap_ready : STD_LOGIC;
    signal grp_dateport_update_C3_fu_366_S2_y_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_dateport_update_C3_fu_366_S2_y_ce0 : STD_LOGIC;
    signal grp_dateport_update_C3_fu_366_S2_y_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_update_C3_fu_366_S2_y_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_dateport_update_C3_fu_366_S2_y_ce1 : STD_LOGIC;
    signal grp_dateport_update_C3_fu_366_S2_y_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_update_C3_fu_366_C3_d_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_dateport_update_C3_fu_366_C3_d_ce0 : STD_LOGIC;
    signal grp_dateport_update_C3_fu_366_C3_d_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_update_C3_fu_366_C3_d_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_dateport_update_C3_fu_366_C3_d_ce1 : STD_LOGIC;
    signal grp_dateport_update_C3_fu_366_C3_d_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_update_C3_fu_366_C3_dmapData_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dateport_update_C3_fu_366_C3_dmapData_ce0 : STD_LOGIC;
    signal grp_dateport_update_C3_fu_366_C3_dmapData_we0 : STD_LOGIC;
    signal grp_dateport_update_C3_fu_366_C3_dmapData_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_update_C3_fu_366_C3_dmapData_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_update_C3_fu_366_C3_dbias_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dateport_update_C3_fu_366_C3_dbias_ce0 : STD_LOGIC;
    signal grp_dateport_update_C3_fu_366_C3_dbias_we0 : STD_LOGIC;
    signal grp_dateport_update_C3_fu_366_C3_dbias_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_update_C3_fu_366_C3_dbias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_C3_conv_fu_378_ap_start : STD_LOGIC;
    signal grp_dateport_C3_conv_fu_378_ap_done : STD_LOGIC;
    signal grp_dateport_C3_conv_fu_378_ap_idle : STD_LOGIC;
    signal grp_dateport_C3_conv_fu_378_ap_ready : STD_LOGIC;
    signal grp_dateport_C3_conv_fu_378_S2_y_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_dateport_C3_conv_fu_378_S2_y_ce0 : STD_LOGIC;
    signal grp_dateport_C3_conv_fu_378_S2_y_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_C3_conv_fu_378_S2_y_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_dateport_C3_conv_fu_378_S2_y_ce1 : STD_LOGIC;
    signal grp_dateport_C3_conv_fu_378_S2_y_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_C3_conv_fu_378_C3_mapData_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dateport_C3_conv_fu_378_C3_mapData_ce0 : STD_LOGIC;
    signal grp_dateport_C3_conv_fu_378_C3_mapData_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_C3_conv_fu_378_C3_mapData_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dateport_C3_conv_fu_378_C3_mapData_ce1 : STD_LOGIC;
    signal grp_dateport_C3_conv_fu_378_C3_mapData_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_C3_conv_fu_378_C3_bias_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dateport_C3_conv_fu_378_C3_bias_ce0 : STD_LOGIC;
    signal grp_dateport_C3_conv_fu_378_C3_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_C3_conv_fu_378_C3_y_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_dateport_C3_conv_fu_378_C3_y_ce0 : STD_LOGIC;
    signal grp_dateport_C3_conv_fu_378_C3_y_we0 : STD_LOGIC;
    signal grp_dateport_C3_conv_fu_378_C3_y_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_DS2_layer_fu_392_ap_start : STD_LOGIC;
    signal grp_dateport_DS2_layer_fu_392_ap_done : STD_LOGIC;
    signal grp_dateport_DS2_layer_fu_392_ap_idle : STD_LOGIC;
    signal grp_dateport_DS2_layer_fu_392_ap_ready : STD_LOGIC;
    signal grp_dateport_DS2_layer_fu_392_S2_d_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_dateport_DS2_layer_fu_392_S2_d_ce0 : STD_LOGIC;
    signal grp_dateport_DS2_layer_fu_392_S2_d_we0 : STD_LOGIC;
    signal grp_dateport_DS2_layer_fu_392_S2_d_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_DS2_layer_fu_392_S2_d_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_DS2_layer_fu_392_C3_d_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_dateport_DS2_layer_fu_392_C3_d_ce0 : STD_LOGIC;
    signal grp_dateport_DS2_layer_fu_392_C3_d_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_DS2_layer_fu_392_C3_mapData_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dateport_DS2_layer_fu_392_C3_mapData_ce0 : STD_LOGIC;
    signal grp_dateport_DS2_layer_fu_392_C3_mapData_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_DS2_layer_fu_392_C3_mapData_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dateport_DS2_layer_fu_392_C3_mapData_ce1 : STD_LOGIC;
    signal grp_dateport_DS2_layer_fu_392_C3_mapData_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_C1_conv_fu_402_ap_start : STD_LOGIC;
    signal grp_dateport_C1_conv_fu_402_ap_done : STD_LOGIC;
    signal grp_dateport_C1_conv_fu_402_ap_idle : STD_LOGIC;
    signal grp_dateport_C1_conv_fu_402_ap_ready : STD_LOGIC;
    signal grp_dateport_C1_conv_fu_402_inputimg_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_dateport_C1_conv_fu_402_inputimg_ce0 : STD_LOGIC;
    signal grp_dateport_C1_conv_fu_402_inputimg_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_C1_conv_fu_402_inputimg_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_dateport_C1_conv_fu_402_inputimg_ce1 : STD_LOGIC;
    signal grp_dateport_C1_conv_fu_402_inputimg_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_C1_conv_fu_402_C1_v_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_dateport_C1_conv_fu_402_C1_v_ce0 : STD_LOGIC;
    signal grp_dateport_C1_conv_fu_402_C1_v_we0 : STD_LOGIC;
    signal grp_dateport_C1_conv_fu_402_C1_v_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_C1_conv_fu_402_C1_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_C1_conv_fu_402_C1_bias_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dateport_C1_conv_fu_402_C1_bias_ce0 : STD_LOGIC;
    signal grp_dateport_C1_conv_fu_402_C1_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_C1_conv_fu_402_C1_y_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_dateport_C1_conv_fu_402_C1_y_ce0 : STD_LOGIC;
    signal grp_dateport_C1_conv_fu_402_C1_y_we0 : STD_LOGIC;
    signal grp_dateport_C1_conv_fu_402_C1_y_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_C1_conv_fu_402_C1_mapData_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dateport_C1_conv_fu_402_C1_mapData_ce0 : STD_LOGIC;
    signal grp_dateport_C1_conv_fu_402_C1_mapData_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_C1_conv_fu_402_C1_mapData_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dateport_C1_conv_fu_402_C1_mapData_ce1 : STD_LOGIC;
    signal grp_dateport_C1_conv_fu_402_C1_mapData_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_upadteall_fu_416_ap_start : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_ap_done : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_ap_idle : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_ap_ready : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_C1_mapData_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dateport_upadteall_fu_416_C1_mapData_ce0 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_C1_mapData_we0 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_C1_mapData_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_upadteall_fu_416_C1_mapData_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_upadteall_fu_416_C1_dmapData_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_dateport_upadteall_fu_416_C1_dmapData_ce0 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_C1_dmapData_we0 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_C1_dmapData_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_upadteall_fu_416_C1_dmapData_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_upadteall_fu_416_C1_bias_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dateport_upadteall_fu_416_C1_bias_ce0 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_C1_bias_we0 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_C1_bias_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_upadteall_fu_416_C1_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_upadteall_fu_416_C1_dbias_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dateport_upadteall_fu_416_C1_dbias_ce0 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_C1_dbias_we0 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_C1_dbias_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_upadteall_fu_416_C1_dbias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_upadteall_fu_416_C3_mapData_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dateport_upadteall_fu_416_C3_mapData_ce0 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_C3_mapData_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_upadteall_fu_416_C3_mapData_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dateport_upadteall_fu_416_C3_mapData_ce1 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_C3_mapData_we1 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_C3_mapData_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_upadteall_fu_416_C3_dmapData_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dateport_upadteall_fu_416_C3_dmapData_ce0 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_C3_dmapData_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_upadteall_fu_416_C3_dmapData_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_dateport_upadteall_fu_416_C3_dmapData_ce1 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_C3_dmapData_we1 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_C3_dmapData_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_upadteall_fu_416_C3_bias_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dateport_upadteall_fu_416_C3_bias_ce0 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_C3_bias_we0 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_C3_bias_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_upadteall_fu_416_C3_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_upadteall_fu_416_C3_dbias_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dateport_upadteall_fu_416_C3_dbias_ce0 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_C3_dbias_we0 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_C3_dbias_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_upadteall_fu_416_C3_dbias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_upadteall_fu_416_C5_mapData_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dateport_upadteall_fu_416_C5_mapData_ce0 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_C5_mapData_we0 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_C5_mapData_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_upadteall_fu_416_C5_mapData_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_upadteall_fu_416_C5_dmapData_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dateport_upadteall_fu_416_C5_dmapData_ce0 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_C5_dmapData_we0 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_C5_dmapData_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_upadteall_fu_416_C5_dmapData_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_upadteall_fu_416_C5_bias_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dateport_upadteall_fu_416_C5_bias_ce0 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_C5_bias_we0 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_C5_bias_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_upadteall_fu_416_C5_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_upadteall_fu_416_C5_dbias_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dateport_upadteall_fu_416_C5_dbias_ce0 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_C5_dbias_we0 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_C5_dbias_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_upadteall_fu_416_C5_dbias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_upadteall_fu_416_output_wei_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dateport_upadteall_fu_416_output_wei_ce0 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_output_wei_we0 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_output_wei_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_upadteall_fu_416_output_wei_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_upadteall_fu_416_output_dwei_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dateport_upadteall_fu_416_output_dwei_ce0 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_output_dwei_we0 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_output_dwei_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_upadteall_fu_416_output_dwei_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_upadteall_fu_416_output_bias_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dateport_upadteall_fu_416_output_bias_ce0 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_output_bias_we0 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_output_bias_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_upadteall_fu_416_output_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_upadteall_fu_416_output_dbias_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dateport_upadteall_fu_416_output_dbias_ce0 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_output_dbias_we0 : STD_LOGIC;
    signal grp_dateport_upadteall_fu_416_output_dbias_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_upadteall_fu_416_output_dbias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_update_C5_fu_452_ap_start : STD_LOGIC;
    signal grp_dateport_update_C5_fu_452_ap_done : STD_LOGIC;
    signal grp_dateport_update_C5_fu_452_ap_idle : STD_LOGIC;
    signal grp_dateport_update_C5_fu_452_ap_ready : STD_LOGIC;
    signal grp_dateport_update_C5_fu_452_S4_y_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dateport_update_C5_fu_452_S4_y_ce0 : STD_LOGIC;
    signal grp_dateport_update_C5_fu_452_S4_y_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_update_C5_fu_452_S4_y_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dateport_update_C5_fu_452_S4_y_ce1 : STD_LOGIC;
    signal grp_dateport_update_C5_fu_452_S4_y_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_update_C5_fu_452_C5_dmapData_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dateport_update_C5_fu_452_C5_dmapData_ce0 : STD_LOGIC;
    signal grp_dateport_update_C5_fu_452_C5_dmapData_we0 : STD_LOGIC;
    signal grp_dateport_update_C5_fu_452_C5_dmapData_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_update_C5_fu_452_C5_dmapData_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_update_C5_fu_452_C5_d_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dateport_update_C5_fu_452_C5_d_ce0 : STD_LOGIC;
    signal grp_dateport_update_C5_fu_452_C5_d_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_update_C5_fu_452_C5_dbias_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dateport_update_C5_fu_452_C5_dbias_ce0 : STD_LOGIC;
    signal grp_dateport_update_C5_fu_452_C5_dbias_we0 : STD_LOGIC;
    signal grp_dateport_update_C5_fu_452_C5_dbias_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_update_C5_fu_452_C5_dbias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_DS4_layer_fu_464_ap_start : STD_LOGIC;
    signal grp_dateport_DS4_layer_fu_464_ap_done : STD_LOGIC;
    signal grp_dateport_DS4_layer_fu_464_ap_idle : STD_LOGIC;
    signal grp_dateport_DS4_layer_fu_464_ap_ready : STD_LOGIC;
    signal grp_dateport_DS4_layer_fu_464_S4_d_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dateport_DS4_layer_fu_464_S4_d_ce0 : STD_LOGIC;
    signal grp_dateport_DS4_layer_fu_464_S4_d_we0 : STD_LOGIC;
    signal grp_dateport_DS4_layer_fu_464_S4_d_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_DS4_layer_fu_464_S4_d_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_DS4_layer_fu_464_S4_d_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dateport_DS4_layer_fu_464_S4_d_ce1 : STD_LOGIC;
    signal grp_dateport_DS4_layer_fu_464_S4_d_we1 : STD_LOGIC;
    signal grp_dateport_DS4_layer_fu_464_S4_d_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_DS4_layer_fu_464_S4_d_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_DS4_layer_fu_464_C5_d_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dateport_DS4_layer_fu_464_C5_d_ce0 : STD_LOGIC;
    signal grp_dateport_DS4_layer_fu_464_C5_d_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_DS4_layer_fu_464_C5_mapData_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dateport_DS4_layer_fu_464_C5_mapData_ce0 : STD_LOGIC;
    signal grp_dateport_DS4_layer_fu_464_C5_mapData_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_DS4_layer_fu_464_C5_mapData_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dateport_DS4_layer_fu_464_C5_mapData_ce1 : STD_LOGIC;
    signal grp_dateport_DS4_layer_fu_464_C5_mapData_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_C5_conv_fu_474_ap_start : STD_LOGIC;
    signal grp_dateport_C5_conv_fu_474_ap_done : STD_LOGIC;
    signal grp_dateport_C5_conv_fu_474_ap_idle : STD_LOGIC;
    signal grp_dateport_C5_conv_fu_474_ap_ready : STD_LOGIC;
    signal grp_dateport_C5_conv_fu_474_C5_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dateport_C5_conv_fu_474_C5_v_ce0 : STD_LOGIC;
    signal grp_dateport_C5_conv_fu_474_C5_v_we0 : STD_LOGIC;
    signal grp_dateport_C5_conv_fu_474_C5_v_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_C5_conv_fu_474_C5_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_C5_conv_fu_474_S4_y_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dateport_C5_conv_fu_474_S4_y_ce0 : STD_LOGIC;
    signal grp_dateport_C5_conv_fu_474_S4_y_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_C5_conv_fu_474_C5_mapData_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dateport_C5_conv_fu_474_C5_mapData_ce0 : STD_LOGIC;
    signal grp_dateport_C5_conv_fu_474_C5_mapData_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_C5_conv_fu_474_C5_bias_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dateport_C5_conv_fu_474_C5_bias_ce0 : STD_LOGIC;
    signal grp_dateport_C5_conv_fu_474_C5_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_C5_conv_fu_474_C5_y_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dateport_C5_conv_fu_474_C5_y_ce0 : STD_LOGIC;
    signal grp_dateport_C5_conv_fu_474_C5_y_we0 : STD_LOGIC;
    signal grp_dateport_C5_conv_fu_474_C5_y_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_DC5_layer_fu_488_ap_start : STD_LOGIC;
    signal grp_dateport_DC5_layer_fu_488_ap_done : STD_LOGIC;
    signal grp_dateport_DC5_layer_fu_488_ap_idle : STD_LOGIC;
    signal grp_dateport_DC5_layer_fu_488_ap_ready : STD_LOGIC;
    signal grp_dateport_DC5_layer_fu_488_C5_d_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dateport_DC5_layer_fu_488_C5_d_ce0 : STD_LOGIC;
    signal grp_dateport_DC5_layer_fu_488_C5_d_we0 : STD_LOGIC;
    signal grp_dateport_DC5_layer_fu_488_C5_d_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_DC5_layer_fu_488_C5_d_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_DC5_layer_fu_488_output_d_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dateport_DC5_layer_fu_488_output_d_ce0 : STD_LOGIC;
    signal grp_dateport_DC5_layer_fu_488_output_d_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_DC5_layer_fu_488_output_wei_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dateport_DC5_layer_fu_488_output_wei_ce0 : STD_LOGIC;
    signal grp_dateport_DC5_layer_fu_488_output_wei_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_DC5_layer_fu_488_C5_v_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dateport_DC5_layer_fu_488_C5_v_ce0 : STD_LOGIC;
    signal grp_dateport_DC5_layer_fu_488_C5_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_DC5_layer_fu_488_C5_bias_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dateport_DC5_layer_fu_488_C5_bias_ce0 : STD_LOGIC;
    signal grp_dateport_DC5_layer_fu_488_C5_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_S2_pool_fu_502_ap_start : STD_LOGIC;
    signal grp_dateport_S2_pool_fu_502_ap_done : STD_LOGIC;
    signal grp_dateport_S2_pool_fu_502_ap_idle : STD_LOGIC;
    signal grp_dateport_S2_pool_fu_502_ap_ready : STD_LOGIC;
    signal grp_dateport_S2_pool_fu_502_C1_y_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_dateport_S2_pool_fu_502_C1_y_ce0 : STD_LOGIC;
    signal grp_dateport_S2_pool_fu_502_C1_y_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_S2_pool_fu_502_C1_y_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_dateport_S2_pool_fu_502_C1_y_ce1 : STD_LOGIC;
    signal grp_dateport_S2_pool_fu_502_C1_y_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_S2_pool_fu_502_S2_y_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_dateport_S2_pool_fu_502_S2_y_ce0 : STD_LOGIC;
    signal grp_dateport_S2_pool_fu_502_S2_y_we0 : STD_LOGIC;
    signal grp_dateport_S2_pool_fu_502_S2_y_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_S4_pool_fu_510_ap_start : STD_LOGIC;
    signal grp_dateport_S4_pool_fu_510_ap_done : STD_LOGIC;
    signal grp_dateport_S4_pool_fu_510_ap_idle : STD_LOGIC;
    signal grp_dateport_S4_pool_fu_510_ap_ready : STD_LOGIC;
    signal grp_dateport_S4_pool_fu_510_C3_y_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_dateport_S4_pool_fu_510_C3_y_ce0 : STD_LOGIC;
    signal grp_dateport_S4_pool_fu_510_C3_y_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_S4_pool_fu_510_C3_y_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_dateport_S4_pool_fu_510_C3_y_ce1 : STD_LOGIC;
    signal grp_dateport_S4_pool_fu_510_C3_y_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_S4_pool_fu_510_S4_y_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dateport_S4_pool_fu_510_S4_y_ce0 : STD_LOGIC;
    signal grp_dateport_S4_pool_fu_510_S4_y_we0 : STD_LOGIC;
    signal grp_dateport_S4_pool_fu_510_S4_y_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_update_OUT_fu_518_ap_start : STD_LOGIC;
    signal grp_dateport_update_OUT_fu_518_ap_done : STD_LOGIC;
    signal grp_dateport_update_OUT_fu_518_ap_idle : STD_LOGIC;
    signal grp_dateport_update_OUT_fu_518_ap_ready : STD_LOGIC;
    signal grp_dateport_update_OUT_fu_518_output_d_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dateport_update_OUT_fu_518_output_d_ce0 : STD_LOGIC;
    signal grp_dateport_update_OUT_fu_518_output_d_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_update_OUT_fu_518_output_dwei_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dateport_update_OUT_fu_518_output_dwei_ce0 : STD_LOGIC;
    signal grp_dateport_update_OUT_fu_518_output_dwei_we0 : STD_LOGIC;
    signal grp_dateport_update_OUT_fu_518_output_dwei_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_update_OUT_fu_518_output_dwei_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_update_OUT_fu_518_C5_y_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dateport_update_OUT_fu_518_C5_y_ce0 : STD_LOGIC;
    signal grp_dateport_update_OUT_fu_518_C5_y_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_update_OUT_fu_518_output_dbias_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dateport_update_OUT_fu_518_output_dbias_ce0 : STD_LOGIC;
    signal grp_dateport_update_OUT_fu_518_output_dbias_we0 : STD_LOGIC;
    signal grp_dateport_update_OUT_fu_518_output_dbias_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_update_OUT_fu_518_output_dbias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_i_i_reg_269 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st27_fsm_26 : STD_LOGIC;
    signal ap_sig_bdd_1184 : BOOLEAN;
    signal h_i_reg_281 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st40_fsm_39 : STD_LOGIC;
    signal ap_sig_bdd_1194 : BOOLEAN;
    signal offset_reg_293 : STD_LOGIC_VECTOR (3 downto 0);
    signal offset_i_reg_304 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dateport_update_C1_fu_316_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st37_fsm_36 : STD_LOGIC;
    signal ap_sig_bdd_1213 : BOOLEAN;
    signal grp_dateport_O_layer_fu_328_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st12_fsm_11 : STD_LOGIC;
    signal ap_sig_bdd_1222 : BOOLEAN;
    signal grp_dateport_DC1_layer_fu_342_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st35_fsm_34 : STD_LOGIC;
    signal ap_sig_bdd_1244 : BOOLEAN;
    signal ap_sig_cseq_ST_st36_fsm_35 : STD_LOGIC;
    signal ap_sig_bdd_1251 : BOOLEAN;
    signal grp_dateport_DC3_layer_fu_354_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st31_fsm_30 : STD_LOGIC;
    signal ap_sig_bdd_1260 : BOOLEAN;
    signal ap_sig_cseq_ST_st32_fsm_31 : STD_LOGIC;
    signal ap_sig_bdd_1267 : BOOLEAN;
    signal grp_dateport_update_C3_fu_366_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal grp_dateport_C3_conv_fu_378_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_bdd_1278 : BOOLEAN;
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_bdd_1294 : BOOLEAN;
    signal grp_dateport_DS2_layer_fu_392_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st33_fsm_32 : STD_LOGIC;
    signal ap_sig_bdd_1307 : BOOLEAN;
    signal ap_sig_cseq_ST_st34_fsm_33 : STD_LOGIC;
    signal ap_sig_bdd_1314 : BOOLEAN;
    signal grp_dateport_C1_conv_fu_402_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_1327 : BOOLEAN;
    signal grp_dateport_upadteall_fu_416_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st39_fsm_38 : STD_LOGIC;
    signal ap_sig_bdd_1336 : BOOLEAN;
    signal grp_dateport_update_C5_fu_452_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal grp_dateport_DS4_layer_fu_464_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st29_fsm_28 : STD_LOGIC;
    signal ap_sig_bdd_1348 : BOOLEAN;
    signal ap_sig_cseq_ST_st30_fsm_29 : STD_LOGIC;
    signal ap_sig_bdd_1355 : BOOLEAN;
    signal grp_dateport_C5_conv_fu_474_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_bdd_1364 : BOOLEAN;
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_bdd_1371 : BOOLEAN;
    signal grp_dateport_DC5_layer_fu_488_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st28_fsm_27 : STD_LOGIC;
    signal ap_sig_bdd_1382 : BOOLEAN;
    signal grp_dateport_S2_pool_fu_502_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_1391 : BOOLEAN;
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_bdd_1398 : BOOLEAN;
    signal grp_dateport_S4_pool_fu_510_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_bdd_1407 : BOOLEAN;
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_bdd_1414 : BOOLEAN;
    signal grp_dateport_update_OUT_fu_518_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal tmp_18_fu_620_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i1_fu_702_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_fu_830_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_cseq_ST_st48_fsm_47 : STD_LOGIC;
    signal ap_sig_bdd_1428 : BOOLEAN;
    signal p_tmp_7_fu_847_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_i_cast_fu_676_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_fu_571_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_i_fu_712_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i3_fu_707_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st46_fsm_45 : STD_LOGIC;
    signal ap_sig_bdd_1461 : BOOLEAN;
    signal grp_fu_530_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_530_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st22_fsm_21 : STD_LOGIC;
    signal ap_sig_bdd_1475 : BOOLEAN;
    signal grp_fu_534_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_537_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_537_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_588_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_583_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i_trn_fu_611_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal resid_addr4_fu_615_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_642_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_i_9_fu_652_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_19_fu_657_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_663_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_11_i_fu_668_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal m_to_int_fu_724_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_i_to_int_fu_742_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_728_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_21_fu_738_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs_fu_766_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_fu_760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_746_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_22_fu_756_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs6_fu_784_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs5_fu_778_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_772_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_790_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_802_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_835_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_841_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_530_ce : STD_LOGIC;
    signal grp_fu_534_ce : STD_LOGIC;
    signal tmp_16_fu_537_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_cseq_ST_st49_fsm_48 : STD_LOGIC;
    signal ap_sig_bdd_1672 : BOOLEAN;
    signal ap_sig_bdd_1677 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (48 downto 0);

    component dateport_update_C1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        inputimg_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        inputimg_ce0 : OUT STD_LOGIC;
        inputimg_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        inputimg_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        inputimg_ce1 : OUT STD_LOGIC;
        inputimg_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C1_d_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        C1_d_ce0 : OUT STD_LOGIC;
        C1_d_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C1_d_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
        C1_d_ce1 : OUT STD_LOGIC;
        C1_d_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C1_dmapData_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        C1_dmapData_ce0 : OUT STD_LOGIC;
        C1_dmapData_we0 : OUT STD_LOGIC;
        C1_dmapData_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C1_dmapData_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C1_dbias_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        C1_dbias_ce0 : OUT STD_LOGIC;
        C1_dbias_we0 : OUT STD_LOGIC;
        C1_dbias_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C1_dbias_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_O_layer IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        C5_y_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        C5_y_ce0 : OUT STD_LOGIC;
        C5_y_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_wei_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        output_wei_ce0 : OUT STD_LOGIC;
        output_wei_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_bias_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        output_bias_ce0 : OUT STD_LOGIC;
        output_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_y_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        output_y_ce0 : OUT STD_LOGIC;
        output_y_we0 : OUT STD_LOGIC;
        output_y_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_DC1_layer IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        C1_bias_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        C1_bias_ce0 : OUT STD_LOGIC;
        C1_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        S2_d_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        S2_d_ce0 : OUT STD_LOGIC;
        S2_d_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C1_v_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        C1_v_ce0 : OUT STD_LOGIC;
        C1_v_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C1_v_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
        C1_v_ce1 : OUT STD_LOGIC;
        C1_v_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C1_d_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        C1_d_ce0 : OUT STD_LOGIC;
        C1_d_we0 : OUT STD_LOGIC;
        C1_d_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C1_d_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
        C1_d_ce1 : OUT STD_LOGIC;
        C1_d_we1 : OUT STD_LOGIC;
        C1_d_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_DC3_layer IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        C3_bias_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        C3_bias_ce0 : OUT STD_LOGIC;
        C3_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        S4_d_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        S4_d_ce0 : OUT STD_LOGIC;
        S4_d_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C3_y_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        C3_y_ce0 : OUT STD_LOGIC;
        C3_y_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C3_y_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        C3_y_ce1 : OUT STD_LOGIC;
        C3_y_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C3_d_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        C3_d_ce0 : OUT STD_LOGIC;
        C3_d_we0 : OUT STD_LOGIC;
        C3_d_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C3_d_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        C3_d_ce1 : OUT STD_LOGIC;
        C3_d_we1 : OUT STD_LOGIC;
        C3_d_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_update_C3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        S2_y_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        S2_y_ce0 : OUT STD_LOGIC;
        S2_y_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        S2_y_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        S2_y_ce1 : OUT STD_LOGIC;
        S2_y_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C3_d_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        C3_d_ce0 : OUT STD_LOGIC;
        C3_d_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C3_d_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        C3_d_ce1 : OUT STD_LOGIC;
        C3_d_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C3_dmapData_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        C3_dmapData_ce0 : OUT STD_LOGIC;
        C3_dmapData_we0 : OUT STD_LOGIC;
        C3_dmapData_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C3_dmapData_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C3_dbias_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        C3_dbias_ce0 : OUT STD_LOGIC;
        C3_dbias_we0 : OUT STD_LOGIC;
        C3_dbias_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C3_dbias_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_C3_conv IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        S2_y_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        S2_y_ce0 : OUT STD_LOGIC;
        S2_y_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        S2_y_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        S2_y_ce1 : OUT STD_LOGIC;
        S2_y_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C3_mapData_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        C3_mapData_ce0 : OUT STD_LOGIC;
        C3_mapData_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C3_mapData_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        C3_mapData_ce1 : OUT STD_LOGIC;
        C3_mapData_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C3_bias_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        C3_bias_ce0 : OUT STD_LOGIC;
        C3_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C3_y_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        C3_y_ce0 : OUT STD_LOGIC;
        C3_y_we0 : OUT STD_LOGIC;
        C3_y_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_DS2_layer IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        S2_d_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        S2_d_ce0 : OUT STD_LOGIC;
        S2_d_we0 : OUT STD_LOGIC;
        S2_d_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        S2_d_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C3_d_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        C3_d_ce0 : OUT STD_LOGIC;
        C3_d_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C3_mapData_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        C3_mapData_ce0 : OUT STD_LOGIC;
        C3_mapData_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C3_mapData_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        C3_mapData_ce1 : OUT STD_LOGIC;
        C3_mapData_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_C1_conv IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        inputimg_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        inputimg_ce0 : OUT STD_LOGIC;
        inputimg_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        inputimg_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        inputimg_ce1 : OUT STD_LOGIC;
        inputimg_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C1_v_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        C1_v_ce0 : OUT STD_LOGIC;
        C1_v_we0 : OUT STD_LOGIC;
        C1_v_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C1_v_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C1_bias_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        C1_bias_ce0 : OUT STD_LOGIC;
        C1_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C1_y_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        C1_y_ce0 : OUT STD_LOGIC;
        C1_y_we0 : OUT STD_LOGIC;
        C1_y_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C1_mapData_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        C1_mapData_ce0 : OUT STD_LOGIC;
        C1_mapData_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C1_mapData_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        C1_mapData_ce1 : OUT STD_LOGIC;
        C1_mapData_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_upadteall IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        C1_mapData_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        C1_mapData_ce0 : OUT STD_LOGIC;
        C1_mapData_we0 : OUT STD_LOGIC;
        C1_mapData_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C1_mapData_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C1_dmapData_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        C1_dmapData_ce0 : OUT STD_LOGIC;
        C1_dmapData_we0 : OUT STD_LOGIC;
        C1_dmapData_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C1_dmapData_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C1_bias_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        C1_bias_ce0 : OUT STD_LOGIC;
        C1_bias_we0 : OUT STD_LOGIC;
        C1_bias_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C1_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C1_dbias_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        C1_dbias_ce0 : OUT STD_LOGIC;
        C1_dbias_we0 : OUT STD_LOGIC;
        C1_dbias_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C1_dbias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C3_mapData_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        C3_mapData_ce0 : OUT STD_LOGIC;
        C3_mapData_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C3_mapData_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        C3_mapData_ce1 : OUT STD_LOGIC;
        C3_mapData_we1 : OUT STD_LOGIC;
        C3_mapData_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C3_dmapData_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        C3_dmapData_ce0 : OUT STD_LOGIC;
        C3_dmapData_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C3_dmapData_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        C3_dmapData_ce1 : OUT STD_LOGIC;
        C3_dmapData_we1 : OUT STD_LOGIC;
        C3_dmapData_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C3_bias_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        C3_bias_ce0 : OUT STD_LOGIC;
        C3_bias_we0 : OUT STD_LOGIC;
        C3_bias_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C3_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C3_dbias_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        C3_dbias_ce0 : OUT STD_LOGIC;
        C3_dbias_we0 : OUT STD_LOGIC;
        C3_dbias_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C3_dbias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C5_mapData_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        C5_mapData_ce0 : OUT STD_LOGIC;
        C5_mapData_we0 : OUT STD_LOGIC;
        C5_mapData_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C5_mapData_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C5_dmapData_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        C5_dmapData_ce0 : OUT STD_LOGIC;
        C5_dmapData_we0 : OUT STD_LOGIC;
        C5_dmapData_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C5_dmapData_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C5_bias_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        C5_bias_ce0 : OUT STD_LOGIC;
        C5_bias_we0 : OUT STD_LOGIC;
        C5_bias_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C5_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C5_dbias_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        C5_dbias_ce0 : OUT STD_LOGIC;
        C5_dbias_we0 : OUT STD_LOGIC;
        C5_dbias_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C5_dbias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_wei_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        output_wei_ce0 : OUT STD_LOGIC;
        output_wei_we0 : OUT STD_LOGIC;
        output_wei_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_wei_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_dwei_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        output_dwei_ce0 : OUT STD_LOGIC;
        output_dwei_we0 : OUT STD_LOGIC;
        output_dwei_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_dwei_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_bias_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        output_bias_ce0 : OUT STD_LOGIC;
        output_bias_we0 : OUT STD_LOGIC;
        output_bias_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_dbias_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        output_dbias_ce0 : OUT STD_LOGIC;
        output_dbias_we0 : OUT STD_LOGIC;
        output_dbias_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_dbias_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_update_C5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        S4_y_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        S4_y_ce0 : OUT STD_LOGIC;
        S4_y_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        S4_y_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        S4_y_ce1 : OUT STD_LOGIC;
        S4_y_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C5_dmapData_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        C5_dmapData_ce0 : OUT STD_LOGIC;
        C5_dmapData_we0 : OUT STD_LOGIC;
        C5_dmapData_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C5_dmapData_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C5_d_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        C5_d_ce0 : OUT STD_LOGIC;
        C5_d_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C5_dbias_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        C5_dbias_ce0 : OUT STD_LOGIC;
        C5_dbias_we0 : OUT STD_LOGIC;
        C5_dbias_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C5_dbias_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_DS4_layer IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        S4_d_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        S4_d_ce0 : OUT STD_LOGIC;
        S4_d_we0 : OUT STD_LOGIC;
        S4_d_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        S4_d_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        S4_d_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        S4_d_ce1 : OUT STD_LOGIC;
        S4_d_we1 : OUT STD_LOGIC;
        S4_d_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        S4_d_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C5_d_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        C5_d_ce0 : OUT STD_LOGIC;
        C5_d_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C5_mapData_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        C5_mapData_ce0 : OUT STD_LOGIC;
        C5_mapData_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C5_mapData_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        C5_mapData_ce1 : OUT STD_LOGIC;
        C5_mapData_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_C5_conv IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        C5_v_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        C5_v_ce0 : OUT STD_LOGIC;
        C5_v_we0 : OUT STD_LOGIC;
        C5_v_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C5_v_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        S4_y_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        S4_y_ce0 : OUT STD_LOGIC;
        S4_y_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C5_mapData_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        C5_mapData_ce0 : OUT STD_LOGIC;
        C5_mapData_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C5_bias_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        C5_bias_ce0 : OUT STD_LOGIC;
        C5_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C5_y_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        C5_y_ce0 : OUT STD_LOGIC;
        C5_y_we0 : OUT STD_LOGIC;
        C5_y_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_DC5_layer IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        C5_d_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        C5_d_ce0 : OUT STD_LOGIC;
        C5_d_we0 : OUT STD_LOGIC;
        C5_d_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C5_d_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_d_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        output_d_ce0 : OUT STD_LOGIC;
        output_d_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_wei_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        output_wei_ce0 : OUT STD_LOGIC;
        output_wei_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C5_v_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        C5_v_ce0 : OUT STD_LOGIC;
        C5_v_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C5_bias_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        C5_bias_ce0 : OUT STD_LOGIC;
        C5_bias_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_S2_pool IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        C1_y_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        C1_y_ce0 : OUT STD_LOGIC;
        C1_y_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C1_y_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
        C1_y_ce1 : OUT STD_LOGIC;
        C1_y_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        S2_y_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        S2_y_ce0 : OUT STD_LOGIC;
        S2_y_we0 : OUT STD_LOGIC;
        S2_y_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_S4_pool IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        C3_y_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        C3_y_ce0 : OUT STD_LOGIC;
        C3_y_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C3_y_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        C3_y_ce1 : OUT STD_LOGIC;
        C3_y_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        S4_y_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        S4_y_ce0 : OUT STD_LOGIC;
        S4_y_we0 : OUT STD_LOGIC;
        S4_y_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_update_OUT IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        output_d_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        output_d_ce0 : OUT STD_LOGIC;
        output_d_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_dwei_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        output_dwei_ce0 : OUT STD_LOGIC;
        output_dwei_we0 : OUT STD_LOGIC;
        output_dwei_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_dwei_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C5_y_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        C5_y_ce0 : OUT STD_LOGIC;
        C5_y_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_dbias_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        output_dbias_ce0 : OUT STD_LOGIC;
        output_dbias_we0 : OUT STD_LOGIC;
        output_dbias_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_dbias_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_fsub_32ns_32ns_32_5_full_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_sitofp_32ns_32_6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_fcmp_32ns_32ns_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component dateport_input_img IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_C1_v IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_C1_bias IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_C1_mapData IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_S2_y IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_C3_mapData IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_C3_bias IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_C3_y IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_S4_y IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_C5_v IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_C5_mapData IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_output_wei IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_O_layer_output_v IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_resid IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component dateport_S4_d IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_C3_d IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_S2_d IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_C1_d IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_C1_dmapData IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_C3_dmapData IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_C5_dmapData IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_output_dwei IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dateport_AXILiteS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        date : OUT STD_LOGIC_VECTOR (31 downto 0);
        signal_r : OUT STD_LOGIC_VECTOR (7 downto 0);
        led : IN STD_LOGIC_VECTOR (15 downto 0);
        led_ap_vld : IN STD_LOGIC;
        signal_out : IN STD_LOGIC_VECTOR (7 downto 0);
        signal_out_ap_vld : IN STD_LOGIC );
    end component;



begin
    input_img_U : component dateport_input_img
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_img_address0,
        ce0 => input_img_ce0,
        we0 => input_img_we0,
        d0 => input_img_d0,
        q0 => input_img_q0,
        address1 => input_img_address1,
        ce1 => input_img_ce1,
        q1 => input_img_q1);

    C1_v_U : component dateport_C1_v
    generic map (
        DataWidth => 32,
        AddressRange => 4704,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => C1_v_address0,
        ce0 => C1_v_ce0,
        we0 => C1_v_we0,
        d0 => C1_v_d0,
        q0 => C1_v_q0,
        address1 => C1_v_address1,
        ce1 => C1_v_ce1,
        q1 => C1_v_q1);

    C1_bias_U : component dateport_C1_bias
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => C1_bias_address0,
        ce0 => C1_bias_ce0,
        we0 => C1_bias_we0,
        d0 => C1_bias_d0,
        q0 => C1_bias_q0);

    C1_y_U : component dateport_C1_v
    generic map (
        DataWidth => 32,
        AddressRange => 4704,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => C1_y_address0,
        ce0 => C1_y_ce0,
        we0 => C1_y_we0,
        d0 => C1_y_d0,
        q0 => C1_y_q0,
        address1 => C1_y_address1,
        ce1 => C1_y_ce1,
        q1 => C1_y_q1);

    C1_mapData_U : component dateport_C1_mapData
    generic map (
        DataWidth => 32,
        AddressRange => 150,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => C1_mapData_address0,
        ce0 => C1_mapData_ce0,
        we0 => C1_mapData_we0,
        d0 => C1_mapData_d0,
        q0 => C1_mapData_q0,
        address1 => C1_mapData_address1,
        ce1 => C1_mapData_ce1,
        q1 => C1_mapData_q1);

    S2_y_U : component dateport_S2_y
    generic map (
        DataWidth => 32,
        AddressRange => 1176,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => S2_y_address0,
        ce0 => S2_y_ce0,
        we0 => S2_y_we0,
        d0 => S2_y_d0,
        q0 => S2_y_q0,
        address1 => S2_y_address1,
        ce1 => S2_y_ce1,
        q1 => S2_y_q1);

    C3_mapData_U : component dateport_C3_mapData
    generic map (
        DataWidth => 32,
        AddressRange => 2400,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => C3_mapData_address0,
        ce0 => C3_mapData_ce0,
        q0 => C3_mapData_q0,
        address1 => C3_mapData_address1,
        ce1 => C3_mapData_ce1,
        we1 => C3_mapData_we1,
        d1 => C3_mapData_d1,
        q1 => C3_mapData_q1);

    C3_bias_U : component dateport_C3_bias
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => C3_bias_address0,
        ce0 => C3_bias_ce0,
        we0 => C3_bias_we0,
        d0 => C3_bias_d0,
        q0 => C3_bias_q0);

    C3_y_U : component dateport_C3_y
    generic map (
        DataWidth => 32,
        AddressRange => 1600,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => C3_y_address0,
        ce0 => C3_y_ce0,
        we0 => C3_y_we0,
        d0 => C3_y_d0,
        q0 => C3_y_q0,
        address1 => C3_y_address1,
        ce1 => C3_y_ce1,
        q1 => C3_y_q1);

    S4_y_U : component dateport_S4_y
    generic map (
        DataWidth => 32,
        AddressRange => 400,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => S4_y_address0,
        ce0 => S4_y_ce0,
        we0 => S4_y_we0,
        d0 => S4_y_d0,
        q0 => S4_y_q0,
        address1 => S4_y_address1,
        ce1 => S4_y_ce1,
        q1 => S4_y_q1);

    C5_v_U : component dateport_C5_v
    generic map (
        DataWidth => 32,
        AddressRange => 30,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => C5_v_address0,
        ce0 => C5_v_ce0,
        we0 => C5_v_we0,
        d0 => C5_v_d0,
        q0 => C5_v_q0);

    C5_mapData_U : component dateport_C5_mapData
    generic map (
        DataWidth => 32,
        AddressRange => 12000,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => C5_mapData_address0,
        ce0 => C5_mapData_ce0,
        we0 => C5_mapData_we0,
        d0 => C5_mapData_d0,
        q0 => C5_mapData_q0,
        address1 => C5_mapData_address1,
        ce1 => C5_mapData_ce1,
        q1 => C5_mapData_q1);

    C5_bias_U : component dateport_C5_v
    generic map (
        DataWidth => 32,
        AddressRange => 30,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => C5_bias_address0,
        ce0 => C5_bias_ce0,
        we0 => C5_bias_we0,
        d0 => C5_bias_d0,
        q0 => C5_bias_q0);

    C5_y_U : component dateport_C5_v
    generic map (
        DataWidth => 32,
        AddressRange => 30,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => C5_y_address0,
        ce0 => C5_y_ce0,
        we0 => C5_y_we0,
        d0 => C5_y_d0,
        q0 => C5_y_q0);

    output_wei_U : component dateport_output_wei
    generic map (
        DataWidth => 32,
        AddressRange => 300,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => output_wei_address0,
        ce0 => output_wei_ce0,
        we0 => output_wei_we0,
        d0 => output_wei_d0,
        q0 => output_wei_q0);

    output_bias_U : component dateport_O_layer_output_v
    generic map (
        DataWidth => 32,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => output_bias_address0,
        ce0 => output_bias_ce0,
        we0 => output_bias_we0,
        d0 => output_bias_d0,
        q0 => output_bias_q0);

    output_y_U : component dateport_O_layer_output_v
    generic map (
        DataWidth => 32,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => output_y_address0,
        ce0 => output_y_ce0,
        we0 => output_y_we0,
        d0 => output_y_d0,
        q0 => output_y_q0);

    resid_U : component dateport_resid
    generic map (
        DataWidth => 1,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => resid_address0,
        ce0 => resid_ce0,
        q0 => resid_q0);

    output_d_U : component dateport_O_layer_output_v
    generic map (
        DataWidth => 32,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => output_d_address0,
        ce0 => output_d_ce0,
        we0 => output_d_we0,
        d0 => output_d_d0,
        q0 => output_d_q0);

    C5_d_U : component dateport_C5_v
    generic map (
        DataWidth => 32,
        AddressRange => 30,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => C5_d_address0,
        ce0 => C5_d_ce0,
        we0 => C5_d_we0,
        d0 => C5_d_d0,
        q0 => C5_d_q0);

    S4_d_U : component dateport_S4_d
    generic map (
        DataWidth => 32,
        AddressRange => 400,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => S4_d_address0,
        ce0 => S4_d_ce0,
        we0 => S4_d_we0,
        d0 => S4_d_d0,
        q0 => S4_d_q0,
        address1 => S4_d_address1,
        ce1 => S4_d_ce1,
        we1 => S4_d_we1,
        d1 => S4_d_d1,
        q1 => S4_d_q1);

    C3_d_U : component dateport_C3_d
    generic map (
        DataWidth => 32,
        AddressRange => 1600,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => C3_d_address0,
        ce0 => C3_d_ce0,
        we0 => C3_d_we0,
        d0 => C3_d_d0,
        q0 => C3_d_q0,
        address1 => C3_d_address1,
        ce1 => C3_d_ce1,
        we1 => C3_d_we1,
        d1 => C3_d_d1,
        q1 => C3_d_q1);

    S2_d_U : component dateport_S2_d
    generic map (
        DataWidth => 32,
        AddressRange => 1176,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => S2_d_address0,
        ce0 => S2_d_ce0,
        we0 => S2_d_we0,
        d0 => S2_d_d0,
        q0 => S2_d_q0);

    C1_d_U : component dateport_C1_d
    generic map (
        DataWidth => 32,
        AddressRange => 4704,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => C1_d_address0,
        ce0 => C1_d_ce0,
        we0 => C1_d_we0,
        d0 => C1_d_d0,
        q0 => C1_d_q0,
        address1 => C1_d_address1,
        ce1 => C1_d_ce1,
        we1 => C1_d_we1,
        d1 => C1_d_d1,
        q1 => C1_d_q1);

    C1_dmapData_U : component dateport_C1_dmapData
    generic map (
        DataWidth => 32,
        AddressRange => 150,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => C1_dmapData_address0,
        ce0 => C1_dmapData_ce0,
        we0 => C1_dmapData_we0,
        d0 => C1_dmapData_d0,
        q0 => C1_dmapData_q0);

    C1_dbias_U : component dateport_C1_bias
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => C1_dbias_address0,
        ce0 => C1_dbias_ce0,
        we0 => C1_dbias_we0,
        d0 => C1_dbias_d0,
        q0 => C1_dbias_q0);

    C3_dmapData_U : component dateport_C3_dmapData
    generic map (
        DataWidth => 32,
        AddressRange => 2400,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => C3_dmapData_address0,
        ce0 => C3_dmapData_ce0,
        we0 => C3_dmapData_we0,
        d0 => C3_dmapData_d0,
        q0 => C3_dmapData_q0,
        address1 => C3_dmapData_address1,
        ce1 => C3_dmapData_ce1,
        we1 => C3_dmapData_we1,
        d1 => C3_dmapData_d1);

    C3_dbias_U : component dateport_C3_bias
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => C3_dbias_address0,
        ce0 => C3_dbias_ce0,
        we0 => C3_dbias_we0,
        d0 => C3_dbias_d0,
        q0 => C3_dbias_q0);

    C5_dmapData_U : component dateport_C5_dmapData
    generic map (
        DataWidth => 32,
        AddressRange => 12000,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => C5_dmapData_address0,
        ce0 => C5_dmapData_ce0,
        we0 => C5_dmapData_we0,
        d0 => C5_dmapData_d0,
        q0 => C5_dmapData_q0);

    C5_dbias_U : component dateport_C5_v
    generic map (
        DataWidth => 32,
        AddressRange => 30,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => C5_dbias_address0,
        ce0 => C5_dbias_ce0,
        we0 => C5_dbias_we0,
        d0 => C5_dbias_d0,
        q0 => C5_dbias_q0);

    output_dwei_U : component dateport_output_dwei
    generic map (
        DataWidth => 32,
        AddressRange => 300,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => output_dwei_address0,
        ce0 => output_dwei_ce0,
        we0 => output_dwei_we0,
        d0 => output_dwei_d0,
        q0 => output_dwei_q0);

    output_dbias_U : component dateport_O_layer_output_v
    generic map (
        DataWidth => 32,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => output_dbias_address0,
        ce0 => output_dbias_ce0,
        we0 => output_dbias_we0,
        d0 => output_dbias_d0,
        q0 => output_dbias_q0);

    dateport_AXILiteS_s_axi_U : component dateport_AXILiteS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_AXILITES_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_AXILITES_DATA_WIDTH)
    port map (
        AWVALID => s_axi_AXILiteS_AWVALID,
        AWREADY => s_axi_AXILiteS_AWREADY,
        AWADDR => s_axi_AXILiteS_AWADDR,
        WVALID => s_axi_AXILiteS_WVALID,
        WREADY => s_axi_AXILiteS_WREADY,
        WDATA => s_axi_AXILiteS_WDATA,
        WSTRB => s_axi_AXILiteS_WSTRB,
        ARVALID => s_axi_AXILiteS_ARVALID,
        ARREADY => s_axi_AXILiteS_ARREADY,
        ARADDR => s_axi_AXILiteS_ARADDR,
        RVALID => s_axi_AXILiteS_RVALID,
        RREADY => s_axi_AXILiteS_RREADY,
        RDATA => s_axi_AXILiteS_RDATA,
        RRESP => s_axi_AXILiteS_RRESP,
        BVALID => s_axi_AXILiteS_BVALID,
        BREADY => s_axi_AXILiteS_BREADY,
        BRESP => s_axi_AXILiteS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => dateport_AXILiteS_s_axi_U_ap_dummy_ce,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        date => date,
        signal_r => signal_r,
        led => led,
        led_ap_vld => led_ap_vld,
        signal_out => signal_out,
        signal_out_ap_vld => signal_out_ap_vld);

    grp_dateport_update_C1_fu_316 : component dateport_update_C1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_dateport_update_C1_fu_316_ap_start,
        ap_done => grp_dateport_update_C1_fu_316_ap_done,
        ap_idle => grp_dateport_update_C1_fu_316_ap_idle,
        ap_ready => grp_dateport_update_C1_fu_316_ap_ready,
        inputimg_address0 => grp_dateport_update_C1_fu_316_inputimg_address0,
        inputimg_ce0 => grp_dateport_update_C1_fu_316_inputimg_ce0,
        inputimg_q0 => grp_dateport_update_C1_fu_316_inputimg_q0,
        inputimg_address1 => grp_dateport_update_C1_fu_316_inputimg_address1,
        inputimg_ce1 => grp_dateport_update_C1_fu_316_inputimg_ce1,
        inputimg_q1 => grp_dateport_update_C1_fu_316_inputimg_q1,
        C1_d_address0 => grp_dateport_update_C1_fu_316_C1_d_address0,
        C1_d_ce0 => grp_dateport_update_C1_fu_316_C1_d_ce0,
        C1_d_q0 => grp_dateport_update_C1_fu_316_C1_d_q0,
        C1_d_address1 => grp_dateport_update_C1_fu_316_C1_d_address1,
        C1_d_ce1 => grp_dateport_update_C1_fu_316_C1_d_ce1,
        C1_d_q1 => grp_dateport_update_C1_fu_316_C1_d_q1,
        C1_dmapData_address0 => grp_dateport_update_C1_fu_316_C1_dmapData_address0,
        C1_dmapData_ce0 => grp_dateport_update_C1_fu_316_C1_dmapData_ce0,
        C1_dmapData_we0 => grp_dateport_update_C1_fu_316_C1_dmapData_we0,
        C1_dmapData_d0 => grp_dateport_update_C1_fu_316_C1_dmapData_d0,
        C1_dmapData_q0 => grp_dateport_update_C1_fu_316_C1_dmapData_q0,
        C1_dbias_address0 => grp_dateport_update_C1_fu_316_C1_dbias_address0,
        C1_dbias_ce0 => grp_dateport_update_C1_fu_316_C1_dbias_ce0,
        C1_dbias_we0 => grp_dateport_update_C1_fu_316_C1_dbias_we0,
        C1_dbias_d0 => grp_dateport_update_C1_fu_316_C1_dbias_d0,
        C1_dbias_q0 => grp_dateport_update_C1_fu_316_C1_dbias_q0);

    grp_dateport_O_layer_fu_328 : component dateport_O_layer
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_dateport_O_layer_fu_328_ap_start,
        ap_done => grp_dateport_O_layer_fu_328_ap_done,
        ap_idle => grp_dateport_O_layer_fu_328_ap_idle,
        ap_ready => grp_dateport_O_layer_fu_328_ap_ready,
        C5_y_address0 => grp_dateport_O_layer_fu_328_C5_y_address0,
        C5_y_ce0 => grp_dateport_O_layer_fu_328_C5_y_ce0,
        C5_y_q0 => grp_dateport_O_layer_fu_328_C5_y_q0,
        output_wei_address0 => grp_dateport_O_layer_fu_328_output_wei_address0,
        output_wei_ce0 => grp_dateport_O_layer_fu_328_output_wei_ce0,
        output_wei_q0 => grp_dateport_O_layer_fu_328_output_wei_q0,
        output_bias_address0 => grp_dateport_O_layer_fu_328_output_bias_address0,
        output_bias_ce0 => grp_dateport_O_layer_fu_328_output_bias_ce0,
        output_bias_q0 => grp_dateport_O_layer_fu_328_output_bias_q0,
        output_y_address0 => grp_dateport_O_layer_fu_328_output_y_address0,
        output_y_ce0 => grp_dateport_O_layer_fu_328_output_y_ce0,
        output_y_we0 => grp_dateport_O_layer_fu_328_output_y_we0,
        output_y_d0 => grp_dateport_O_layer_fu_328_output_y_d0);

    grp_dateport_DC1_layer_fu_342 : component dateport_DC1_layer
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_dateport_DC1_layer_fu_342_ap_start,
        ap_done => grp_dateport_DC1_layer_fu_342_ap_done,
        ap_idle => grp_dateport_DC1_layer_fu_342_ap_idle,
        ap_ready => grp_dateport_DC1_layer_fu_342_ap_ready,
        C1_bias_address0 => grp_dateport_DC1_layer_fu_342_C1_bias_address0,
        C1_bias_ce0 => grp_dateport_DC1_layer_fu_342_C1_bias_ce0,
        C1_bias_q0 => grp_dateport_DC1_layer_fu_342_C1_bias_q0,
        S2_d_address0 => grp_dateport_DC1_layer_fu_342_S2_d_address0,
        S2_d_ce0 => grp_dateport_DC1_layer_fu_342_S2_d_ce0,
        S2_d_q0 => grp_dateport_DC1_layer_fu_342_S2_d_q0,
        C1_v_address0 => grp_dateport_DC1_layer_fu_342_C1_v_address0,
        C1_v_ce0 => grp_dateport_DC1_layer_fu_342_C1_v_ce0,
        C1_v_q0 => grp_dateport_DC1_layer_fu_342_C1_v_q0,
        C1_v_address1 => grp_dateport_DC1_layer_fu_342_C1_v_address1,
        C1_v_ce1 => grp_dateport_DC1_layer_fu_342_C1_v_ce1,
        C1_v_q1 => grp_dateport_DC1_layer_fu_342_C1_v_q1,
        C1_d_address0 => grp_dateport_DC1_layer_fu_342_C1_d_address0,
        C1_d_ce0 => grp_dateport_DC1_layer_fu_342_C1_d_ce0,
        C1_d_we0 => grp_dateport_DC1_layer_fu_342_C1_d_we0,
        C1_d_d0 => grp_dateport_DC1_layer_fu_342_C1_d_d0,
        C1_d_address1 => grp_dateport_DC1_layer_fu_342_C1_d_address1,
        C1_d_ce1 => grp_dateport_DC1_layer_fu_342_C1_d_ce1,
        C1_d_we1 => grp_dateport_DC1_layer_fu_342_C1_d_we1,
        C1_d_d1 => grp_dateport_DC1_layer_fu_342_C1_d_d1);

    grp_dateport_DC3_layer_fu_354 : component dateport_DC3_layer
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_dateport_DC3_layer_fu_354_ap_start,
        ap_done => grp_dateport_DC3_layer_fu_354_ap_done,
        ap_idle => grp_dateport_DC3_layer_fu_354_ap_idle,
        ap_ready => grp_dateport_DC3_layer_fu_354_ap_ready,
        C3_bias_address0 => grp_dateport_DC3_layer_fu_354_C3_bias_address0,
        C3_bias_ce0 => grp_dateport_DC3_layer_fu_354_C3_bias_ce0,
        C3_bias_q0 => grp_dateport_DC3_layer_fu_354_C3_bias_q0,
        S4_d_address0 => grp_dateport_DC3_layer_fu_354_S4_d_address0,
        S4_d_ce0 => grp_dateport_DC3_layer_fu_354_S4_d_ce0,
        S4_d_q0 => grp_dateport_DC3_layer_fu_354_S4_d_q0,
        C3_y_address0 => grp_dateport_DC3_layer_fu_354_C3_y_address0,
        C3_y_ce0 => grp_dateport_DC3_layer_fu_354_C3_y_ce0,
        C3_y_q0 => grp_dateport_DC3_layer_fu_354_C3_y_q0,
        C3_y_address1 => grp_dateport_DC3_layer_fu_354_C3_y_address1,
        C3_y_ce1 => grp_dateport_DC3_layer_fu_354_C3_y_ce1,
        C3_y_q1 => grp_dateport_DC3_layer_fu_354_C3_y_q1,
        C3_d_address0 => grp_dateport_DC3_layer_fu_354_C3_d_address0,
        C3_d_ce0 => grp_dateport_DC3_layer_fu_354_C3_d_ce0,
        C3_d_we0 => grp_dateport_DC3_layer_fu_354_C3_d_we0,
        C3_d_d0 => grp_dateport_DC3_layer_fu_354_C3_d_d0,
        C3_d_address1 => grp_dateport_DC3_layer_fu_354_C3_d_address1,
        C3_d_ce1 => grp_dateport_DC3_layer_fu_354_C3_d_ce1,
        C3_d_we1 => grp_dateport_DC3_layer_fu_354_C3_d_we1,
        C3_d_d1 => grp_dateport_DC3_layer_fu_354_C3_d_d1);

    grp_dateport_update_C3_fu_366 : component dateport_update_C3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_dateport_update_C3_fu_366_ap_start,
        ap_done => grp_dateport_update_C3_fu_366_ap_done,
        ap_idle => grp_dateport_update_C3_fu_366_ap_idle,
        ap_ready => grp_dateport_update_C3_fu_366_ap_ready,
        S2_y_address0 => grp_dateport_update_C3_fu_366_S2_y_address0,
        S2_y_ce0 => grp_dateport_update_C3_fu_366_S2_y_ce0,
        S2_y_q0 => grp_dateport_update_C3_fu_366_S2_y_q0,
        S2_y_address1 => grp_dateport_update_C3_fu_366_S2_y_address1,
        S2_y_ce1 => grp_dateport_update_C3_fu_366_S2_y_ce1,
        S2_y_q1 => grp_dateport_update_C3_fu_366_S2_y_q1,
        C3_d_address0 => grp_dateport_update_C3_fu_366_C3_d_address0,
        C3_d_ce0 => grp_dateport_update_C3_fu_366_C3_d_ce0,
        C3_d_q0 => grp_dateport_update_C3_fu_366_C3_d_q0,
        C3_d_address1 => grp_dateport_update_C3_fu_366_C3_d_address1,
        C3_d_ce1 => grp_dateport_update_C3_fu_366_C3_d_ce1,
        C3_d_q1 => grp_dateport_update_C3_fu_366_C3_d_q1,
        C3_dmapData_address0 => grp_dateport_update_C3_fu_366_C3_dmapData_address0,
        C3_dmapData_ce0 => grp_dateport_update_C3_fu_366_C3_dmapData_ce0,
        C3_dmapData_we0 => grp_dateport_update_C3_fu_366_C3_dmapData_we0,
        C3_dmapData_d0 => grp_dateport_update_C3_fu_366_C3_dmapData_d0,
        C3_dmapData_q0 => grp_dateport_update_C3_fu_366_C3_dmapData_q0,
        C3_dbias_address0 => grp_dateport_update_C3_fu_366_C3_dbias_address0,
        C3_dbias_ce0 => grp_dateport_update_C3_fu_366_C3_dbias_ce0,
        C3_dbias_we0 => grp_dateport_update_C3_fu_366_C3_dbias_we0,
        C3_dbias_d0 => grp_dateport_update_C3_fu_366_C3_dbias_d0,
        C3_dbias_q0 => grp_dateport_update_C3_fu_366_C3_dbias_q0);

    grp_dateport_C3_conv_fu_378 : component dateport_C3_conv
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_dateport_C3_conv_fu_378_ap_start,
        ap_done => grp_dateport_C3_conv_fu_378_ap_done,
        ap_idle => grp_dateport_C3_conv_fu_378_ap_idle,
        ap_ready => grp_dateport_C3_conv_fu_378_ap_ready,
        S2_y_address0 => grp_dateport_C3_conv_fu_378_S2_y_address0,
        S2_y_ce0 => grp_dateport_C3_conv_fu_378_S2_y_ce0,
        S2_y_q0 => grp_dateport_C3_conv_fu_378_S2_y_q0,
        S2_y_address1 => grp_dateport_C3_conv_fu_378_S2_y_address1,
        S2_y_ce1 => grp_dateport_C3_conv_fu_378_S2_y_ce1,
        S2_y_q1 => grp_dateport_C3_conv_fu_378_S2_y_q1,
        C3_mapData_address0 => grp_dateport_C3_conv_fu_378_C3_mapData_address0,
        C3_mapData_ce0 => grp_dateport_C3_conv_fu_378_C3_mapData_ce0,
        C3_mapData_q0 => grp_dateport_C3_conv_fu_378_C3_mapData_q0,
        C3_mapData_address1 => grp_dateport_C3_conv_fu_378_C3_mapData_address1,
        C3_mapData_ce1 => grp_dateport_C3_conv_fu_378_C3_mapData_ce1,
        C3_mapData_q1 => grp_dateport_C3_conv_fu_378_C3_mapData_q1,
        C3_bias_address0 => grp_dateport_C3_conv_fu_378_C3_bias_address0,
        C3_bias_ce0 => grp_dateport_C3_conv_fu_378_C3_bias_ce0,
        C3_bias_q0 => grp_dateport_C3_conv_fu_378_C3_bias_q0,
        C3_y_address0 => grp_dateport_C3_conv_fu_378_C3_y_address0,
        C3_y_ce0 => grp_dateport_C3_conv_fu_378_C3_y_ce0,
        C3_y_we0 => grp_dateport_C3_conv_fu_378_C3_y_we0,
        C3_y_d0 => grp_dateport_C3_conv_fu_378_C3_y_d0);

    grp_dateport_DS2_layer_fu_392 : component dateport_DS2_layer
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_dateport_DS2_layer_fu_392_ap_start,
        ap_done => grp_dateport_DS2_layer_fu_392_ap_done,
        ap_idle => grp_dateport_DS2_layer_fu_392_ap_idle,
        ap_ready => grp_dateport_DS2_layer_fu_392_ap_ready,
        S2_d_address0 => grp_dateport_DS2_layer_fu_392_S2_d_address0,
        S2_d_ce0 => grp_dateport_DS2_layer_fu_392_S2_d_ce0,
        S2_d_we0 => grp_dateport_DS2_layer_fu_392_S2_d_we0,
        S2_d_d0 => grp_dateport_DS2_layer_fu_392_S2_d_d0,
        S2_d_q0 => grp_dateport_DS2_layer_fu_392_S2_d_q0,
        C3_d_address0 => grp_dateport_DS2_layer_fu_392_C3_d_address0,
        C3_d_ce0 => grp_dateport_DS2_layer_fu_392_C3_d_ce0,
        C3_d_q0 => grp_dateport_DS2_layer_fu_392_C3_d_q0,
        C3_mapData_address0 => grp_dateport_DS2_layer_fu_392_C3_mapData_address0,
        C3_mapData_ce0 => grp_dateport_DS2_layer_fu_392_C3_mapData_ce0,
        C3_mapData_q0 => grp_dateport_DS2_layer_fu_392_C3_mapData_q0,
        C3_mapData_address1 => grp_dateport_DS2_layer_fu_392_C3_mapData_address1,
        C3_mapData_ce1 => grp_dateport_DS2_layer_fu_392_C3_mapData_ce1,
        C3_mapData_q1 => grp_dateport_DS2_layer_fu_392_C3_mapData_q1);

    grp_dateport_C1_conv_fu_402 : component dateport_C1_conv
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_dateport_C1_conv_fu_402_ap_start,
        ap_done => grp_dateport_C1_conv_fu_402_ap_done,
        ap_idle => grp_dateport_C1_conv_fu_402_ap_idle,
        ap_ready => grp_dateport_C1_conv_fu_402_ap_ready,
        inputimg_address0 => grp_dateport_C1_conv_fu_402_inputimg_address0,
        inputimg_ce0 => grp_dateport_C1_conv_fu_402_inputimg_ce0,
        inputimg_q0 => grp_dateport_C1_conv_fu_402_inputimg_q0,
        inputimg_address1 => grp_dateport_C1_conv_fu_402_inputimg_address1,
        inputimg_ce1 => grp_dateport_C1_conv_fu_402_inputimg_ce1,
        inputimg_q1 => grp_dateport_C1_conv_fu_402_inputimg_q1,
        C1_v_address0 => grp_dateport_C1_conv_fu_402_C1_v_address0,
        C1_v_ce0 => grp_dateport_C1_conv_fu_402_C1_v_ce0,
        C1_v_we0 => grp_dateport_C1_conv_fu_402_C1_v_we0,
        C1_v_d0 => grp_dateport_C1_conv_fu_402_C1_v_d0,
        C1_v_q0 => grp_dateport_C1_conv_fu_402_C1_v_q0,
        C1_bias_address0 => grp_dateport_C1_conv_fu_402_C1_bias_address0,
        C1_bias_ce0 => grp_dateport_C1_conv_fu_402_C1_bias_ce0,
        C1_bias_q0 => grp_dateport_C1_conv_fu_402_C1_bias_q0,
        C1_y_address0 => grp_dateport_C1_conv_fu_402_C1_y_address0,
        C1_y_ce0 => grp_dateport_C1_conv_fu_402_C1_y_ce0,
        C1_y_we0 => grp_dateport_C1_conv_fu_402_C1_y_we0,
        C1_y_d0 => grp_dateport_C1_conv_fu_402_C1_y_d0,
        C1_mapData_address0 => grp_dateport_C1_conv_fu_402_C1_mapData_address0,
        C1_mapData_ce0 => grp_dateport_C1_conv_fu_402_C1_mapData_ce0,
        C1_mapData_q0 => grp_dateport_C1_conv_fu_402_C1_mapData_q0,
        C1_mapData_address1 => grp_dateport_C1_conv_fu_402_C1_mapData_address1,
        C1_mapData_ce1 => grp_dateport_C1_conv_fu_402_C1_mapData_ce1,
        C1_mapData_q1 => grp_dateport_C1_conv_fu_402_C1_mapData_q1);

    grp_dateport_upadteall_fu_416 : component dateport_upadteall
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_dateport_upadteall_fu_416_ap_start,
        ap_done => grp_dateport_upadteall_fu_416_ap_done,
        ap_idle => grp_dateport_upadteall_fu_416_ap_idle,
        ap_ready => grp_dateport_upadteall_fu_416_ap_ready,
        C1_mapData_address0 => grp_dateport_upadteall_fu_416_C1_mapData_address0,
        C1_mapData_ce0 => grp_dateport_upadteall_fu_416_C1_mapData_ce0,
        C1_mapData_we0 => grp_dateport_upadteall_fu_416_C1_mapData_we0,
        C1_mapData_d0 => grp_dateport_upadteall_fu_416_C1_mapData_d0,
        C1_mapData_q0 => grp_dateport_upadteall_fu_416_C1_mapData_q0,
        C1_dmapData_address0 => grp_dateport_upadteall_fu_416_C1_dmapData_address0,
        C1_dmapData_ce0 => grp_dateport_upadteall_fu_416_C1_dmapData_ce0,
        C1_dmapData_we0 => grp_dateport_upadteall_fu_416_C1_dmapData_we0,
        C1_dmapData_d0 => grp_dateport_upadteall_fu_416_C1_dmapData_d0,
        C1_dmapData_q0 => grp_dateport_upadteall_fu_416_C1_dmapData_q0,
        C1_bias_address0 => grp_dateport_upadteall_fu_416_C1_bias_address0,
        C1_bias_ce0 => grp_dateport_upadteall_fu_416_C1_bias_ce0,
        C1_bias_we0 => grp_dateport_upadteall_fu_416_C1_bias_we0,
        C1_bias_d0 => grp_dateport_upadteall_fu_416_C1_bias_d0,
        C1_bias_q0 => grp_dateport_upadteall_fu_416_C1_bias_q0,
        C1_dbias_address0 => grp_dateport_upadteall_fu_416_C1_dbias_address0,
        C1_dbias_ce0 => grp_dateport_upadteall_fu_416_C1_dbias_ce0,
        C1_dbias_we0 => grp_dateport_upadteall_fu_416_C1_dbias_we0,
        C1_dbias_d0 => grp_dateport_upadteall_fu_416_C1_dbias_d0,
        C1_dbias_q0 => grp_dateport_upadteall_fu_416_C1_dbias_q0,
        C3_mapData_address0 => grp_dateport_upadteall_fu_416_C3_mapData_address0,
        C3_mapData_ce0 => grp_dateport_upadteall_fu_416_C3_mapData_ce0,
        C3_mapData_q0 => grp_dateport_upadteall_fu_416_C3_mapData_q0,
        C3_mapData_address1 => grp_dateport_upadteall_fu_416_C3_mapData_address1,
        C3_mapData_ce1 => grp_dateport_upadteall_fu_416_C3_mapData_ce1,
        C3_mapData_we1 => grp_dateport_upadteall_fu_416_C3_mapData_we1,
        C3_mapData_d1 => grp_dateport_upadteall_fu_416_C3_mapData_d1,
        C3_dmapData_address0 => grp_dateport_upadteall_fu_416_C3_dmapData_address0,
        C3_dmapData_ce0 => grp_dateport_upadteall_fu_416_C3_dmapData_ce0,
        C3_dmapData_q0 => grp_dateport_upadteall_fu_416_C3_dmapData_q0,
        C3_dmapData_address1 => grp_dateport_upadteall_fu_416_C3_dmapData_address1,
        C3_dmapData_ce1 => grp_dateport_upadteall_fu_416_C3_dmapData_ce1,
        C3_dmapData_we1 => grp_dateport_upadteall_fu_416_C3_dmapData_we1,
        C3_dmapData_d1 => grp_dateport_upadteall_fu_416_C3_dmapData_d1,
        C3_bias_address0 => grp_dateport_upadteall_fu_416_C3_bias_address0,
        C3_bias_ce0 => grp_dateport_upadteall_fu_416_C3_bias_ce0,
        C3_bias_we0 => grp_dateport_upadteall_fu_416_C3_bias_we0,
        C3_bias_d0 => grp_dateport_upadteall_fu_416_C3_bias_d0,
        C3_bias_q0 => grp_dateport_upadteall_fu_416_C3_bias_q0,
        C3_dbias_address0 => grp_dateport_upadteall_fu_416_C3_dbias_address0,
        C3_dbias_ce0 => grp_dateport_upadteall_fu_416_C3_dbias_ce0,
        C3_dbias_we0 => grp_dateport_upadteall_fu_416_C3_dbias_we0,
        C3_dbias_d0 => grp_dateport_upadteall_fu_416_C3_dbias_d0,
        C3_dbias_q0 => grp_dateport_upadteall_fu_416_C3_dbias_q0,
        C5_mapData_address0 => grp_dateport_upadteall_fu_416_C5_mapData_address0,
        C5_mapData_ce0 => grp_dateport_upadteall_fu_416_C5_mapData_ce0,
        C5_mapData_we0 => grp_dateport_upadteall_fu_416_C5_mapData_we0,
        C5_mapData_d0 => grp_dateport_upadteall_fu_416_C5_mapData_d0,
        C5_mapData_q0 => grp_dateport_upadteall_fu_416_C5_mapData_q0,
        C5_dmapData_address0 => grp_dateport_upadteall_fu_416_C5_dmapData_address0,
        C5_dmapData_ce0 => grp_dateport_upadteall_fu_416_C5_dmapData_ce0,
        C5_dmapData_we0 => grp_dateport_upadteall_fu_416_C5_dmapData_we0,
        C5_dmapData_d0 => grp_dateport_upadteall_fu_416_C5_dmapData_d0,
        C5_dmapData_q0 => grp_dateport_upadteall_fu_416_C5_dmapData_q0,
        C5_bias_address0 => grp_dateport_upadteall_fu_416_C5_bias_address0,
        C5_bias_ce0 => grp_dateport_upadteall_fu_416_C5_bias_ce0,
        C5_bias_we0 => grp_dateport_upadteall_fu_416_C5_bias_we0,
        C5_bias_d0 => grp_dateport_upadteall_fu_416_C5_bias_d0,
        C5_bias_q0 => grp_dateport_upadteall_fu_416_C5_bias_q0,
        C5_dbias_address0 => grp_dateport_upadteall_fu_416_C5_dbias_address0,
        C5_dbias_ce0 => grp_dateport_upadteall_fu_416_C5_dbias_ce0,
        C5_dbias_we0 => grp_dateport_upadteall_fu_416_C5_dbias_we0,
        C5_dbias_d0 => grp_dateport_upadteall_fu_416_C5_dbias_d0,
        C5_dbias_q0 => grp_dateport_upadteall_fu_416_C5_dbias_q0,
        output_wei_address0 => grp_dateport_upadteall_fu_416_output_wei_address0,
        output_wei_ce0 => grp_dateport_upadteall_fu_416_output_wei_ce0,
        output_wei_we0 => grp_dateport_upadteall_fu_416_output_wei_we0,
        output_wei_d0 => grp_dateport_upadteall_fu_416_output_wei_d0,
        output_wei_q0 => grp_dateport_upadteall_fu_416_output_wei_q0,
        output_dwei_address0 => grp_dateport_upadteall_fu_416_output_dwei_address0,
        output_dwei_ce0 => grp_dateport_upadteall_fu_416_output_dwei_ce0,
        output_dwei_we0 => grp_dateport_upadteall_fu_416_output_dwei_we0,
        output_dwei_d0 => grp_dateport_upadteall_fu_416_output_dwei_d0,
        output_dwei_q0 => grp_dateport_upadteall_fu_416_output_dwei_q0,
        output_bias_address0 => grp_dateport_upadteall_fu_416_output_bias_address0,
        output_bias_ce0 => grp_dateport_upadteall_fu_416_output_bias_ce0,
        output_bias_we0 => grp_dateport_upadteall_fu_416_output_bias_we0,
        output_bias_d0 => grp_dateport_upadteall_fu_416_output_bias_d0,
        output_bias_q0 => grp_dateport_upadteall_fu_416_output_bias_q0,
        output_dbias_address0 => grp_dateport_upadteall_fu_416_output_dbias_address0,
        output_dbias_ce0 => grp_dateport_upadteall_fu_416_output_dbias_ce0,
        output_dbias_we0 => grp_dateport_upadteall_fu_416_output_dbias_we0,
        output_dbias_d0 => grp_dateport_upadteall_fu_416_output_dbias_d0,
        output_dbias_q0 => grp_dateport_upadteall_fu_416_output_dbias_q0);

    grp_dateport_update_C5_fu_452 : component dateport_update_C5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_dateport_update_C5_fu_452_ap_start,
        ap_done => grp_dateport_update_C5_fu_452_ap_done,
        ap_idle => grp_dateport_update_C5_fu_452_ap_idle,
        ap_ready => grp_dateport_update_C5_fu_452_ap_ready,
        S4_y_address0 => grp_dateport_update_C5_fu_452_S4_y_address0,
        S4_y_ce0 => grp_dateport_update_C5_fu_452_S4_y_ce0,
        S4_y_q0 => grp_dateport_update_C5_fu_452_S4_y_q0,
        S4_y_address1 => grp_dateport_update_C5_fu_452_S4_y_address1,
        S4_y_ce1 => grp_dateport_update_C5_fu_452_S4_y_ce1,
        S4_y_q1 => grp_dateport_update_C5_fu_452_S4_y_q1,
        C5_dmapData_address0 => grp_dateport_update_C5_fu_452_C5_dmapData_address0,
        C5_dmapData_ce0 => grp_dateport_update_C5_fu_452_C5_dmapData_ce0,
        C5_dmapData_we0 => grp_dateport_update_C5_fu_452_C5_dmapData_we0,
        C5_dmapData_d0 => grp_dateport_update_C5_fu_452_C5_dmapData_d0,
        C5_dmapData_q0 => grp_dateport_update_C5_fu_452_C5_dmapData_q0,
        C5_d_address0 => grp_dateport_update_C5_fu_452_C5_d_address0,
        C5_d_ce0 => grp_dateport_update_C5_fu_452_C5_d_ce0,
        C5_d_q0 => grp_dateport_update_C5_fu_452_C5_d_q0,
        C5_dbias_address0 => grp_dateport_update_C5_fu_452_C5_dbias_address0,
        C5_dbias_ce0 => grp_dateport_update_C5_fu_452_C5_dbias_ce0,
        C5_dbias_we0 => grp_dateport_update_C5_fu_452_C5_dbias_we0,
        C5_dbias_d0 => grp_dateport_update_C5_fu_452_C5_dbias_d0,
        C5_dbias_q0 => grp_dateport_update_C5_fu_452_C5_dbias_q0);

    grp_dateport_DS4_layer_fu_464 : component dateport_DS4_layer
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_dateport_DS4_layer_fu_464_ap_start,
        ap_done => grp_dateport_DS4_layer_fu_464_ap_done,
        ap_idle => grp_dateport_DS4_layer_fu_464_ap_idle,
        ap_ready => grp_dateport_DS4_layer_fu_464_ap_ready,
        S4_d_address0 => grp_dateport_DS4_layer_fu_464_S4_d_address0,
        S4_d_ce0 => grp_dateport_DS4_layer_fu_464_S4_d_ce0,
        S4_d_we0 => grp_dateport_DS4_layer_fu_464_S4_d_we0,
        S4_d_d0 => grp_dateport_DS4_layer_fu_464_S4_d_d0,
        S4_d_q0 => grp_dateport_DS4_layer_fu_464_S4_d_q0,
        S4_d_address1 => grp_dateport_DS4_layer_fu_464_S4_d_address1,
        S4_d_ce1 => grp_dateport_DS4_layer_fu_464_S4_d_ce1,
        S4_d_we1 => grp_dateport_DS4_layer_fu_464_S4_d_we1,
        S4_d_d1 => grp_dateport_DS4_layer_fu_464_S4_d_d1,
        S4_d_q1 => grp_dateport_DS4_layer_fu_464_S4_d_q1,
        C5_d_address0 => grp_dateport_DS4_layer_fu_464_C5_d_address0,
        C5_d_ce0 => grp_dateport_DS4_layer_fu_464_C5_d_ce0,
        C5_d_q0 => grp_dateport_DS4_layer_fu_464_C5_d_q0,
        C5_mapData_address0 => grp_dateport_DS4_layer_fu_464_C5_mapData_address0,
        C5_mapData_ce0 => grp_dateport_DS4_layer_fu_464_C5_mapData_ce0,
        C5_mapData_q0 => grp_dateport_DS4_layer_fu_464_C5_mapData_q0,
        C5_mapData_address1 => grp_dateport_DS4_layer_fu_464_C5_mapData_address1,
        C5_mapData_ce1 => grp_dateport_DS4_layer_fu_464_C5_mapData_ce1,
        C5_mapData_q1 => grp_dateport_DS4_layer_fu_464_C5_mapData_q1);

    grp_dateport_C5_conv_fu_474 : component dateport_C5_conv
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_dateport_C5_conv_fu_474_ap_start,
        ap_done => grp_dateport_C5_conv_fu_474_ap_done,
        ap_idle => grp_dateport_C5_conv_fu_474_ap_idle,
        ap_ready => grp_dateport_C5_conv_fu_474_ap_ready,
        C5_v_address0 => grp_dateport_C5_conv_fu_474_C5_v_address0,
        C5_v_ce0 => grp_dateport_C5_conv_fu_474_C5_v_ce0,
        C5_v_we0 => grp_dateport_C5_conv_fu_474_C5_v_we0,
        C5_v_d0 => grp_dateport_C5_conv_fu_474_C5_v_d0,
        C5_v_q0 => grp_dateport_C5_conv_fu_474_C5_v_q0,
        S4_y_address0 => grp_dateport_C5_conv_fu_474_S4_y_address0,
        S4_y_ce0 => grp_dateport_C5_conv_fu_474_S4_y_ce0,
        S4_y_q0 => grp_dateport_C5_conv_fu_474_S4_y_q0,
        C5_mapData_address0 => grp_dateport_C5_conv_fu_474_C5_mapData_address0,
        C5_mapData_ce0 => grp_dateport_C5_conv_fu_474_C5_mapData_ce0,
        C5_mapData_q0 => grp_dateport_C5_conv_fu_474_C5_mapData_q0,
        C5_bias_address0 => grp_dateport_C5_conv_fu_474_C5_bias_address0,
        C5_bias_ce0 => grp_dateport_C5_conv_fu_474_C5_bias_ce0,
        C5_bias_q0 => grp_dateport_C5_conv_fu_474_C5_bias_q0,
        C5_y_address0 => grp_dateport_C5_conv_fu_474_C5_y_address0,
        C5_y_ce0 => grp_dateport_C5_conv_fu_474_C5_y_ce0,
        C5_y_we0 => grp_dateport_C5_conv_fu_474_C5_y_we0,
        C5_y_d0 => grp_dateport_C5_conv_fu_474_C5_y_d0);

    grp_dateport_DC5_layer_fu_488 : component dateport_DC5_layer
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_dateport_DC5_layer_fu_488_ap_start,
        ap_done => grp_dateport_DC5_layer_fu_488_ap_done,
        ap_idle => grp_dateport_DC5_layer_fu_488_ap_idle,
        ap_ready => grp_dateport_DC5_layer_fu_488_ap_ready,
        C5_d_address0 => grp_dateport_DC5_layer_fu_488_C5_d_address0,
        C5_d_ce0 => grp_dateport_DC5_layer_fu_488_C5_d_ce0,
        C5_d_we0 => grp_dateport_DC5_layer_fu_488_C5_d_we0,
        C5_d_d0 => grp_dateport_DC5_layer_fu_488_C5_d_d0,
        C5_d_q0 => grp_dateport_DC5_layer_fu_488_C5_d_q0,
        output_d_address0 => grp_dateport_DC5_layer_fu_488_output_d_address0,
        output_d_ce0 => grp_dateport_DC5_layer_fu_488_output_d_ce0,
        output_d_q0 => grp_dateport_DC5_layer_fu_488_output_d_q0,
        output_wei_address0 => grp_dateport_DC5_layer_fu_488_output_wei_address0,
        output_wei_ce0 => grp_dateport_DC5_layer_fu_488_output_wei_ce0,
        output_wei_q0 => grp_dateport_DC5_layer_fu_488_output_wei_q0,
        C5_v_address0 => grp_dateport_DC5_layer_fu_488_C5_v_address0,
        C5_v_ce0 => grp_dateport_DC5_layer_fu_488_C5_v_ce0,
        C5_v_q0 => grp_dateport_DC5_layer_fu_488_C5_v_q0,
        C5_bias_address0 => grp_dateport_DC5_layer_fu_488_C5_bias_address0,
        C5_bias_ce0 => grp_dateport_DC5_layer_fu_488_C5_bias_ce0,
        C5_bias_q0 => grp_dateport_DC5_layer_fu_488_C5_bias_q0);

    grp_dateport_S2_pool_fu_502 : component dateport_S2_pool
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_dateport_S2_pool_fu_502_ap_start,
        ap_done => grp_dateport_S2_pool_fu_502_ap_done,
        ap_idle => grp_dateport_S2_pool_fu_502_ap_idle,
        ap_ready => grp_dateport_S2_pool_fu_502_ap_ready,
        C1_y_address0 => grp_dateport_S2_pool_fu_502_C1_y_address0,
        C1_y_ce0 => grp_dateport_S2_pool_fu_502_C1_y_ce0,
        C1_y_q0 => grp_dateport_S2_pool_fu_502_C1_y_q0,
        C1_y_address1 => grp_dateport_S2_pool_fu_502_C1_y_address1,
        C1_y_ce1 => grp_dateport_S2_pool_fu_502_C1_y_ce1,
        C1_y_q1 => grp_dateport_S2_pool_fu_502_C1_y_q1,
        S2_y_address0 => grp_dateport_S2_pool_fu_502_S2_y_address0,
        S2_y_ce0 => grp_dateport_S2_pool_fu_502_S2_y_ce0,
        S2_y_we0 => grp_dateport_S2_pool_fu_502_S2_y_we0,
        S2_y_d0 => grp_dateport_S2_pool_fu_502_S2_y_d0);

    grp_dateport_S4_pool_fu_510 : component dateport_S4_pool
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_dateport_S4_pool_fu_510_ap_start,
        ap_done => grp_dateport_S4_pool_fu_510_ap_done,
        ap_idle => grp_dateport_S4_pool_fu_510_ap_idle,
        ap_ready => grp_dateport_S4_pool_fu_510_ap_ready,
        C3_y_address0 => grp_dateport_S4_pool_fu_510_C3_y_address0,
        C3_y_ce0 => grp_dateport_S4_pool_fu_510_C3_y_ce0,
        C3_y_q0 => grp_dateport_S4_pool_fu_510_C3_y_q0,
        C3_y_address1 => grp_dateport_S4_pool_fu_510_C3_y_address1,
        C3_y_ce1 => grp_dateport_S4_pool_fu_510_C3_y_ce1,
        C3_y_q1 => grp_dateport_S4_pool_fu_510_C3_y_q1,
        S4_y_address0 => grp_dateport_S4_pool_fu_510_S4_y_address0,
        S4_y_ce0 => grp_dateport_S4_pool_fu_510_S4_y_ce0,
        S4_y_we0 => grp_dateport_S4_pool_fu_510_S4_y_we0,
        S4_y_d0 => grp_dateport_S4_pool_fu_510_S4_y_d0);

    grp_dateport_update_OUT_fu_518 : component dateport_update_OUT
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_dateport_update_OUT_fu_518_ap_start,
        ap_done => grp_dateport_update_OUT_fu_518_ap_done,
        ap_idle => grp_dateport_update_OUT_fu_518_ap_idle,
        ap_ready => grp_dateport_update_OUT_fu_518_ap_ready,
        output_d_address0 => grp_dateport_update_OUT_fu_518_output_d_address0,
        output_d_ce0 => grp_dateport_update_OUT_fu_518_output_d_ce0,
        output_d_q0 => grp_dateport_update_OUT_fu_518_output_d_q0,
        output_dwei_address0 => grp_dateport_update_OUT_fu_518_output_dwei_address0,
        output_dwei_ce0 => grp_dateport_update_OUT_fu_518_output_dwei_ce0,
        output_dwei_we0 => grp_dateport_update_OUT_fu_518_output_dwei_we0,
        output_dwei_d0 => grp_dateport_update_OUT_fu_518_output_dwei_d0,
        output_dwei_q0 => grp_dateport_update_OUT_fu_518_output_dwei_q0,
        C5_y_address0 => grp_dateport_update_OUT_fu_518_C5_y_address0,
        C5_y_ce0 => grp_dateport_update_OUT_fu_518_C5_y_ce0,
        C5_y_q0 => grp_dateport_update_OUT_fu_518_C5_y_q0,
        output_dbias_address0 => grp_dateport_update_OUT_fu_518_output_dbias_address0,
        output_dbias_ce0 => grp_dateport_update_OUT_fu_518_output_dbias_ce0,
        output_dbias_we0 => grp_dateport_update_OUT_fu_518_output_dbias_we0,
        output_dbias_d0 => grp_dateport_update_OUT_fu_518_output_dbias_d0,
        output_dbias_q0 => grp_dateport_update_OUT_fu_518_output_dbias_q0);

    dateport_fsub_32ns_32ns_32_5_full_dsp_U125 : component dateport_fsub_32ns_32ns_32_5_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_530_p0,
        din1 => grp_fu_530_p1,
        ce => grp_fu_530_ce,
        dout => grp_fu_530_p2);

    dateport_sitofp_32ns_32_6_U126 : component dateport_sitofp_32ns_32_6
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_534_p0,
        ce => grp_fu_534_ce,
        dout => grp_fu_534_p1);

    dateport_fcmp_32ns_32ns_1_1_U127 : component dateport_fcmp_32ns_32ns_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => tmp_16_fu_537_p0,
        din1 => tmp_16_fu_537_p1,
        opcode => tmp_16_fu_537_opcode,
        dout => tmp_16_fu_537_p2);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- date_0_data_reg assign process. --
    date_0_data_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                date_0_data_reg <= ap_const_lv32_0;
            else
                if (((not((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_0 = date_0_vld_reg)) or (not((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = date_0_vld_reg) and (ap_const_logic_1 = date_0_ack_out)))) then 
                    date_0_data_reg <= date;
                end if; 
            end if;
        end if;
    end process;


    -- date_0_vld_reg assign process. --
    date_0_vld_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                
            else
            end if;
        end if;
    end process;


    -- grp_dateport_C1_conv_fu_402_ap_start_ap_start_reg assign process. --
    grp_dateport_C1_conv_fu_402_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_dateport_C1_conv_fu_402_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (tmp_1_fu_553_p2 = ap_const_lv1_0) and (tmp_9_fu_559_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_s_fu_565_p2)))) then 
                    grp_dateport_C1_conv_fu_402_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dateport_C1_conv_fu_402_ap_ready)) then 
                    grp_dateport_C1_conv_fu_402_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_dateport_C3_conv_fu_378_ap_start_ap_start_reg assign process. --
    grp_dateport_C3_conv_fu_378_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_dateport_C3_conv_fu_378_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
                    grp_dateport_C3_conv_fu_378_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dateport_C3_conv_fu_378_ap_ready)) then 
                    grp_dateport_C3_conv_fu_378_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_dateport_C5_conv_fu_474_ap_start_ap_start_reg assign process. --
    grp_dateport_C5_conv_fu_474_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_dateport_C5_conv_fu_474_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                    grp_dateport_C5_conv_fu_474_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dateport_C5_conv_fu_474_ap_ready)) then 
                    grp_dateport_C5_conv_fu_474_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_dateport_DC1_layer_fu_342_ap_start_ap_start_reg assign process. --
    grp_dateport_DC1_layer_fu_342_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_dateport_DC1_layer_fu_342_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st35_fsm_34)) then 
                    grp_dateport_DC1_layer_fu_342_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dateport_DC1_layer_fu_342_ap_ready)) then 
                    grp_dateport_DC1_layer_fu_342_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_dateport_DC3_layer_fu_354_ap_start_ap_start_reg assign process. --
    grp_dateport_DC3_layer_fu_354_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_dateport_DC3_layer_fu_354_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st31_fsm_30)) then 
                    grp_dateport_DC3_layer_fu_354_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dateport_DC3_layer_fu_354_ap_ready)) then 
                    grp_dateport_DC3_layer_fu_354_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_dateport_DC5_layer_fu_488_ap_start_ap_start_reg assign process. --
    grp_dateport_DC5_layer_fu_488_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_dateport_DC5_layer_fu_488_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and not((ap_const_lv1_0 = exitcond_i_i_fu_599_p2)))) then 
                    grp_dateport_DC5_layer_fu_488_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dateport_DC5_layer_fu_488_ap_ready)) then 
                    grp_dateport_DC5_layer_fu_488_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_dateport_DS2_layer_fu_392_ap_start_ap_start_reg assign process. --
    grp_dateport_DS2_layer_fu_392_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_dateport_DS2_layer_fu_392_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st33_fsm_32)) then 
                    grp_dateport_DS2_layer_fu_392_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dateport_DS2_layer_fu_392_ap_ready)) then 
                    grp_dateport_DS2_layer_fu_392_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_dateport_DS4_layer_fu_464_ap_start_ap_start_reg assign process. --
    grp_dateport_DS4_layer_fu_464_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_dateport_DS4_layer_fu_464_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st29_fsm_28)) then 
                    grp_dateport_DS4_layer_fu_464_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dateport_DS4_layer_fu_464_ap_ready)) then 
                    grp_dateport_DS4_layer_fu_464_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_dateport_O_layer_fu_328_ap_start_ap_start_reg assign process. --
    grp_dateport_O_layer_fu_328_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_dateport_O_layer_fu_328_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
                    grp_dateport_O_layer_fu_328_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dateport_O_layer_fu_328_ap_ready)) then 
                    grp_dateport_O_layer_fu_328_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_dateport_S2_pool_fu_502_ap_start_ap_start_reg assign process. --
    grp_dateport_S2_pool_fu_502_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_dateport_S2_pool_fu_502_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
                    grp_dateport_S2_pool_fu_502_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dateport_S2_pool_fu_502_ap_ready)) then 
                    grp_dateport_S2_pool_fu_502_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_dateport_S4_pool_fu_510_ap_start_ap_start_reg assign process. --
    grp_dateport_S4_pool_fu_510_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_dateport_S4_pool_fu_510_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
                    grp_dateport_S4_pool_fu_510_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dateport_S4_pool_fu_510_ap_ready)) then 
                    grp_dateport_S4_pool_fu_510_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_dateport_upadteall_fu_416_ap_start_ap_start_reg assign process. --
    grp_dateport_upadteall_fu_416_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_dateport_upadteall_fu_416_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st39_fsm_38)) then 
                    grp_dateport_upadteall_fu_416_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dateport_upadteall_fu_416_ap_ready)) then 
                    grp_dateport_upadteall_fu_416_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_dateport_update_C1_fu_316_ap_start_ap_start_reg assign process. --
    grp_dateport_update_C1_fu_316_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_dateport_update_C1_fu_316_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st37_fsm_36)) then 
                    grp_dateport_update_C1_fu_316_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dateport_update_C1_fu_316_ap_ready)) then 
                    grp_dateport_update_C1_fu_316_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_dateport_update_C3_fu_366_ap_start_ap_start_reg assign process. --
    grp_dateport_update_C3_fu_366_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_dateport_update_C3_fu_366_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st35_fsm_34)) then 
                    grp_dateport_update_C3_fu_366_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dateport_update_C3_fu_366_ap_ready)) then 
                    grp_dateport_update_C3_fu_366_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_dateport_update_C5_fu_452_ap_start_ap_start_reg assign process. --
    grp_dateport_update_C5_fu_452_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_dateport_update_C5_fu_452_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st31_fsm_30)) then 
                    grp_dateport_update_C5_fu_452_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dateport_update_C5_fu_452_ap_ready)) then 
                    grp_dateport_update_C5_fu_452_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_dateport_update_OUT_fu_518_ap_start_ap_start_reg assign process. --
    grp_dateport_update_OUT_fu_518_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_dateport_update_OUT_fu_518_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st29_fsm_28)) then 
                    grp_dateport_update_OUT_fu_518_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dateport_update_OUT_fu_518_ap_ready)) then 
                    grp_dateport_update_OUT_fu_518_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- led_1_data_reg assign process. --
    led_1_data_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                led_1_data_reg <= ap_const_lv16_0;
            else
                if (((not((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) and (ap_const_logic_1 = led_1_vld_in) and (ap_const_logic_0 = led_1_vld_reg)) or (not((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) and (ap_const_logic_1 = led_1_vld_in) and (ap_const_logic_1 = led_1_vld_reg) and (ap_const_logic_1 = ap_const_logic_1)))) then 
                    led_1_data_reg <= righht_i;
                end if; 
            end if;
        end if;
    end process;


    -- led_1_vld_reg assign process. --
    led_1_vld_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                led_1_vld_reg <= ap_const_logic_0;
            else
                if ((not((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) and (ap_const_logic_1 = led_1_vld_in) and (ap_const_logic_0 = led_1_vld_reg))) then 
                    led_1_vld_reg <= ap_const_logic_1;
                elsif (((ap_const_logic_0 = led_1_vld_in) and (ap_const_logic_1 = led_1_vld_reg) and (ap_const_logic_1 = ap_const_logic_1))) then 
                    led_1_vld_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- signal_out_1_data_reg assign process. --
    signal_out_1_data_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                signal_out_1_data_reg(1) <= '0';
            else
                if (((not((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) and (ap_const_logic_1 = signal_out_1_vld_in) and (ap_const_logic_0 = signal_out_1_vld_reg)) or (not((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) and (ap_const_logic_1 = signal_out_1_vld_in) and (ap_const_logic_1 = signal_out_1_vld_reg) and (ap_const_logic_1 = ap_const_logic_1)))) then 
                                        signal_out_1_data_reg(1) <= signal_out_1_data_in(1);
                end if; 
            end if;
        end if;
    end process;


    -- signal_out_1_vld_reg assign process. --
    signal_out_1_vld_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                signal_out_1_vld_reg <= ap_const_logic_0;
            else
                if ((not((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) and (ap_const_logic_1 = signal_out_1_vld_in) and (ap_const_logic_0 = signal_out_1_vld_reg))) then 
                    signal_out_1_vld_reg <= ap_const_logic_1;
                elsif (((ap_const_logic_0 = signal_out_1_vld_in) and (ap_const_logic_1 = signal_out_1_vld_reg) and (ap_const_logic_1 = ap_const_logic_1))) then 
                    signal_out_1_vld_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- signal_r_0_data_reg assign process. --
    signal_r_0_data_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                signal_r_0_data_reg <= ap_const_lv8_0;
            else
                if (((not((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_0 = signal_r_0_vld_reg)) or (not((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = signal_r_0_vld_reg) and (ap_const_logic_1 = signal_r_0_ack_out)))) then 
                    signal_r_0_data_reg <= signal_r;
                end if; 
            end if;
        end if;
    end process;


    -- signal_r_0_vld_reg assign process. --
    signal_r_0_vld_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                
            else
            end if;
        end if;
    end process;


    -- h_i_reg_281 assign process. --
    h_i_reg_281_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st44_fsm_43)) then 
                h_i_reg_281 <= h_1_fu_807_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((not((ap_const_lv1_0 = tmp_i_reg_938)) and (ap_const_logic_0 = grp_dateport_upadteall_fu_416_ap_done))))) then 
                h_i_reg_281 <= ap_const_lv32_BF800000;
            end if; 
        end if;
    end process;

    -- i_i_i_reg_269 assign process. --
    i_i_i_reg_269_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st27_fsm_26)) then 
                i_i_i_reg_269 <= i_reg_892;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_logic_0 = grp_dateport_O_layer_fu_328_ap_done)))) then 
                i_i_i_reg_269 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    -- offset_i_reg_304 assign process. --
    offset_i_reg_304_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st44_fsm_43)) then 
                offset_i_reg_304 <= offset_1_fu_815_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((not((ap_const_lv1_0 = tmp_i_reg_938)) and (ap_const_logic_0 = grp_dateport_upadteall_fu_416_ap_done))))) then 
                offset_i_reg_304 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    -- offset_reg_293 assign process. --
    offset_reg_293_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st44_fsm_43)) then 
                offset_reg_293 <= j_reg_950;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((not((ap_const_lv1_0 = tmp_i_reg_938)) and (ap_const_logic_0 = grp_dateport_upadteall_fu_416_ap_done))))) then 
                offset_reg_293 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    -- righht_i assign process. --
    righht_i_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st41_fsm_40) and not((ap_const_lv1_0 = exitcond_i_fu_690_p2)) and not((ap_const_lv1_0 = tmp_i3_fu_707_p2)))) then 
                righht_i <= tmp_12_i_fu_712_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (tmp_1_fu_553_p2 = ap_const_lv1_0) and (tmp_9_fu_559_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_s_fu_565_p2) and not((ap_const_lv1_0 = tmp_3_fu_571_p2)))) then 
                righht_i <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                date_read_reg_861 <= date_0_data_reg;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then
                i_reg_892 <= i_fu_605_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st48_fsm_47)) then
                input_i <= p_tmp_7_fu_847_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st41_fsm_40)) then
                j_reg_950 <= j_fu_696_p2;
                    offset_cast1_reg_942(3 downto 0) <= offset_cast1_fu_686_p1(3 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) or (ap_const_logic_1 = ap_sig_cseq_ST_st42_fsm_41))) then
                reg_547 <= output_y_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((not((ap_const_lv1_0 = tmp_i_reg_938)) and (ap_const_logic_0 = grp_dateport_upadteall_fu_416_ap_done))))) then
                    renew(5 downto 0) <= tmp_11_i_cast_fu_676_p1(5 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_logic_0 = grp_dateport_O_layer_fu_328_ap_done)))) then
                    resid_addr3_reg_884(31 downto 1) <= resid_addr3_fu_593_p2(31 downto 1);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then
                resid_load_reg_902 <= resid_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st38_fsm_37) and not((ap_const_logic_0 = grp_dateport_update_C1_fu_316_ap_done)))) then
                tmp_10_reg_932 <= tmp_10_fu_638_p1;
                tmp_i_reg_938 <= tmp_i_fu_646_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st43_fsm_42)) then
                tmp_16_reg_963 <= tmp_16_fu_537_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then
                tmp_80_i_i_reg_922 <= grp_fu_534_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25)) then
                tmp_81_i_i_reg_927 <= grp_fu_530_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then
                    tmp_i_i_reg_912(3 downto 0) <= tmp_i_i_fu_629_p1(3 downto 0);
            end if;
        end if;
    end process;
    date_0_vld_reg <= '0';
    signal_r_0_vld_reg <= '0';
    signal_out_1_data_reg(0) <= '0';
    signal_out_1_data_reg(7 downto 2) <= "000000";
    renew(7 downto 6) <= "00";
    resid_addr3_reg_884(0) <= '0';
    tmp_i_i_reg_912(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    offset_cast1_reg_942(31 downto 4) <= "0000000000000000000000000000";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, tmp_1_fu_553_p2, tmp_9_fu_559_p2, tmp_s_fu_565_p2, grp_dateport_O_layer_fu_328_ap_done, exitcond_i_i_fu_599_p2, grp_dateport_update_C1_fu_316_ap_done, tmp_i_fu_646_p2, tmp_i_reg_938, exitcond_i_fu_690_p2, grp_dateport_DC1_layer_fu_342_ap_done, grp_dateport_DC3_layer_fu_354_ap_done, grp_dateport_update_C3_fu_366_ap_done, grp_dateport_C3_conv_fu_378_ap_done, grp_dateport_DS2_layer_fu_392_ap_done, grp_dateport_C1_conv_fu_402_ap_done, grp_dateport_upadteall_fu_416_ap_done, grp_dateport_update_C5_fu_452_ap_done, grp_dateport_DS4_layer_fu_464_ap_done, grp_dateport_C5_conv_fu_474_ap_done, grp_dateport_DC5_layer_fu_488_ap_done, grp_dateport_S2_pool_fu_502_ap_done, grp_dateport_S4_pool_fu_510_ap_done, grp_dateport_update_OUT_fu_518_ap_done, ap_sig_bdd_1677)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (((tmp_1_fu_553_p2 = ap_const_lv1_0) and (tmp_9_fu_559_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = tmp_s_fu_565_p2))) then
                    ap_NS_fsm <= ap_ST_st46_fsm_45;
                elsif (((tmp_1_fu_553_p2 = ap_const_lv1_0) and (tmp_9_fu_559_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_s_fu_565_p2)))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                elsif (((tmp_1_fu_553_p2 = ap_const_lv1_0) and not((tmp_9_fu_559_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_st47_fsm_46;
                else
                    ap_NS_fsm <= ap_ST_st48_fsm_47;
                end if;
            when ap_ST_st3_fsm_2 => 
                if (not((ap_const_logic_0 = grp_dateport_C1_conv_fu_402_ap_done))) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                if (not((ap_const_logic_0 = grp_dateport_S2_pool_fu_502_ap_done))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                end if;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                if (not((ap_const_logic_0 = grp_dateport_C3_conv_fu_378_ap_done))) then
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                end if;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                if (not((ap_const_logic_0 = grp_dateport_S4_pool_fu_510_ap_done))) then
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                else
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                end if;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                if (not((ap_const_logic_0 = grp_dateport_C5_conv_fu_474_ap_done))) then
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                else
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                end if;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st13_fsm_12 => 
                if (not((ap_const_logic_0 = grp_dateport_O_layer_fu_328_ap_done))) then
                    ap_NS_fsm <= ap_ST_st14_fsm_13;
                else
                    ap_NS_fsm <= ap_ST_st13_fsm_12;
                end if;
            when ap_ST_st14_fsm_13 => 
                if (not((ap_const_lv1_0 = exitcond_i_i_fu_599_p2))) then
                    ap_NS_fsm <= ap_ST_st28_fsm_27;
                else
                    ap_NS_fsm <= ap_ST_st15_fsm_14;
                end if;
            when ap_ST_st15_fsm_14 => 
                ap_NS_fsm <= ap_ST_st16_fsm_15;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st17_fsm_16 => 
                ap_NS_fsm <= ap_ST_st18_fsm_17;
            when ap_ST_st18_fsm_17 => 
                ap_NS_fsm <= ap_ST_st19_fsm_18;
            when ap_ST_st19_fsm_18 => 
                ap_NS_fsm <= ap_ST_st20_fsm_19;
            when ap_ST_st20_fsm_19 => 
                ap_NS_fsm <= ap_ST_st21_fsm_20;
            when ap_ST_st21_fsm_20 => 
                ap_NS_fsm <= ap_ST_st22_fsm_21;
            when ap_ST_st22_fsm_21 => 
                ap_NS_fsm <= ap_ST_st23_fsm_22;
            when ap_ST_st23_fsm_22 => 
                ap_NS_fsm <= ap_ST_st24_fsm_23;
            when ap_ST_st24_fsm_23 => 
                ap_NS_fsm <= ap_ST_st25_fsm_24;
            when ap_ST_st25_fsm_24 => 
                ap_NS_fsm <= ap_ST_st26_fsm_25;
            when ap_ST_st26_fsm_25 => 
                ap_NS_fsm <= ap_ST_st27_fsm_26;
            when ap_ST_st27_fsm_26 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st28_fsm_27 => 
                if (not((ap_const_logic_0 = grp_dateport_DC5_layer_fu_488_ap_done))) then
                    ap_NS_fsm <= ap_ST_st29_fsm_28;
                else
                    ap_NS_fsm <= ap_ST_st28_fsm_27;
                end if;
            when ap_ST_st29_fsm_28 => 
                ap_NS_fsm <= ap_ST_st30_fsm_29;
            when ap_ST_st30_fsm_29 => 
                if (not(((ap_const_logic_0 = grp_dateport_DS4_layer_fu_464_ap_done) or (ap_const_logic_0 = grp_dateport_update_OUT_fu_518_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st31_fsm_30;
                else
                    ap_NS_fsm <= ap_ST_st30_fsm_29;
                end if;
            when ap_ST_st31_fsm_30 => 
                ap_NS_fsm <= ap_ST_st32_fsm_31;
            when ap_ST_st32_fsm_31 => 
                if (not(((ap_const_logic_0 = grp_dateport_DC3_layer_fu_354_ap_done) or (ap_const_logic_0 = grp_dateport_update_C5_fu_452_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st33_fsm_32;
                else
                    ap_NS_fsm <= ap_ST_st32_fsm_31;
                end if;
            when ap_ST_st33_fsm_32 => 
                ap_NS_fsm <= ap_ST_st34_fsm_33;
            when ap_ST_st34_fsm_33 => 
                if (not((ap_const_logic_0 = grp_dateport_DS2_layer_fu_392_ap_done))) then
                    ap_NS_fsm <= ap_ST_st35_fsm_34;
                else
                    ap_NS_fsm <= ap_ST_st34_fsm_33;
                end if;
            when ap_ST_st35_fsm_34 => 
                ap_NS_fsm <= ap_ST_st36_fsm_35;
            when ap_ST_st36_fsm_35 => 
                if (not(((ap_const_logic_0 = grp_dateport_DC1_layer_fu_342_ap_done) or (ap_const_logic_0 = grp_dateport_update_C3_fu_366_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st37_fsm_36;
                else
                    ap_NS_fsm <= ap_ST_st36_fsm_35;
                end if;
            when ap_ST_st37_fsm_36 => 
                ap_NS_fsm <= ap_ST_st38_fsm_37;
            when ap_ST_st38_fsm_37 => 
                if ((not((ap_const_logic_0 = grp_dateport_update_C1_fu_316_ap_done)) and (ap_const_lv1_0 = tmp_i_fu_646_p2))) then
                    ap_NS_fsm <= ap_ST_st40_fsm_39;
                elsif ((not((ap_const_logic_0 = grp_dateport_update_C1_fu_316_ap_done)) and not((ap_const_lv1_0 = tmp_i_fu_646_p2)))) then
                    ap_NS_fsm <= ap_ST_st39_fsm_38;
                else
                    ap_NS_fsm <= ap_ST_st38_fsm_37;
                end if;
            when ap_ST_st39_fsm_38 => 
                ap_NS_fsm <= ap_ST_st40_fsm_39;
            when ap_ST_st40_fsm_39 => 
                if (not((not((ap_const_lv1_0 = tmp_i_reg_938)) and (ap_const_logic_0 = grp_dateport_upadteall_fu_416_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st41_fsm_40;
                else
                    ap_NS_fsm <= ap_ST_st40_fsm_39;
                end if;
            when ap_ST_st41_fsm_40 => 
                if (not((ap_const_lv1_0 = exitcond_i_fu_690_p2))) then
                    ap_NS_fsm <= ap_ST_st45_fsm_44;
                else
                    ap_NS_fsm <= ap_ST_st42_fsm_41;
                end if;
            when ap_ST_st42_fsm_41 => 
                ap_NS_fsm <= ap_ST_st43_fsm_42;
            when ap_ST_st43_fsm_42 => 
                ap_NS_fsm <= ap_ST_st44_fsm_43;
            when ap_ST_st44_fsm_43 => 
                ap_NS_fsm <= ap_ST_st41_fsm_40;
            when ap_ST_st45_fsm_44 => 
                ap_NS_fsm <= ap_ST_st46_fsm_45;
            when ap_ST_st46_fsm_45 => 
                ap_NS_fsm <= ap_ST_st47_fsm_46;
            when ap_ST_st47_fsm_46 => 
                ap_NS_fsm <= ap_ST_st49_fsm_48;
            when ap_ST_st48_fsm_47 => 
                ap_NS_fsm <= ap_ST_st47_fsm_46;
            when ap_ST_st49_fsm_48 => 
                if (not(ap_sig_bdd_1677)) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st49_fsm_48;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    -- C1_bias_address0 assign process. --
    C1_bias_address0_assign_proc : process(tmp_i_reg_938, grp_dateport_DC1_layer_fu_342_C1_bias_address0, grp_dateport_C1_conv_fu_402_C1_bias_address0, grp_dateport_upadteall_fu_416_C1_bias_address0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st36_fsm_35, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C1_bias_address0 <= grp_dateport_upadteall_fu_416_C1_bias_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            C1_bias_address0 <= grp_dateport_C1_conv_fu_402_C1_bias_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35)) then 
            C1_bias_address0 <= grp_dateport_DC1_layer_fu_342_C1_bias_address0;
        else 
            C1_bias_address0 <= "XXX";
        end if; 
    end process;


    -- C1_bias_ce0 assign process. --
    C1_bias_ce0_assign_proc : process(tmp_i_reg_938, grp_dateport_DC1_layer_fu_342_C1_bias_ce0, grp_dateport_C1_conv_fu_402_C1_bias_ce0, grp_dateport_upadteall_fu_416_C1_bias_ce0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st36_fsm_35, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C1_bias_ce0 <= grp_dateport_upadteall_fu_416_C1_bias_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            C1_bias_ce0 <= grp_dateport_C1_conv_fu_402_C1_bias_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35)) then 
            C1_bias_ce0 <= grp_dateport_DC1_layer_fu_342_C1_bias_ce0;
        else 
            C1_bias_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    C1_bias_d0 <= grp_dateport_upadteall_fu_416_C1_bias_d0;

    -- C1_bias_we0 assign process. --
    C1_bias_we0_assign_proc : process(tmp_i_reg_938, grp_dateport_upadteall_fu_416_C1_bias_we0, ap_sig_cseq_ST_st40_fsm_39)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C1_bias_we0 <= grp_dateport_upadteall_fu_416_C1_bias_we0;
        else 
            C1_bias_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- C1_d_address0 assign process. --
    C1_d_address0_assign_proc : process(ap_sig_cseq_ST_st38_fsm_37, grp_dateport_update_C1_fu_316_C1_d_address0, grp_dateport_DC1_layer_fu_342_C1_d_address0, ap_sig_cseq_ST_st36_fsm_35)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35)) then 
            C1_d_address0 <= grp_dateport_DC1_layer_fu_342_C1_d_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st38_fsm_37)) then 
            C1_d_address0 <= grp_dateport_update_C1_fu_316_C1_d_address0;
        else 
            C1_d_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    -- C1_d_address1 assign process. --
    C1_d_address1_assign_proc : process(ap_sig_cseq_ST_st38_fsm_37, grp_dateport_update_C1_fu_316_C1_d_address1, grp_dateport_DC1_layer_fu_342_C1_d_address1, ap_sig_cseq_ST_st36_fsm_35)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35)) then 
            C1_d_address1 <= grp_dateport_DC1_layer_fu_342_C1_d_address1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st38_fsm_37)) then 
            C1_d_address1 <= grp_dateport_update_C1_fu_316_C1_d_address1;
        else 
            C1_d_address1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    -- C1_d_ce0 assign process. --
    C1_d_ce0_assign_proc : process(ap_sig_cseq_ST_st38_fsm_37, grp_dateport_update_C1_fu_316_C1_d_ce0, grp_dateport_DC1_layer_fu_342_C1_d_ce0, ap_sig_cseq_ST_st36_fsm_35)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35)) then 
            C1_d_ce0 <= grp_dateport_DC1_layer_fu_342_C1_d_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st38_fsm_37)) then 
            C1_d_ce0 <= grp_dateport_update_C1_fu_316_C1_d_ce0;
        else 
            C1_d_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- C1_d_ce1 assign process. --
    C1_d_ce1_assign_proc : process(ap_sig_cseq_ST_st38_fsm_37, grp_dateport_update_C1_fu_316_C1_d_ce1, grp_dateport_DC1_layer_fu_342_C1_d_ce1, ap_sig_cseq_ST_st36_fsm_35)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35)) then 
            C1_d_ce1 <= grp_dateport_DC1_layer_fu_342_C1_d_ce1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st38_fsm_37)) then 
            C1_d_ce1 <= grp_dateport_update_C1_fu_316_C1_d_ce1;
        else 
            C1_d_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    C1_d_d0 <= grp_dateport_DC1_layer_fu_342_C1_d_d0;
    C1_d_d1 <= grp_dateport_DC1_layer_fu_342_C1_d_d1;

    -- C1_d_we0 assign process. --
    C1_d_we0_assign_proc : process(grp_dateport_DC1_layer_fu_342_C1_d_we0, ap_sig_cseq_ST_st36_fsm_35)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35)) then 
            C1_d_we0 <= grp_dateport_DC1_layer_fu_342_C1_d_we0;
        else 
            C1_d_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- C1_d_we1 assign process. --
    C1_d_we1_assign_proc : process(grp_dateport_DC1_layer_fu_342_C1_d_we1, ap_sig_cseq_ST_st36_fsm_35)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35)) then 
            C1_d_we1 <= grp_dateport_DC1_layer_fu_342_C1_d_we1;
        else 
            C1_d_we1 <= ap_const_logic_0;
        end if; 
    end process;


    -- C1_dbias_address0 assign process. --
    C1_dbias_address0_assign_proc : process(ap_sig_cseq_ST_st38_fsm_37, tmp_i_reg_938, grp_dateport_update_C1_fu_316_C1_dbias_address0, grp_dateport_upadteall_fu_416_C1_dbias_address0, ap_sig_cseq_ST_st40_fsm_39)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C1_dbias_address0 <= grp_dateport_upadteall_fu_416_C1_dbias_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st38_fsm_37)) then 
            C1_dbias_address0 <= grp_dateport_update_C1_fu_316_C1_dbias_address0;
        else 
            C1_dbias_address0 <= "XXX";
        end if; 
    end process;


    -- C1_dbias_ce0 assign process. --
    C1_dbias_ce0_assign_proc : process(ap_sig_cseq_ST_st38_fsm_37, tmp_i_reg_938, grp_dateport_update_C1_fu_316_C1_dbias_ce0, grp_dateport_upadteall_fu_416_C1_dbias_ce0, ap_sig_cseq_ST_st40_fsm_39)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C1_dbias_ce0 <= grp_dateport_upadteall_fu_416_C1_dbias_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st38_fsm_37)) then 
            C1_dbias_ce0 <= grp_dateport_update_C1_fu_316_C1_dbias_ce0;
        else 
            C1_dbias_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- C1_dbias_d0 assign process. --
    C1_dbias_d0_assign_proc : process(ap_sig_cseq_ST_st38_fsm_37, tmp_i_reg_938, grp_dateport_update_C1_fu_316_C1_dbias_d0, grp_dateport_upadteall_fu_416_C1_dbias_d0, ap_sig_cseq_ST_st40_fsm_39)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C1_dbias_d0 <= grp_dateport_upadteall_fu_416_C1_dbias_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st38_fsm_37)) then 
            C1_dbias_d0 <= grp_dateport_update_C1_fu_316_C1_dbias_d0;
        else 
            C1_dbias_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- C1_dbias_we0 assign process. --
    C1_dbias_we0_assign_proc : process(ap_sig_cseq_ST_st38_fsm_37, tmp_i_reg_938, grp_dateport_update_C1_fu_316_C1_dbias_we0, grp_dateport_upadteall_fu_416_C1_dbias_we0, ap_sig_cseq_ST_st40_fsm_39)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C1_dbias_we0 <= grp_dateport_upadteall_fu_416_C1_dbias_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st38_fsm_37)) then 
            C1_dbias_we0 <= grp_dateport_update_C1_fu_316_C1_dbias_we0;
        else 
            C1_dbias_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- C1_dmapData_address0 assign process. --
    C1_dmapData_address0_assign_proc : process(ap_sig_cseq_ST_st38_fsm_37, tmp_i_reg_938, grp_dateport_update_C1_fu_316_C1_dmapData_address0, grp_dateport_upadteall_fu_416_C1_dmapData_address0, ap_sig_cseq_ST_st40_fsm_39)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C1_dmapData_address0 <= grp_dateport_upadteall_fu_416_C1_dmapData_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st38_fsm_37)) then 
            C1_dmapData_address0 <= grp_dateport_update_C1_fu_316_C1_dmapData_address0;
        else 
            C1_dmapData_address0 <= "XXXXXXXX";
        end if; 
    end process;


    -- C1_dmapData_ce0 assign process. --
    C1_dmapData_ce0_assign_proc : process(ap_sig_cseq_ST_st38_fsm_37, tmp_i_reg_938, grp_dateport_update_C1_fu_316_C1_dmapData_ce0, grp_dateport_upadteall_fu_416_C1_dmapData_ce0, ap_sig_cseq_ST_st40_fsm_39)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C1_dmapData_ce0 <= grp_dateport_upadteall_fu_416_C1_dmapData_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st38_fsm_37)) then 
            C1_dmapData_ce0 <= grp_dateport_update_C1_fu_316_C1_dmapData_ce0;
        else 
            C1_dmapData_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- C1_dmapData_d0 assign process. --
    C1_dmapData_d0_assign_proc : process(ap_sig_cseq_ST_st38_fsm_37, tmp_i_reg_938, grp_dateport_update_C1_fu_316_C1_dmapData_d0, grp_dateport_upadteall_fu_416_C1_dmapData_d0, ap_sig_cseq_ST_st40_fsm_39)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C1_dmapData_d0 <= grp_dateport_upadteall_fu_416_C1_dmapData_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st38_fsm_37)) then 
            C1_dmapData_d0 <= grp_dateport_update_C1_fu_316_C1_dmapData_d0;
        else 
            C1_dmapData_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- C1_dmapData_we0 assign process. --
    C1_dmapData_we0_assign_proc : process(ap_sig_cseq_ST_st38_fsm_37, tmp_i_reg_938, grp_dateport_update_C1_fu_316_C1_dmapData_we0, grp_dateport_upadteall_fu_416_C1_dmapData_we0, ap_sig_cseq_ST_st40_fsm_39)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C1_dmapData_we0 <= grp_dateport_upadteall_fu_416_C1_dmapData_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st38_fsm_37)) then 
            C1_dmapData_we0 <= grp_dateport_update_C1_fu_316_C1_dmapData_we0;
        else 
            C1_dmapData_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- C1_mapData_address0 assign process. --
    C1_mapData_address0_assign_proc : process(tmp_i_reg_938, grp_dateport_C1_conv_fu_402_C1_mapData_address0, grp_dateport_upadteall_fu_416_C1_mapData_address0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C1_mapData_address0 <= grp_dateport_upadteall_fu_416_C1_mapData_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            C1_mapData_address0 <= grp_dateport_C1_conv_fu_402_C1_mapData_address0;
        else 
            C1_mapData_address0 <= "XXXXXXXX";
        end if; 
    end process;

    C1_mapData_address1 <= grp_dateport_C1_conv_fu_402_C1_mapData_address1;

    -- C1_mapData_ce0 assign process. --
    C1_mapData_ce0_assign_proc : process(tmp_i_reg_938, grp_dateport_C1_conv_fu_402_C1_mapData_ce0, grp_dateport_upadteall_fu_416_C1_mapData_ce0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C1_mapData_ce0 <= grp_dateport_upadteall_fu_416_C1_mapData_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            C1_mapData_ce0 <= grp_dateport_C1_conv_fu_402_C1_mapData_ce0;
        else 
            C1_mapData_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- C1_mapData_ce1 assign process. --
    C1_mapData_ce1_assign_proc : process(grp_dateport_C1_conv_fu_402_C1_mapData_ce1, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            C1_mapData_ce1 <= grp_dateport_C1_conv_fu_402_C1_mapData_ce1;
        else 
            C1_mapData_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    C1_mapData_d0 <= grp_dateport_upadteall_fu_416_C1_mapData_d0;

    -- C1_mapData_we0 assign process. --
    C1_mapData_we0_assign_proc : process(tmp_i_reg_938, grp_dateport_upadteall_fu_416_C1_mapData_we0, ap_sig_cseq_ST_st40_fsm_39)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C1_mapData_we0 <= grp_dateport_upadteall_fu_416_C1_mapData_we0;
        else 
            C1_mapData_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- C1_v_address0 assign process. --
    C1_v_address0_assign_proc : process(grp_dateport_DC1_layer_fu_342_C1_v_address0, grp_dateport_C1_conv_fu_402_C1_v_address0, ap_sig_cseq_ST_st36_fsm_35, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            C1_v_address0 <= grp_dateport_C1_conv_fu_402_C1_v_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35)) then 
            C1_v_address0 <= grp_dateport_DC1_layer_fu_342_C1_v_address0;
        else 
            C1_v_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;

    C1_v_address1 <= grp_dateport_DC1_layer_fu_342_C1_v_address1;

    -- C1_v_ce0 assign process. --
    C1_v_ce0_assign_proc : process(grp_dateport_DC1_layer_fu_342_C1_v_ce0, grp_dateport_C1_conv_fu_402_C1_v_ce0, ap_sig_cseq_ST_st36_fsm_35, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            C1_v_ce0 <= grp_dateport_C1_conv_fu_402_C1_v_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35)) then 
            C1_v_ce0 <= grp_dateport_DC1_layer_fu_342_C1_v_ce0;
        else 
            C1_v_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- C1_v_ce1 assign process. --
    C1_v_ce1_assign_proc : process(grp_dateport_DC1_layer_fu_342_C1_v_ce1, ap_sig_cseq_ST_st36_fsm_35)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35)) then 
            C1_v_ce1 <= grp_dateport_DC1_layer_fu_342_C1_v_ce1;
        else 
            C1_v_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    C1_v_d0 <= grp_dateport_C1_conv_fu_402_C1_v_d0;

    -- C1_v_we0 assign process. --
    C1_v_we0_assign_proc : process(grp_dateport_C1_conv_fu_402_C1_v_we0, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            C1_v_we0 <= grp_dateport_C1_conv_fu_402_C1_v_we0;
        else 
            C1_v_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- C1_y_address0 assign process. --
    C1_y_address0_assign_proc : process(grp_dateport_C1_conv_fu_402_C1_y_address0, grp_dateport_S2_pool_fu_502_C1_y_address0, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            C1_y_address0 <= grp_dateport_S2_pool_fu_502_C1_y_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            C1_y_address0 <= grp_dateport_C1_conv_fu_402_C1_y_address0;
        else 
            C1_y_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;

    C1_y_address1 <= grp_dateport_S2_pool_fu_502_C1_y_address1;

    -- C1_y_ce0 assign process. --
    C1_y_ce0_assign_proc : process(grp_dateport_C1_conv_fu_402_C1_y_ce0, grp_dateport_S2_pool_fu_502_C1_y_ce0, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            C1_y_ce0 <= grp_dateport_S2_pool_fu_502_C1_y_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            C1_y_ce0 <= grp_dateport_C1_conv_fu_402_C1_y_ce0;
        else 
            C1_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- C1_y_ce1 assign process. --
    C1_y_ce1_assign_proc : process(grp_dateport_S2_pool_fu_502_C1_y_ce1, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            C1_y_ce1 <= grp_dateport_S2_pool_fu_502_C1_y_ce1;
        else 
            C1_y_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    C1_y_d0 <= grp_dateport_C1_conv_fu_402_C1_y_d0;

    -- C1_y_we0 assign process. --
    C1_y_we0_assign_proc : process(grp_dateport_C1_conv_fu_402_C1_y_we0, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            C1_y_we0 <= grp_dateport_C1_conv_fu_402_C1_y_we0;
        else 
            C1_y_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- C3_bias_address0 assign process. --
    C3_bias_address0_assign_proc : process(tmp_i_reg_938, grp_dateport_DC3_layer_fu_354_C3_bias_address0, grp_dateport_C3_conv_fu_378_C3_bias_address0, grp_dateport_upadteall_fu_416_C3_bias_address0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st32_fsm_31, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C3_bias_address0 <= grp_dateport_upadteall_fu_416_C3_bias_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            C3_bias_address0 <= grp_dateport_C3_conv_fu_378_C3_bias_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31)) then 
            C3_bias_address0 <= grp_dateport_DC3_layer_fu_354_C3_bias_address0;
        else 
            C3_bias_address0 <= "XXXX";
        end if; 
    end process;


    -- C3_bias_ce0 assign process. --
    C3_bias_ce0_assign_proc : process(tmp_i_reg_938, grp_dateport_DC3_layer_fu_354_C3_bias_ce0, grp_dateport_C3_conv_fu_378_C3_bias_ce0, grp_dateport_upadteall_fu_416_C3_bias_ce0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st32_fsm_31, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C3_bias_ce0 <= grp_dateport_upadteall_fu_416_C3_bias_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            C3_bias_ce0 <= grp_dateport_C3_conv_fu_378_C3_bias_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31)) then 
            C3_bias_ce0 <= grp_dateport_DC3_layer_fu_354_C3_bias_ce0;
        else 
            C3_bias_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    C3_bias_d0 <= grp_dateport_upadteall_fu_416_C3_bias_d0;

    -- C3_bias_we0 assign process. --
    C3_bias_we0_assign_proc : process(tmp_i_reg_938, grp_dateport_upadteall_fu_416_C3_bias_we0, ap_sig_cseq_ST_st40_fsm_39)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C3_bias_we0 <= grp_dateport_upadteall_fu_416_C3_bias_we0;
        else 
            C3_bias_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- C3_d_address0 assign process. --
    C3_d_address0_assign_proc : process(grp_dateport_DC3_layer_fu_354_C3_d_address0, grp_dateport_update_C3_fu_366_C3_d_address0, grp_dateport_DS2_layer_fu_392_C3_d_address0, ap_sig_cseq_ST_st36_fsm_35, ap_sig_cseq_ST_st32_fsm_31, ap_sig_cseq_ST_st34_fsm_33)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33)) then 
            C3_d_address0 <= grp_dateport_DS2_layer_fu_392_C3_d_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35)) then 
            C3_d_address0 <= grp_dateport_update_C3_fu_366_C3_d_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31)) then 
            C3_d_address0 <= grp_dateport_DC3_layer_fu_354_C3_d_address0;
        else 
            C3_d_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- C3_d_address1 assign process. --
    C3_d_address1_assign_proc : process(grp_dateport_DC3_layer_fu_354_C3_d_address1, grp_dateport_update_C3_fu_366_C3_d_address1, ap_sig_cseq_ST_st36_fsm_35, ap_sig_cseq_ST_st32_fsm_31)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35)) then 
            C3_d_address1 <= grp_dateport_update_C3_fu_366_C3_d_address1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31)) then 
            C3_d_address1 <= grp_dateport_DC3_layer_fu_354_C3_d_address1;
        else 
            C3_d_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- C3_d_ce0 assign process. --
    C3_d_ce0_assign_proc : process(grp_dateport_DC3_layer_fu_354_C3_d_ce0, grp_dateport_update_C3_fu_366_C3_d_ce0, grp_dateport_DS2_layer_fu_392_C3_d_ce0, ap_sig_cseq_ST_st36_fsm_35, ap_sig_cseq_ST_st32_fsm_31, ap_sig_cseq_ST_st34_fsm_33)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33)) then 
            C3_d_ce0 <= grp_dateport_DS2_layer_fu_392_C3_d_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35)) then 
            C3_d_ce0 <= grp_dateport_update_C3_fu_366_C3_d_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31)) then 
            C3_d_ce0 <= grp_dateport_DC3_layer_fu_354_C3_d_ce0;
        else 
            C3_d_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- C3_d_ce1 assign process. --
    C3_d_ce1_assign_proc : process(grp_dateport_DC3_layer_fu_354_C3_d_ce1, grp_dateport_update_C3_fu_366_C3_d_ce1, ap_sig_cseq_ST_st36_fsm_35, ap_sig_cseq_ST_st32_fsm_31)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35)) then 
            C3_d_ce1 <= grp_dateport_update_C3_fu_366_C3_d_ce1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31)) then 
            C3_d_ce1 <= grp_dateport_DC3_layer_fu_354_C3_d_ce1;
        else 
            C3_d_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    C3_d_d0 <= grp_dateport_DC3_layer_fu_354_C3_d_d0;
    C3_d_d1 <= grp_dateport_DC3_layer_fu_354_C3_d_d1;

    -- C3_d_we0 assign process. --
    C3_d_we0_assign_proc : process(grp_dateport_DC3_layer_fu_354_C3_d_we0, ap_sig_cseq_ST_st32_fsm_31)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31)) then 
            C3_d_we0 <= grp_dateport_DC3_layer_fu_354_C3_d_we0;
        else 
            C3_d_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- C3_d_we1 assign process. --
    C3_d_we1_assign_proc : process(grp_dateport_DC3_layer_fu_354_C3_d_we1, ap_sig_cseq_ST_st32_fsm_31)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31)) then 
            C3_d_we1 <= grp_dateport_DC3_layer_fu_354_C3_d_we1;
        else 
            C3_d_we1 <= ap_const_logic_0;
        end if; 
    end process;


    -- C3_dbias_address0 assign process. --
    C3_dbias_address0_assign_proc : process(tmp_i_reg_938, grp_dateport_update_C3_fu_366_C3_dbias_address0, grp_dateport_upadteall_fu_416_C3_dbias_address0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st36_fsm_35)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C3_dbias_address0 <= grp_dateport_upadteall_fu_416_C3_dbias_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35)) then 
            C3_dbias_address0 <= grp_dateport_update_C3_fu_366_C3_dbias_address0;
        else 
            C3_dbias_address0 <= "XXXX";
        end if; 
    end process;


    -- C3_dbias_ce0 assign process. --
    C3_dbias_ce0_assign_proc : process(tmp_i_reg_938, grp_dateport_update_C3_fu_366_C3_dbias_ce0, grp_dateport_upadteall_fu_416_C3_dbias_ce0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st36_fsm_35)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C3_dbias_ce0 <= grp_dateport_upadteall_fu_416_C3_dbias_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35)) then 
            C3_dbias_ce0 <= grp_dateport_update_C3_fu_366_C3_dbias_ce0;
        else 
            C3_dbias_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- C3_dbias_d0 assign process. --
    C3_dbias_d0_assign_proc : process(tmp_i_reg_938, grp_dateport_update_C3_fu_366_C3_dbias_d0, grp_dateport_upadteall_fu_416_C3_dbias_d0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st36_fsm_35)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C3_dbias_d0 <= grp_dateport_upadteall_fu_416_C3_dbias_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35)) then 
            C3_dbias_d0 <= grp_dateport_update_C3_fu_366_C3_dbias_d0;
        else 
            C3_dbias_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- C3_dbias_we0 assign process. --
    C3_dbias_we0_assign_proc : process(tmp_i_reg_938, grp_dateport_update_C3_fu_366_C3_dbias_we0, grp_dateport_upadteall_fu_416_C3_dbias_we0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st36_fsm_35)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C3_dbias_we0 <= grp_dateport_upadteall_fu_416_C3_dbias_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35)) then 
            C3_dbias_we0 <= grp_dateport_update_C3_fu_366_C3_dbias_we0;
        else 
            C3_dbias_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- C3_dmapData_address0 assign process. --
    C3_dmapData_address0_assign_proc : process(tmp_i_reg_938, grp_dateport_update_C3_fu_366_C3_dmapData_address0, grp_dateport_upadteall_fu_416_C3_dmapData_address0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st36_fsm_35)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C3_dmapData_address0 <= grp_dateport_upadteall_fu_416_C3_dmapData_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35)) then 
            C3_dmapData_address0 <= grp_dateport_update_C3_fu_366_C3_dmapData_address0;
        else 
            C3_dmapData_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    C3_dmapData_address1 <= grp_dateport_upadteall_fu_416_C3_dmapData_address1;

    -- C3_dmapData_ce0 assign process. --
    C3_dmapData_ce0_assign_proc : process(tmp_i_reg_938, grp_dateport_update_C3_fu_366_C3_dmapData_ce0, grp_dateport_upadteall_fu_416_C3_dmapData_ce0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st36_fsm_35)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C3_dmapData_ce0 <= grp_dateport_upadteall_fu_416_C3_dmapData_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35)) then 
            C3_dmapData_ce0 <= grp_dateport_update_C3_fu_366_C3_dmapData_ce0;
        else 
            C3_dmapData_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- C3_dmapData_ce1 assign process. --
    C3_dmapData_ce1_assign_proc : process(tmp_i_reg_938, grp_dateport_upadteall_fu_416_C3_dmapData_ce1, ap_sig_cseq_ST_st40_fsm_39)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C3_dmapData_ce1 <= grp_dateport_upadteall_fu_416_C3_dmapData_ce1;
        else 
            C3_dmapData_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    C3_dmapData_d0 <= grp_dateport_update_C3_fu_366_C3_dmapData_d0;
    C3_dmapData_d1 <= grp_dateport_upadteall_fu_416_C3_dmapData_d1;

    -- C3_dmapData_we0 assign process. --
    C3_dmapData_we0_assign_proc : process(grp_dateport_update_C3_fu_366_C3_dmapData_we0, ap_sig_cseq_ST_st36_fsm_35)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35)) then 
            C3_dmapData_we0 <= grp_dateport_update_C3_fu_366_C3_dmapData_we0;
        else 
            C3_dmapData_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- C3_dmapData_we1 assign process. --
    C3_dmapData_we1_assign_proc : process(tmp_i_reg_938, grp_dateport_upadteall_fu_416_C3_dmapData_we1, ap_sig_cseq_ST_st40_fsm_39)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C3_dmapData_we1 <= grp_dateport_upadteall_fu_416_C3_dmapData_we1;
        else 
            C3_dmapData_we1 <= ap_const_logic_0;
        end if; 
    end process;


    -- C3_mapData_address0 assign process. --
    C3_mapData_address0_assign_proc : process(tmp_i_reg_938, grp_dateport_C3_conv_fu_378_C3_mapData_address0, grp_dateport_DS2_layer_fu_392_C3_mapData_address0, grp_dateport_upadteall_fu_416_C3_mapData_address0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st34_fsm_33)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C3_mapData_address0 <= grp_dateport_upadteall_fu_416_C3_mapData_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33)) then 
            C3_mapData_address0 <= grp_dateport_DS2_layer_fu_392_C3_mapData_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            C3_mapData_address0 <= grp_dateport_C3_conv_fu_378_C3_mapData_address0;
        else 
            C3_mapData_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    -- C3_mapData_address1 assign process. --
    C3_mapData_address1_assign_proc : process(tmp_i_reg_938, grp_dateport_C3_conv_fu_378_C3_mapData_address1, grp_dateport_DS2_layer_fu_392_C3_mapData_address1, grp_dateport_upadteall_fu_416_C3_mapData_address1, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st34_fsm_33)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C3_mapData_address1 <= grp_dateport_upadteall_fu_416_C3_mapData_address1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33)) then 
            C3_mapData_address1 <= grp_dateport_DS2_layer_fu_392_C3_mapData_address1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            C3_mapData_address1 <= grp_dateport_C3_conv_fu_378_C3_mapData_address1;
        else 
            C3_mapData_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    -- C3_mapData_ce0 assign process. --
    C3_mapData_ce0_assign_proc : process(tmp_i_reg_938, grp_dateport_C3_conv_fu_378_C3_mapData_ce0, grp_dateport_DS2_layer_fu_392_C3_mapData_ce0, grp_dateport_upadteall_fu_416_C3_mapData_ce0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st34_fsm_33)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C3_mapData_ce0 <= grp_dateport_upadteall_fu_416_C3_mapData_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33)) then 
            C3_mapData_ce0 <= grp_dateport_DS2_layer_fu_392_C3_mapData_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            C3_mapData_ce0 <= grp_dateport_C3_conv_fu_378_C3_mapData_ce0;
        else 
            C3_mapData_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- C3_mapData_ce1 assign process. --
    C3_mapData_ce1_assign_proc : process(tmp_i_reg_938, grp_dateport_C3_conv_fu_378_C3_mapData_ce1, grp_dateport_DS2_layer_fu_392_C3_mapData_ce1, grp_dateport_upadteall_fu_416_C3_mapData_ce1, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st34_fsm_33)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C3_mapData_ce1 <= grp_dateport_upadteall_fu_416_C3_mapData_ce1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33)) then 
            C3_mapData_ce1 <= grp_dateport_DS2_layer_fu_392_C3_mapData_ce1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            C3_mapData_ce1 <= grp_dateport_C3_conv_fu_378_C3_mapData_ce1;
        else 
            C3_mapData_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    C3_mapData_d1 <= grp_dateport_upadteall_fu_416_C3_mapData_d1;

    -- C3_mapData_we1 assign process. --
    C3_mapData_we1_assign_proc : process(tmp_i_reg_938, grp_dateport_upadteall_fu_416_C3_mapData_we1, ap_sig_cseq_ST_st40_fsm_39)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C3_mapData_we1 <= grp_dateport_upadteall_fu_416_C3_mapData_we1;
        else 
            C3_mapData_we1 <= ap_const_logic_0;
        end if; 
    end process;


    -- C3_y_address0 assign process. --
    C3_y_address0_assign_proc : process(grp_dateport_DC3_layer_fu_354_C3_y_address0, grp_dateport_C3_conv_fu_378_C3_y_address0, grp_dateport_S4_pool_fu_510_C3_y_address0, ap_sig_cseq_ST_st32_fsm_31, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st9_fsm_8)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            C3_y_address0 <= grp_dateport_S4_pool_fu_510_C3_y_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            C3_y_address0 <= grp_dateport_C3_conv_fu_378_C3_y_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31)) then 
            C3_y_address0 <= grp_dateport_DC3_layer_fu_354_C3_y_address0;
        else 
            C3_y_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- C3_y_address1 assign process. --
    C3_y_address1_assign_proc : process(grp_dateport_DC3_layer_fu_354_C3_y_address1, grp_dateport_S4_pool_fu_510_C3_y_address1, ap_sig_cseq_ST_st32_fsm_31, ap_sig_cseq_ST_st9_fsm_8)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            C3_y_address1 <= grp_dateport_S4_pool_fu_510_C3_y_address1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31)) then 
            C3_y_address1 <= grp_dateport_DC3_layer_fu_354_C3_y_address1;
        else 
            C3_y_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- C3_y_ce0 assign process. --
    C3_y_ce0_assign_proc : process(grp_dateport_DC3_layer_fu_354_C3_y_ce0, grp_dateport_C3_conv_fu_378_C3_y_ce0, grp_dateport_S4_pool_fu_510_C3_y_ce0, ap_sig_cseq_ST_st32_fsm_31, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st9_fsm_8)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            C3_y_ce0 <= grp_dateport_S4_pool_fu_510_C3_y_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            C3_y_ce0 <= grp_dateport_C3_conv_fu_378_C3_y_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31)) then 
            C3_y_ce0 <= grp_dateport_DC3_layer_fu_354_C3_y_ce0;
        else 
            C3_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- C3_y_ce1 assign process. --
    C3_y_ce1_assign_proc : process(grp_dateport_DC3_layer_fu_354_C3_y_ce1, grp_dateport_S4_pool_fu_510_C3_y_ce1, ap_sig_cseq_ST_st32_fsm_31, ap_sig_cseq_ST_st9_fsm_8)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            C3_y_ce1 <= grp_dateport_S4_pool_fu_510_C3_y_ce1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31)) then 
            C3_y_ce1 <= grp_dateport_DC3_layer_fu_354_C3_y_ce1;
        else 
            C3_y_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    C3_y_d0 <= grp_dateport_C3_conv_fu_378_C3_y_d0;

    -- C3_y_we0 assign process. --
    C3_y_we0_assign_proc : process(grp_dateport_C3_conv_fu_378_C3_y_we0, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            C3_y_we0 <= grp_dateport_C3_conv_fu_378_C3_y_we0;
        else 
            C3_y_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- C5_bias_address0 assign process. --
    C5_bias_address0_assign_proc : process(tmp_i_reg_938, grp_dateport_upadteall_fu_416_C5_bias_address0, grp_dateport_C5_conv_fu_474_C5_bias_address0, grp_dateport_DC5_layer_fu_488_C5_bias_address0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st28_fsm_27)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27)) then 
            C5_bias_address0 <= grp_dateport_DC5_layer_fu_488_C5_bias_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            C5_bias_address0 <= grp_dateport_C5_conv_fu_474_C5_bias_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C5_bias_address0 <= grp_dateport_upadteall_fu_416_C5_bias_address0;
        else 
            C5_bias_address0 <= "XXXXX";
        end if; 
    end process;


    -- C5_bias_ce0 assign process. --
    C5_bias_ce0_assign_proc : process(tmp_i_reg_938, grp_dateport_upadteall_fu_416_C5_bias_ce0, grp_dateport_C5_conv_fu_474_C5_bias_ce0, grp_dateport_DC5_layer_fu_488_C5_bias_ce0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st28_fsm_27)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27)) then 
            C5_bias_ce0 <= grp_dateport_DC5_layer_fu_488_C5_bias_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            C5_bias_ce0 <= grp_dateport_C5_conv_fu_474_C5_bias_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C5_bias_ce0 <= grp_dateport_upadteall_fu_416_C5_bias_ce0;
        else 
            C5_bias_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    C5_bias_d0 <= grp_dateport_upadteall_fu_416_C5_bias_d0;

    -- C5_bias_we0 assign process. --
    C5_bias_we0_assign_proc : process(tmp_i_reg_938, grp_dateport_upadteall_fu_416_C5_bias_we0, ap_sig_cseq_ST_st40_fsm_39)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C5_bias_we0 <= grp_dateport_upadteall_fu_416_C5_bias_we0;
        else 
            C5_bias_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- C5_d_address0 assign process. --
    C5_d_address0_assign_proc : process(grp_dateport_update_C5_fu_452_C5_d_address0, grp_dateport_DS4_layer_fu_464_C5_d_address0, grp_dateport_DC5_layer_fu_488_C5_d_address0, ap_sig_cseq_ST_st32_fsm_31, ap_sig_cseq_ST_st30_fsm_29, ap_sig_cseq_ST_st28_fsm_27)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27)) then 
            C5_d_address0 <= grp_dateport_DC5_layer_fu_488_C5_d_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29)) then 
            C5_d_address0 <= grp_dateport_DS4_layer_fu_464_C5_d_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31)) then 
            C5_d_address0 <= grp_dateport_update_C5_fu_452_C5_d_address0;
        else 
            C5_d_address0 <= "XXXXX";
        end if; 
    end process;


    -- C5_d_ce0 assign process. --
    C5_d_ce0_assign_proc : process(grp_dateport_update_C5_fu_452_C5_d_ce0, grp_dateport_DS4_layer_fu_464_C5_d_ce0, grp_dateport_DC5_layer_fu_488_C5_d_ce0, ap_sig_cseq_ST_st32_fsm_31, ap_sig_cseq_ST_st30_fsm_29, ap_sig_cseq_ST_st28_fsm_27)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27)) then 
            C5_d_ce0 <= grp_dateport_DC5_layer_fu_488_C5_d_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29)) then 
            C5_d_ce0 <= grp_dateport_DS4_layer_fu_464_C5_d_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31)) then 
            C5_d_ce0 <= grp_dateport_update_C5_fu_452_C5_d_ce0;
        else 
            C5_d_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    C5_d_d0 <= grp_dateport_DC5_layer_fu_488_C5_d_d0;

    -- C5_d_we0 assign process. --
    C5_d_we0_assign_proc : process(grp_dateport_DC5_layer_fu_488_C5_d_we0, ap_sig_cseq_ST_st28_fsm_27)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27)) then 
            C5_d_we0 <= grp_dateport_DC5_layer_fu_488_C5_d_we0;
        else 
            C5_d_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- C5_dbias_address0 assign process. --
    C5_dbias_address0_assign_proc : process(tmp_i_reg_938, grp_dateport_upadteall_fu_416_C5_dbias_address0, grp_dateport_update_C5_fu_452_C5_dbias_address0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st32_fsm_31)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31)) then 
            C5_dbias_address0 <= grp_dateport_update_C5_fu_452_C5_dbias_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C5_dbias_address0 <= grp_dateport_upadteall_fu_416_C5_dbias_address0;
        else 
            C5_dbias_address0 <= "XXXXX";
        end if; 
    end process;


    -- C5_dbias_ce0 assign process. --
    C5_dbias_ce0_assign_proc : process(tmp_i_reg_938, grp_dateport_upadteall_fu_416_C5_dbias_ce0, grp_dateport_update_C5_fu_452_C5_dbias_ce0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st32_fsm_31)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31)) then 
            C5_dbias_ce0 <= grp_dateport_update_C5_fu_452_C5_dbias_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C5_dbias_ce0 <= grp_dateport_upadteall_fu_416_C5_dbias_ce0;
        else 
            C5_dbias_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- C5_dbias_d0 assign process. --
    C5_dbias_d0_assign_proc : process(tmp_i_reg_938, grp_dateport_upadteall_fu_416_C5_dbias_d0, grp_dateport_update_C5_fu_452_C5_dbias_d0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st32_fsm_31)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31)) then 
            C5_dbias_d0 <= grp_dateport_update_C5_fu_452_C5_dbias_d0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C5_dbias_d0 <= grp_dateport_upadteall_fu_416_C5_dbias_d0;
        else 
            C5_dbias_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- C5_dbias_we0 assign process. --
    C5_dbias_we0_assign_proc : process(tmp_i_reg_938, grp_dateport_upadteall_fu_416_C5_dbias_we0, grp_dateport_update_C5_fu_452_C5_dbias_we0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st32_fsm_31)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31)) then 
            C5_dbias_we0 <= grp_dateport_update_C5_fu_452_C5_dbias_we0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C5_dbias_we0 <= grp_dateport_upadteall_fu_416_C5_dbias_we0;
        else 
            C5_dbias_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- C5_dmapData_address0 assign process. --
    C5_dmapData_address0_assign_proc : process(tmp_i_reg_938, grp_dateport_upadteall_fu_416_C5_dmapData_address0, grp_dateport_update_C5_fu_452_C5_dmapData_address0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st32_fsm_31)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31)) then 
            C5_dmapData_address0 <= grp_dateport_update_C5_fu_452_C5_dmapData_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C5_dmapData_address0 <= grp_dateport_upadteall_fu_416_C5_dmapData_address0;
        else 
            C5_dmapData_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    -- C5_dmapData_ce0 assign process. --
    C5_dmapData_ce0_assign_proc : process(tmp_i_reg_938, grp_dateport_upadteall_fu_416_C5_dmapData_ce0, grp_dateport_update_C5_fu_452_C5_dmapData_ce0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st32_fsm_31)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31)) then 
            C5_dmapData_ce0 <= grp_dateport_update_C5_fu_452_C5_dmapData_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C5_dmapData_ce0 <= grp_dateport_upadteall_fu_416_C5_dmapData_ce0;
        else 
            C5_dmapData_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- C5_dmapData_d0 assign process. --
    C5_dmapData_d0_assign_proc : process(tmp_i_reg_938, grp_dateport_upadteall_fu_416_C5_dmapData_d0, grp_dateport_update_C5_fu_452_C5_dmapData_d0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st32_fsm_31)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31)) then 
            C5_dmapData_d0 <= grp_dateport_update_C5_fu_452_C5_dmapData_d0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C5_dmapData_d0 <= grp_dateport_upadteall_fu_416_C5_dmapData_d0;
        else 
            C5_dmapData_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- C5_dmapData_we0 assign process. --
    C5_dmapData_we0_assign_proc : process(tmp_i_reg_938, grp_dateport_upadteall_fu_416_C5_dmapData_we0, grp_dateport_update_C5_fu_452_C5_dmapData_we0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st32_fsm_31)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31)) then 
            C5_dmapData_we0 <= grp_dateport_update_C5_fu_452_C5_dmapData_we0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C5_dmapData_we0 <= grp_dateport_upadteall_fu_416_C5_dmapData_we0;
        else 
            C5_dmapData_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- C5_mapData_address0 assign process. --
    C5_mapData_address0_assign_proc : process(tmp_i_reg_938, grp_dateport_upadteall_fu_416_C5_mapData_address0, grp_dateport_DS4_layer_fu_464_C5_mapData_address0, grp_dateport_C5_conv_fu_474_C5_mapData_address0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st30_fsm_29, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            C5_mapData_address0 <= grp_dateport_C5_conv_fu_474_C5_mapData_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29)) then 
            C5_mapData_address0 <= grp_dateport_DS4_layer_fu_464_C5_mapData_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C5_mapData_address0 <= grp_dateport_upadteall_fu_416_C5_mapData_address0;
        else 
            C5_mapData_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;

    C5_mapData_address1 <= grp_dateport_DS4_layer_fu_464_C5_mapData_address1;

    -- C5_mapData_ce0 assign process. --
    C5_mapData_ce0_assign_proc : process(tmp_i_reg_938, grp_dateport_upadteall_fu_416_C5_mapData_ce0, grp_dateport_DS4_layer_fu_464_C5_mapData_ce0, grp_dateport_C5_conv_fu_474_C5_mapData_ce0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st30_fsm_29, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            C5_mapData_ce0 <= grp_dateport_C5_conv_fu_474_C5_mapData_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29)) then 
            C5_mapData_ce0 <= grp_dateport_DS4_layer_fu_464_C5_mapData_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C5_mapData_ce0 <= grp_dateport_upadteall_fu_416_C5_mapData_ce0;
        else 
            C5_mapData_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- C5_mapData_ce1 assign process. --
    C5_mapData_ce1_assign_proc : process(grp_dateport_DS4_layer_fu_464_C5_mapData_ce1, ap_sig_cseq_ST_st30_fsm_29)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29)) then 
            C5_mapData_ce1 <= grp_dateport_DS4_layer_fu_464_C5_mapData_ce1;
        else 
            C5_mapData_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    C5_mapData_d0 <= grp_dateport_upadteall_fu_416_C5_mapData_d0;

    -- C5_mapData_we0 assign process. --
    C5_mapData_we0_assign_proc : process(tmp_i_reg_938, grp_dateport_upadteall_fu_416_C5_mapData_we0, ap_sig_cseq_ST_st40_fsm_39)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            C5_mapData_we0 <= grp_dateport_upadteall_fu_416_C5_mapData_we0;
        else 
            C5_mapData_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- C5_v_address0 assign process. --
    C5_v_address0_assign_proc : process(grp_dateport_C5_conv_fu_474_C5_v_address0, grp_dateport_DC5_layer_fu_488_C5_v_address0, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st28_fsm_27)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27)) then 
            C5_v_address0 <= grp_dateport_DC5_layer_fu_488_C5_v_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            C5_v_address0 <= grp_dateport_C5_conv_fu_474_C5_v_address0;
        else 
            C5_v_address0 <= "XXXXX";
        end if; 
    end process;


    -- C5_v_ce0 assign process. --
    C5_v_ce0_assign_proc : process(grp_dateport_C5_conv_fu_474_C5_v_ce0, grp_dateport_DC5_layer_fu_488_C5_v_ce0, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st28_fsm_27)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27)) then 
            C5_v_ce0 <= grp_dateport_DC5_layer_fu_488_C5_v_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            C5_v_ce0 <= grp_dateport_C5_conv_fu_474_C5_v_ce0;
        else 
            C5_v_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    C5_v_d0 <= grp_dateport_C5_conv_fu_474_C5_v_d0;

    -- C5_v_we0 assign process. --
    C5_v_we0_assign_proc : process(grp_dateport_C5_conv_fu_474_C5_v_we0, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            C5_v_we0 <= grp_dateport_C5_conv_fu_474_C5_v_we0;
        else 
            C5_v_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- C5_y_address0 assign process. --
    C5_y_address0_assign_proc : process(ap_sig_cseq_ST_st13_fsm_12, grp_dateport_O_layer_fu_328_C5_y_address0, grp_dateport_C5_conv_fu_474_C5_y_address0, grp_dateport_update_OUT_fu_518_C5_y_address0, ap_sig_cseq_ST_st30_fsm_29, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29)) then 
            C5_y_address0 <= grp_dateport_update_OUT_fu_518_C5_y_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            C5_y_address0 <= grp_dateport_C5_conv_fu_474_C5_y_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then 
            C5_y_address0 <= grp_dateport_O_layer_fu_328_C5_y_address0;
        else 
            C5_y_address0 <= "XXXXX";
        end if; 
    end process;


    -- C5_y_ce0 assign process. --
    C5_y_ce0_assign_proc : process(ap_sig_cseq_ST_st13_fsm_12, grp_dateport_O_layer_fu_328_C5_y_ce0, grp_dateport_C5_conv_fu_474_C5_y_ce0, grp_dateport_update_OUT_fu_518_C5_y_ce0, ap_sig_cseq_ST_st30_fsm_29, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29)) then 
            C5_y_ce0 <= grp_dateport_update_OUT_fu_518_C5_y_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            C5_y_ce0 <= grp_dateport_C5_conv_fu_474_C5_y_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then 
            C5_y_ce0 <= grp_dateport_O_layer_fu_328_C5_y_ce0;
        else 
            C5_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    C5_y_d0 <= grp_dateport_C5_conv_fu_474_C5_y_d0;

    -- C5_y_we0 assign process. --
    C5_y_we0_assign_proc : process(grp_dateport_C5_conv_fu_474_C5_y_we0, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            C5_y_we0 <= grp_dateport_C5_conv_fu_474_C5_y_we0;
        else 
            C5_y_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- S2_d_address0 assign process. --
    S2_d_address0_assign_proc : process(grp_dateport_DC1_layer_fu_342_S2_d_address0, grp_dateport_DS2_layer_fu_392_S2_d_address0, ap_sig_cseq_ST_st36_fsm_35, ap_sig_cseq_ST_st34_fsm_33)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33)) then 
            S2_d_address0 <= grp_dateport_DS2_layer_fu_392_S2_d_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35)) then 
            S2_d_address0 <= grp_dateport_DC1_layer_fu_342_S2_d_address0;
        else 
            S2_d_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- S2_d_ce0 assign process. --
    S2_d_ce0_assign_proc : process(grp_dateport_DC1_layer_fu_342_S2_d_ce0, grp_dateport_DS2_layer_fu_392_S2_d_ce0, ap_sig_cseq_ST_st36_fsm_35, ap_sig_cseq_ST_st34_fsm_33)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33)) then 
            S2_d_ce0 <= grp_dateport_DS2_layer_fu_392_S2_d_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35)) then 
            S2_d_ce0 <= grp_dateport_DC1_layer_fu_342_S2_d_ce0;
        else 
            S2_d_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    S2_d_d0 <= grp_dateport_DS2_layer_fu_392_S2_d_d0;

    -- S2_d_we0 assign process. --
    S2_d_we0_assign_proc : process(grp_dateport_DS2_layer_fu_392_S2_d_we0, ap_sig_cseq_ST_st34_fsm_33)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33)) then 
            S2_d_we0 <= grp_dateport_DS2_layer_fu_392_S2_d_we0;
        else 
            S2_d_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- S2_y_address0 assign process. --
    S2_y_address0_assign_proc : process(grp_dateport_update_C3_fu_366_S2_y_address0, grp_dateport_C3_conv_fu_378_S2_y_address0, grp_dateport_S2_pool_fu_502_S2_y_address0, ap_sig_cseq_ST_st36_fsm_35, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            S2_y_address0 <= grp_dateport_S2_pool_fu_502_S2_y_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            S2_y_address0 <= grp_dateport_C3_conv_fu_378_S2_y_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35)) then 
            S2_y_address0 <= grp_dateport_update_C3_fu_366_S2_y_address0;
        else 
            S2_y_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- S2_y_address1 assign process. --
    S2_y_address1_assign_proc : process(grp_dateport_update_C3_fu_366_S2_y_address1, grp_dateport_C3_conv_fu_378_S2_y_address1, ap_sig_cseq_ST_st36_fsm_35, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            S2_y_address1 <= grp_dateport_C3_conv_fu_378_S2_y_address1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35)) then 
            S2_y_address1 <= grp_dateport_update_C3_fu_366_S2_y_address1;
        else 
            S2_y_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- S2_y_ce0 assign process. --
    S2_y_ce0_assign_proc : process(grp_dateport_update_C3_fu_366_S2_y_ce0, grp_dateport_C3_conv_fu_378_S2_y_ce0, grp_dateport_S2_pool_fu_502_S2_y_ce0, ap_sig_cseq_ST_st36_fsm_35, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            S2_y_ce0 <= grp_dateport_S2_pool_fu_502_S2_y_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            S2_y_ce0 <= grp_dateport_C3_conv_fu_378_S2_y_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35)) then 
            S2_y_ce0 <= grp_dateport_update_C3_fu_366_S2_y_ce0;
        else 
            S2_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- S2_y_ce1 assign process. --
    S2_y_ce1_assign_proc : process(grp_dateport_update_C3_fu_366_S2_y_ce1, grp_dateport_C3_conv_fu_378_S2_y_ce1, ap_sig_cseq_ST_st36_fsm_35, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            S2_y_ce1 <= grp_dateport_C3_conv_fu_378_S2_y_ce1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35)) then 
            S2_y_ce1 <= grp_dateport_update_C3_fu_366_S2_y_ce1;
        else 
            S2_y_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    S2_y_d0 <= grp_dateport_S2_pool_fu_502_S2_y_d0;

    -- S2_y_we0 assign process. --
    S2_y_we0_assign_proc : process(grp_dateport_S2_pool_fu_502_S2_y_we0, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            S2_y_we0 <= grp_dateport_S2_pool_fu_502_S2_y_we0;
        else 
            S2_y_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- S4_d_address0 assign process. --
    S4_d_address0_assign_proc : process(grp_dateport_DC3_layer_fu_354_S4_d_address0, grp_dateport_DS4_layer_fu_464_S4_d_address0, ap_sig_cseq_ST_st32_fsm_31, ap_sig_cseq_ST_st30_fsm_29)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29)) then 
            S4_d_address0 <= grp_dateport_DS4_layer_fu_464_S4_d_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31)) then 
            S4_d_address0 <= grp_dateport_DC3_layer_fu_354_S4_d_address0;
        else 
            S4_d_address0 <= "XXXXXXXXX";
        end if; 
    end process;

    S4_d_address1 <= grp_dateport_DS4_layer_fu_464_S4_d_address1;

    -- S4_d_ce0 assign process. --
    S4_d_ce0_assign_proc : process(grp_dateport_DC3_layer_fu_354_S4_d_ce0, grp_dateport_DS4_layer_fu_464_S4_d_ce0, ap_sig_cseq_ST_st32_fsm_31, ap_sig_cseq_ST_st30_fsm_29)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29)) then 
            S4_d_ce0 <= grp_dateport_DS4_layer_fu_464_S4_d_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31)) then 
            S4_d_ce0 <= grp_dateport_DC3_layer_fu_354_S4_d_ce0;
        else 
            S4_d_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- S4_d_ce1 assign process. --
    S4_d_ce1_assign_proc : process(grp_dateport_DS4_layer_fu_464_S4_d_ce1, ap_sig_cseq_ST_st30_fsm_29)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29)) then 
            S4_d_ce1 <= grp_dateport_DS4_layer_fu_464_S4_d_ce1;
        else 
            S4_d_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    S4_d_d0 <= grp_dateport_DS4_layer_fu_464_S4_d_d0;
    S4_d_d1 <= grp_dateport_DS4_layer_fu_464_S4_d_d1;

    -- S4_d_we0 assign process. --
    S4_d_we0_assign_proc : process(grp_dateport_DS4_layer_fu_464_S4_d_we0, ap_sig_cseq_ST_st30_fsm_29)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29)) then 
            S4_d_we0 <= grp_dateport_DS4_layer_fu_464_S4_d_we0;
        else 
            S4_d_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- S4_d_we1 assign process. --
    S4_d_we1_assign_proc : process(grp_dateport_DS4_layer_fu_464_S4_d_we1, ap_sig_cseq_ST_st30_fsm_29)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29)) then 
            S4_d_we1 <= grp_dateport_DS4_layer_fu_464_S4_d_we1;
        else 
            S4_d_we1 <= ap_const_logic_0;
        end if; 
    end process;


    -- S4_y_address0 assign process. --
    S4_y_address0_assign_proc : process(grp_dateport_update_C5_fu_452_S4_y_address0, grp_dateport_C5_conv_fu_474_S4_y_address0, grp_dateport_S4_pool_fu_510_S4_y_address0, ap_sig_cseq_ST_st32_fsm_31, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st9_fsm_8)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            S4_y_address0 <= grp_dateport_S4_pool_fu_510_S4_y_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            S4_y_address0 <= grp_dateport_C5_conv_fu_474_S4_y_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31)) then 
            S4_y_address0 <= grp_dateport_update_C5_fu_452_S4_y_address0;
        else 
            S4_y_address0 <= "XXXXXXXXX";
        end if; 
    end process;

    S4_y_address1 <= grp_dateport_update_C5_fu_452_S4_y_address1;

    -- S4_y_ce0 assign process. --
    S4_y_ce0_assign_proc : process(grp_dateport_update_C5_fu_452_S4_y_ce0, grp_dateport_C5_conv_fu_474_S4_y_ce0, grp_dateport_S4_pool_fu_510_S4_y_ce0, ap_sig_cseq_ST_st32_fsm_31, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st9_fsm_8)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            S4_y_ce0 <= grp_dateport_S4_pool_fu_510_S4_y_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            S4_y_ce0 <= grp_dateport_C5_conv_fu_474_S4_y_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31)) then 
            S4_y_ce0 <= grp_dateport_update_C5_fu_452_S4_y_ce0;
        else 
            S4_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- S4_y_ce1 assign process. --
    S4_y_ce1_assign_proc : process(grp_dateport_update_C5_fu_452_S4_y_ce1, ap_sig_cseq_ST_st32_fsm_31)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31)) then 
            S4_y_ce1 <= grp_dateport_update_C5_fu_452_S4_y_ce1;
        else 
            S4_y_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    S4_y_d0 <= grp_dateport_S4_pool_fu_510_S4_y_d0;

    -- S4_y_we0 assign process. --
    S4_y_we0_assign_proc : process(grp_dateport_S4_pool_fu_510_S4_y_we0, ap_sig_cseq_ST_st9_fsm_8)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            S4_y_we0 <= grp_dateport_S4_pool_fu_510_S4_y_we0;
        else 
            S4_y_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_sig_cseq_ST_st49_fsm_48, ap_sig_bdd_1677)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st49_fsm_48) and not(ap_sig_bdd_1677))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_sig_cseq_ST_st49_fsm_48, ap_sig_bdd_1677)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st49_fsm_48) and not(ap_sig_bdd_1677))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_rst_n_inv assign process. --
    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    -- ap_sig_bdd_1184 assign process. --
    ap_sig_bdd_1184_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1184 <= (ap_const_lv1_1 = ap_CS_fsm(26 downto 26));
    end process;


    -- ap_sig_bdd_1194 assign process. --
    ap_sig_bdd_1194_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1194 <= (ap_const_lv1_1 = ap_CS_fsm(39 downto 39));
    end process;


    -- ap_sig_bdd_1213 assign process. --
    ap_sig_bdd_1213_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1213 <= (ap_const_lv1_1 = ap_CS_fsm(36 downto 36));
    end process;


    -- ap_sig_bdd_1222 assign process. --
    ap_sig_bdd_1222_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1222 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    -- ap_sig_bdd_1244 assign process. --
    ap_sig_bdd_1244_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1244 <= (ap_const_lv1_1 = ap_CS_fsm(34 downto 34));
    end process;


    -- ap_sig_bdd_1251 assign process. --
    ap_sig_bdd_1251_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1251 <= (ap_const_lv1_1 = ap_CS_fsm(35 downto 35));
    end process;


    -- ap_sig_bdd_1260 assign process. --
    ap_sig_bdd_1260_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1260 <= (ap_const_lv1_1 = ap_CS_fsm(30 downto 30));
    end process;


    -- ap_sig_bdd_1267 assign process. --
    ap_sig_bdd_1267_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1267 <= (ap_const_lv1_1 = ap_CS_fsm(31 downto 31));
    end process;


    -- ap_sig_bdd_1278 assign process. --
    ap_sig_bdd_1278_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1278 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    -- ap_sig_bdd_1294 assign process. --
    ap_sig_bdd_1294_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1294 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    -- ap_sig_bdd_1307 assign process. --
    ap_sig_bdd_1307_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1307 <= (ap_const_lv1_1 = ap_CS_fsm(32 downto 32));
    end process;


    -- ap_sig_bdd_1314 assign process. --
    ap_sig_bdd_1314_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1314 <= (ap_const_lv1_1 = ap_CS_fsm(33 downto 33));
    end process;


    -- ap_sig_bdd_1327 assign process. --
    ap_sig_bdd_1327_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1327 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_1336 assign process. --
    ap_sig_bdd_1336_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1336 <= (ap_const_lv1_1 = ap_CS_fsm(38 downto 38));
    end process;


    -- ap_sig_bdd_1348 assign process. --
    ap_sig_bdd_1348_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1348 <= (ap_const_lv1_1 = ap_CS_fsm(28 downto 28));
    end process;


    -- ap_sig_bdd_1355 assign process. --
    ap_sig_bdd_1355_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1355 <= (ap_const_lv1_1 = ap_CS_fsm(29 downto 29));
    end process;


    -- ap_sig_bdd_1364 assign process. --
    ap_sig_bdd_1364_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1364 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    -- ap_sig_bdd_1371 assign process. --
    ap_sig_bdd_1371_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1371 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    -- ap_sig_bdd_1382 assign process. --
    ap_sig_bdd_1382_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1382 <= (ap_const_lv1_1 = ap_CS_fsm(27 downto 27));
    end process;


    -- ap_sig_bdd_1391 assign process. --
    ap_sig_bdd_1391_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1391 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_bdd_1398 assign process. --
    ap_sig_bdd_1398_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1398 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    -- ap_sig_bdd_1407 assign process. --
    ap_sig_bdd_1407_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1407 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    -- ap_sig_bdd_1414 assign process. --
    ap_sig_bdd_1414_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1414 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    -- ap_sig_bdd_1428 assign process. --
    ap_sig_bdd_1428_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1428 <= (ap_const_lv1_1 = ap_CS_fsm(47 downto 47));
    end process;


    -- ap_sig_bdd_1461 assign process. --
    ap_sig_bdd_1461_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1461 <= (ap_const_lv1_1 = ap_CS_fsm(45 downto 45));
    end process;


    -- ap_sig_bdd_1475 assign process. --
    ap_sig_bdd_1475_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1475 <= (ap_const_lv1_1 = ap_CS_fsm(21 downto 21));
    end process;


    -- ap_sig_bdd_1672 assign process. --
    ap_sig_bdd_1672_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_1672 <= (ap_const_lv1_1 = ap_CS_fsm(48 downto 48));
    end process;


    -- ap_sig_bdd_1677 assign process. --
    ap_sig_bdd_1677_assign_proc : process(led_1_ack_in, signal_out_1_ack_in)
    begin
                ap_sig_bdd_1677 <= ((led_1_ack_in = ap_const_logic_0) or (signal_out_1_ack_in = ap_const_logic_0));
    end process;


    -- ap_sig_bdd_578 assign process. --
    ap_sig_bdd_578_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_578 <= (ap_const_lv1_1 = ap_CS_fsm(20 downto 20));
    end process;


    -- ap_sig_bdd_585 assign process. --
    ap_sig_bdd_585_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_585 <= (ap_const_lv1_1 = ap_CS_fsm(41 downto 41));
    end process;


    -- ap_sig_bdd_595 assign process. --
    ap_sig_bdd_595_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_595 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_616 assign process. --
    ap_sig_bdd_616_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_616 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    -- ap_sig_bdd_629 assign process. --
    ap_sig_bdd_629_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_629 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    -- ap_sig_bdd_642 assign process. --
    ap_sig_bdd_642_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_642 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    -- ap_sig_bdd_651 assign process. --
    ap_sig_bdd_651_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_651 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    -- ap_sig_bdd_660 assign process. --
    ap_sig_bdd_660_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_660 <= (ap_const_lv1_1 = ap_CS_fsm(19 downto 19));
    end process;


    -- ap_sig_bdd_673 assign process. --
    ap_sig_bdd_673_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_673 <= (ap_const_lv1_1 = ap_CS_fsm(25 downto 25));
    end process;


    -- ap_sig_bdd_682 assign process. --
    ap_sig_bdd_682_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_682 <= (ap_const_lv1_1 = ap_CS_fsm(37 downto 37));
    end process;


    -- ap_sig_bdd_697 assign process. --
    ap_sig_bdd_697_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_697 <= (ap_const_lv1_1 = ap_CS_fsm(40 downto 40));
    end process;


    -- ap_sig_bdd_713 assign process. --
    ap_sig_bdd_713_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_713 <= (ap_const_lv1_1 = ap_CS_fsm(42 downto 42));
    end process;


    -- ap_sig_bdd_722 assign process. --
    ap_sig_bdd_722_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_722 <= (ap_const_lv1_1 = ap_CS_fsm(43 downto 43));
    end process;


    -- ap_sig_bdd_733 assign process. --
    ap_sig_bdd_733_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_733 <= (ap_const_lv1_1 = ap_CS_fsm(44 downto 44));
    end process;


    -- ap_sig_bdd_90 assign process. --
    ap_sig_bdd_90_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_90 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_cseq_ST_st10_fsm_9 assign process. --
    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_bdd_1364)
    begin
        if (ap_sig_bdd_1364) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st11_fsm_10 assign process. --
    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_bdd_1371)
    begin
        if (ap_sig_bdd_1371) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st12_fsm_11 assign process. --
    ap_sig_cseq_ST_st12_fsm_11_assign_proc : process(ap_sig_bdd_1222)
    begin
        if (ap_sig_bdd_1222) then 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st13_fsm_12 assign process. --
    ap_sig_cseq_ST_st13_fsm_12_assign_proc : process(ap_sig_bdd_616)
    begin
        if (ap_sig_bdd_616) then 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st14_fsm_13 assign process. --
    ap_sig_cseq_ST_st14_fsm_13_assign_proc : process(ap_sig_bdd_629)
    begin
        if (ap_sig_bdd_629) then 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st15_fsm_14 assign process. --
    ap_sig_cseq_ST_st15_fsm_14_assign_proc : process(ap_sig_bdd_642)
    begin
        if (ap_sig_bdd_642) then 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st16_fsm_15 assign process. --
    ap_sig_cseq_ST_st16_fsm_15_assign_proc : process(ap_sig_bdd_651)
    begin
        if (ap_sig_bdd_651) then 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_90)
    begin
        if (ap_sig_bdd_90) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st20_fsm_19 assign process. --
    ap_sig_cseq_ST_st20_fsm_19_assign_proc : process(ap_sig_bdd_660)
    begin
        if (ap_sig_bdd_660) then 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st21_fsm_20 assign process. --
    ap_sig_cseq_ST_st21_fsm_20_assign_proc : process(ap_sig_bdd_578)
    begin
        if (ap_sig_bdd_578) then 
            ap_sig_cseq_ST_st21_fsm_20 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st21_fsm_20 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st22_fsm_21 assign process. --
    ap_sig_cseq_ST_st22_fsm_21_assign_proc : process(ap_sig_bdd_1475)
    begin
        if (ap_sig_bdd_1475) then 
            ap_sig_cseq_ST_st22_fsm_21 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st22_fsm_21 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st26_fsm_25 assign process. --
    ap_sig_cseq_ST_st26_fsm_25_assign_proc : process(ap_sig_bdd_673)
    begin
        if (ap_sig_bdd_673) then 
            ap_sig_cseq_ST_st26_fsm_25 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st26_fsm_25 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st27_fsm_26 assign process. --
    ap_sig_cseq_ST_st27_fsm_26_assign_proc : process(ap_sig_bdd_1184)
    begin
        if (ap_sig_bdd_1184) then 
            ap_sig_cseq_ST_st27_fsm_26 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st27_fsm_26 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st28_fsm_27 assign process. --
    ap_sig_cseq_ST_st28_fsm_27_assign_proc : process(ap_sig_bdd_1382)
    begin
        if (ap_sig_bdd_1382) then 
            ap_sig_cseq_ST_st28_fsm_27 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st28_fsm_27 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st29_fsm_28 assign process. --
    ap_sig_cseq_ST_st29_fsm_28_assign_proc : process(ap_sig_bdd_1348)
    begin
        if (ap_sig_bdd_1348) then 
            ap_sig_cseq_ST_st29_fsm_28 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st29_fsm_28 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_595)
    begin
        if (ap_sig_bdd_595) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st30_fsm_29 assign process. --
    ap_sig_cseq_ST_st30_fsm_29_assign_proc : process(ap_sig_bdd_1355)
    begin
        if (ap_sig_bdd_1355) then 
            ap_sig_cseq_ST_st30_fsm_29 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st30_fsm_29 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st31_fsm_30 assign process. --
    ap_sig_cseq_ST_st31_fsm_30_assign_proc : process(ap_sig_bdd_1260)
    begin
        if (ap_sig_bdd_1260) then 
            ap_sig_cseq_ST_st31_fsm_30 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st31_fsm_30 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st32_fsm_31 assign process. --
    ap_sig_cseq_ST_st32_fsm_31_assign_proc : process(ap_sig_bdd_1267)
    begin
        if (ap_sig_bdd_1267) then 
            ap_sig_cseq_ST_st32_fsm_31 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st32_fsm_31 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st33_fsm_32 assign process. --
    ap_sig_cseq_ST_st33_fsm_32_assign_proc : process(ap_sig_bdd_1307)
    begin
        if (ap_sig_bdd_1307) then 
            ap_sig_cseq_ST_st33_fsm_32 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st33_fsm_32 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st34_fsm_33 assign process. --
    ap_sig_cseq_ST_st34_fsm_33_assign_proc : process(ap_sig_bdd_1314)
    begin
        if (ap_sig_bdd_1314) then 
            ap_sig_cseq_ST_st34_fsm_33 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st34_fsm_33 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st35_fsm_34 assign process. --
    ap_sig_cseq_ST_st35_fsm_34_assign_proc : process(ap_sig_bdd_1244)
    begin
        if (ap_sig_bdd_1244) then 
            ap_sig_cseq_ST_st35_fsm_34 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st35_fsm_34 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st36_fsm_35 assign process. --
    ap_sig_cseq_ST_st36_fsm_35_assign_proc : process(ap_sig_bdd_1251)
    begin
        if (ap_sig_bdd_1251) then 
            ap_sig_cseq_ST_st36_fsm_35 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st36_fsm_35 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st37_fsm_36 assign process. --
    ap_sig_cseq_ST_st37_fsm_36_assign_proc : process(ap_sig_bdd_1213)
    begin
        if (ap_sig_bdd_1213) then 
            ap_sig_cseq_ST_st37_fsm_36 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st37_fsm_36 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st38_fsm_37 assign process. --
    ap_sig_cseq_ST_st38_fsm_37_assign_proc : process(ap_sig_bdd_682)
    begin
        if (ap_sig_bdd_682) then 
            ap_sig_cseq_ST_st38_fsm_37 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st38_fsm_37 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st39_fsm_38 assign process. --
    ap_sig_cseq_ST_st39_fsm_38_assign_proc : process(ap_sig_bdd_1336)
    begin
        if (ap_sig_bdd_1336) then 
            ap_sig_cseq_ST_st39_fsm_38 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st39_fsm_38 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st3_fsm_2 assign process. --
    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_bdd_1327)
    begin
        if (ap_sig_bdd_1327) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st40_fsm_39 assign process. --
    ap_sig_cseq_ST_st40_fsm_39_assign_proc : process(ap_sig_bdd_1194)
    begin
        if (ap_sig_bdd_1194) then 
            ap_sig_cseq_ST_st40_fsm_39 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st40_fsm_39 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st41_fsm_40 assign process. --
    ap_sig_cseq_ST_st41_fsm_40_assign_proc : process(ap_sig_bdd_697)
    begin
        if (ap_sig_bdd_697) then 
            ap_sig_cseq_ST_st41_fsm_40 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st41_fsm_40 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st42_fsm_41 assign process. --
    ap_sig_cseq_ST_st42_fsm_41_assign_proc : process(ap_sig_bdd_585)
    begin
        if (ap_sig_bdd_585) then 
            ap_sig_cseq_ST_st42_fsm_41 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st42_fsm_41 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st43_fsm_42 assign process. --
    ap_sig_cseq_ST_st43_fsm_42_assign_proc : process(ap_sig_bdd_713)
    begin
        if (ap_sig_bdd_713) then 
            ap_sig_cseq_ST_st43_fsm_42 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st43_fsm_42 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st44_fsm_43 assign process. --
    ap_sig_cseq_ST_st44_fsm_43_assign_proc : process(ap_sig_bdd_722)
    begin
        if (ap_sig_bdd_722) then 
            ap_sig_cseq_ST_st44_fsm_43 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st44_fsm_43 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st45_fsm_44 assign process. --
    ap_sig_cseq_ST_st45_fsm_44_assign_proc : process(ap_sig_bdd_733)
    begin
        if (ap_sig_bdd_733) then 
            ap_sig_cseq_ST_st45_fsm_44 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st45_fsm_44 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st46_fsm_45 assign process. --
    ap_sig_cseq_ST_st46_fsm_45_assign_proc : process(ap_sig_bdd_1461)
    begin
        if (ap_sig_bdd_1461) then 
            ap_sig_cseq_ST_st46_fsm_45 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st46_fsm_45 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st48_fsm_47 assign process. --
    ap_sig_cseq_ST_st48_fsm_47_assign_proc : process(ap_sig_bdd_1428)
    begin
        if (ap_sig_bdd_1428) then 
            ap_sig_cseq_ST_st48_fsm_47 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st48_fsm_47 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st49_fsm_48 assign process. --
    ap_sig_cseq_ST_st49_fsm_48_assign_proc : process(ap_sig_bdd_1672)
    begin
        if (ap_sig_bdd_1672) then 
            ap_sig_cseq_ST_st49_fsm_48 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st49_fsm_48 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st4_fsm_3 assign process. --
    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_bdd_1391)
    begin
        if (ap_sig_bdd_1391) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st5_fsm_4 assign process. --
    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_bdd_1398)
    begin
        if (ap_sig_bdd_1398) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st6_fsm_5 assign process. --
    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_bdd_1278)
    begin
        if (ap_sig_bdd_1278) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st7_fsm_6 assign process. --
    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_bdd_1294)
    begin
        if (ap_sig_bdd_1294) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st8_fsm_7 assign process. --
    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_bdd_1407)
    begin
        if (ap_sig_bdd_1407) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st9_fsm_8 assign process. --
    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_bdd_1414)
    begin
        if (ap_sig_bdd_1414) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;


    -- date_0_ack_out assign process. --
    date_0_ack_out_assign_proc : process(ap_sig_cseq_ST_st49_fsm_48, ap_sig_bdd_1677)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st49_fsm_48) and not(ap_sig_bdd_1677))) then 
            date_0_ack_out <= ap_const_logic_1;
        else 
            date_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    dateport_AXILiteS_s_axi_U_ap_dummy_ce <= ap_const_logic_1;
    exitcond_i_fu_690_p2 <= "1" when (offset_reg_293 = ap_const_lv4_A) else "0";
    exitcond_i_i_fu_599_p2 <= "1" when (i_i_i_reg_269 = ap_const_lv4_A) else "0";
    grp_dateport_C1_conv_fu_402_C1_bias_q0 <= C1_bias_q0;
    grp_dateport_C1_conv_fu_402_C1_mapData_q0 <= C1_mapData_q0;
    grp_dateport_C1_conv_fu_402_C1_mapData_q1 <= C1_mapData_q1;
    grp_dateport_C1_conv_fu_402_C1_v_q0 <= C1_v_q0;
    grp_dateport_C1_conv_fu_402_ap_start <= grp_dateport_C1_conv_fu_402_ap_start_ap_start_reg;
    grp_dateport_C1_conv_fu_402_inputimg_q0 <= input_img_q0;
    grp_dateport_C1_conv_fu_402_inputimg_q1 <= input_img_q1;
    grp_dateport_C3_conv_fu_378_C3_bias_q0 <= C3_bias_q0;
    grp_dateport_C3_conv_fu_378_C3_mapData_q0 <= C3_mapData_q0;
    grp_dateport_C3_conv_fu_378_C3_mapData_q1 <= C3_mapData_q1;
    grp_dateport_C3_conv_fu_378_S2_y_q0 <= S2_y_q0;
    grp_dateport_C3_conv_fu_378_S2_y_q1 <= S2_y_q1;
    grp_dateport_C3_conv_fu_378_ap_start <= grp_dateport_C3_conv_fu_378_ap_start_ap_start_reg;
    grp_dateport_C5_conv_fu_474_C5_bias_q0 <= C5_bias_q0;
    grp_dateport_C5_conv_fu_474_C5_mapData_q0 <= C5_mapData_q0;
    grp_dateport_C5_conv_fu_474_C5_v_q0 <= C5_v_q0;
    grp_dateport_C5_conv_fu_474_S4_y_q0 <= S4_y_q0;
    grp_dateport_C5_conv_fu_474_ap_start <= grp_dateport_C5_conv_fu_474_ap_start_ap_start_reg;
    grp_dateport_DC1_layer_fu_342_C1_bias_q0 <= C1_bias_q0;
    grp_dateport_DC1_layer_fu_342_C1_v_q0 <= C1_v_q0;
    grp_dateport_DC1_layer_fu_342_C1_v_q1 <= C1_v_q1;
    grp_dateport_DC1_layer_fu_342_S2_d_q0 <= S2_d_q0;
    grp_dateport_DC1_layer_fu_342_ap_start <= grp_dateport_DC1_layer_fu_342_ap_start_ap_start_reg;
    grp_dateport_DC3_layer_fu_354_C3_bias_q0 <= C3_bias_q0;
    grp_dateport_DC3_layer_fu_354_C3_y_q0 <= C3_y_q0;
    grp_dateport_DC3_layer_fu_354_C3_y_q1 <= C3_y_q1;
    grp_dateport_DC3_layer_fu_354_S4_d_q0 <= S4_d_q0;
    grp_dateport_DC3_layer_fu_354_ap_start <= grp_dateport_DC3_layer_fu_354_ap_start_ap_start_reg;
    grp_dateport_DC5_layer_fu_488_C5_bias_q0 <= C5_bias_q0;
    grp_dateport_DC5_layer_fu_488_C5_d_q0 <= C5_d_q0;
    grp_dateport_DC5_layer_fu_488_C5_v_q0 <= C5_v_q0;
    grp_dateport_DC5_layer_fu_488_ap_start <= grp_dateport_DC5_layer_fu_488_ap_start_ap_start_reg;
    grp_dateport_DC5_layer_fu_488_output_d_q0 <= output_d_q0;
    grp_dateport_DC5_layer_fu_488_output_wei_q0 <= output_wei_q0;
    grp_dateport_DS2_layer_fu_392_C3_d_q0 <= C3_d_q0;
    grp_dateport_DS2_layer_fu_392_C3_mapData_q0 <= C3_mapData_q0;
    grp_dateport_DS2_layer_fu_392_C3_mapData_q1 <= C3_mapData_q1;
    grp_dateport_DS2_layer_fu_392_S2_d_q0 <= S2_d_q0;
    grp_dateport_DS2_layer_fu_392_ap_start <= grp_dateport_DS2_layer_fu_392_ap_start_ap_start_reg;
    grp_dateport_DS4_layer_fu_464_C5_d_q0 <= C5_d_q0;
    grp_dateport_DS4_layer_fu_464_C5_mapData_q0 <= C5_mapData_q0;
    grp_dateport_DS4_layer_fu_464_C5_mapData_q1 <= C5_mapData_q1;
    grp_dateport_DS4_layer_fu_464_S4_d_q0 <= S4_d_q0;
    grp_dateport_DS4_layer_fu_464_S4_d_q1 <= S4_d_q1;
    grp_dateport_DS4_layer_fu_464_ap_start <= grp_dateport_DS4_layer_fu_464_ap_start_ap_start_reg;
    grp_dateport_O_layer_fu_328_C5_y_q0 <= C5_y_q0;
    grp_dateport_O_layer_fu_328_ap_start <= grp_dateport_O_layer_fu_328_ap_start_ap_start_reg;
    grp_dateport_O_layer_fu_328_output_bias_q0 <= output_bias_q0;
    grp_dateport_O_layer_fu_328_output_wei_q0 <= output_wei_q0;
    grp_dateport_S2_pool_fu_502_C1_y_q0 <= C1_y_q0;
    grp_dateport_S2_pool_fu_502_C1_y_q1 <= C1_y_q1;
    grp_dateport_S2_pool_fu_502_ap_start <= grp_dateport_S2_pool_fu_502_ap_start_ap_start_reg;
    grp_dateport_S4_pool_fu_510_C3_y_q0 <= C3_y_q0;
    grp_dateport_S4_pool_fu_510_C3_y_q1 <= C3_y_q1;
    grp_dateport_S4_pool_fu_510_ap_start <= grp_dateport_S4_pool_fu_510_ap_start_ap_start_reg;
    grp_dateport_upadteall_fu_416_C1_bias_q0 <= C1_bias_q0;
    grp_dateport_upadteall_fu_416_C1_dbias_q0 <= C1_dbias_q0;
    grp_dateport_upadteall_fu_416_C1_dmapData_q0 <= C1_dmapData_q0;
    grp_dateport_upadteall_fu_416_C1_mapData_q0 <= C1_mapData_q0;
    grp_dateport_upadteall_fu_416_C3_bias_q0 <= C3_bias_q0;
    grp_dateport_upadteall_fu_416_C3_dbias_q0 <= C3_dbias_q0;
    grp_dateport_upadteall_fu_416_C3_dmapData_q0 <= C3_dmapData_q0;
    grp_dateport_upadteall_fu_416_C3_mapData_q0 <= C3_mapData_q0;
    grp_dateport_upadteall_fu_416_C5_bias_q0 <= C5_bias_q0;
    grp_dateport_upadteall_fu_416_C5_dbias_q0 <= C5_dbias_q0;
    grp_dateport_upadteall_fu_416_C5_dmapData_q0 <= C5_dmapData_q0;
    grp_dateport_upadteall_fu_416_C5_mapData_q0 <= C5_mapData_q0;
    grp_dateport_upadteall_fu_416_ap_start <= grp_dateport_upadteall_fu_416_ap_start_ap_start_reg;
    grp_dateport_upadteall_fu_416_output_bias_q0 <= output_bias_q0;
    grp_dateport_upadteall_fu_416_output_dbias_q0 <= output_dbias_q0;
    grp_dateport_upadteall_fu_416_output_dwei_q0 <= output_dwei_q0;
    grp_dateport_upadteall_fu_416_output_wei_q0 <= output_wei_q0;
    grp_dateport_update_C1_fu_316_C1_d_q0 <= C1_d_q0;
    grp_dateport_update_C1_fu_316_C1_d_q1 <= C1_d_q1;
    grp_dateport_update_C1_fu_316_C1_dbias_q0 <= C1_dbias_q0;
    grp_dateport_update_C1_fu_316_C1_dmapData_q0 <= C1_dmapData_q0;
    grp_dateport_update_C1_fu_316_ap_start <= grp_dateport_update_C1_fu_316_ap_start_ap_start_reg;
    grp_dateport_update_C1_fu_316_inputimg_q0 <= input_img_q0;
    grp_dateport_update_C1_fu_316_inputimg_q1 <= input_img_q1;
    grp_dateport_update_C3_fu_366_C3_d_q0 <= C3_d_q0;
    grp_dateport_update_C3_fu_366_C3_d_q1 <= C3_d_q1;
    grp_dateport_update_C3_fu_366_C3_dbias_q0 <= C3_dbias_q0;
    grp_dateport_update_C3_fu_366_C3_dmapData_q0 <= C3_dmapData_q0;
    grp_dateport_update_C3_fu_366_S2_y_q0 <= S2_y_q0;
    grp_dateport_update_C3_fu_366_S2_y_q1 <= S2_y_q1;
    grp_dateport_update_C3_fu_366_ap_start <= grp_dateport_update_C3_fu_366_ap_start_ap_start_reg;
    grp_dateport_update_C5_fu_452_C5_d_q0 <= C5_d_q0;
    grp_dateport_update_C5_fu_452_C5_dbias_q0 <= C5_dbias_q0;
    grp_dateport_update_C5_fu_452_C5_dmapData_q0 <= C5_dmapData_q0;
    grp_dateport_update_C5_fu_452_S4_y_q0 <= S4_y_q0;
    grp_dateport_update_C5_fu_452_S4_y_q1 <= S4_y_q1;
    grp_dateport_update_C5_fu_452_ap_start <= grp_dateport_update_C5_fu_452_ap_start_ap_start_reg;
    grp_dateport_update_OUT_fu_518_C5_y_q0 <= C5_y_q0;
    grp_dateport_update_OUT_fu_518_ap_start <= grp_dateport_update_OUT_fu_518_ap_start_ap_start_reg;
    grp_dateport_update_OUT_fu_518_output_d_q0 <= output_d_q0;
    grp_dateport_update_OUT_fu_518_output_dbias_q0 <= output_dbias_q0;
    grp_dateport_update_OUT_fu_518_output_dwei_q0 <= output_dwei_q0;
    grp_fu_530_ce <= ap_const_logic_1;
    grp_fu_530_p0 <= reg_547;
    grp_fu_530_p1 <= tmp_80_i_i_reg_922;
    grp_fu_534_ce <= ap_const_logic_1;
    grp_fu_534_p0 <= std_logic_vector(resize(unsigned(resid_load_reg_902),32));
    h_1_fu_807_p3 <= 
        reg_547 when (tmp_17_fu_802_p2(0) = '1') else 
        h_i_reg_281;
    h_i_to_int_fu_742_p1 <= h_i_reg_281;
    i_fu_605_p2 <= std_logic_vector(unsigned(i_i_i_reg_269) + unsigned(ap_const_lv4_1));

    -- input_img_address0 assign process. --
    input_img_address0_assign_proc : process(ap_sig_cseq_ST_st38_fsm_37, grp_dateport_update_C1_fu_316_inputimg_address0, grp_dateport_C1_conv_fu_402_inputimg_address0, ap_sig_cseq_ST_st3_fsm_2, tmp_4_fu_830_p1, ap_sig_cseq_ST_st48_fsm_47)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st48_fsm_47)) then 
            input_img_address0 <= tmp_4_fu_830_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            input_img_address0 <= grp_dateport_C1_conv_fu_402_inputimg_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st38_fsm_37)) then 
            input_img_address0 <= grp_dateport_update_C1_fu_316_inputimg_address0;
        else 
            input_img_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- input_img_address1 assign process. --
    input_img_address1_assign_proc : process(ap_sig_cseq_ST_st38_fsm_37, grp_dateport_update_C1_fu_316_inputimg_address1, grp_dateport_C1_conv_fu_402_inputimg_address1, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            input_img_address1 <= grp_dateport_C1_conv_fu_402_inputimg_address1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st38_fsm_37)) then 
            input_img_address1 <= grp_dateport_update_C1_fu_316_inputimg_address1;
        else 
            input_img_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- input_img_ce0 assign process. --
    input_img_ce0_assign_proc : process(ap_sig_cseq_ST_st38_fsm_37, grp_dateport_update_C1_fu_316_inputimg_ce0, grp_dateport_C1_conv_fu_402_inputimg_ce0, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st48_fsm_47)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st48_fsm_47)) then 
            input_img_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            input_img_ce0 <= grp_dateport_C1_conv_fu_402_inputimg_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st38_fsm_37)) then 
            input_img_ce0 <= grp_dateport_update_C1_fu_316_inputimg_ce0;
        else 
            input_img_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- input_img_ce1 assign process. --
    input_img_ce1_assign_proc : process(ap_sig_cseq_ST_st38_fsm_37, grp_dateport_update_C1_fu_316_inputimg_ce1, grp_dateport_C1_conv_fu_402_inputimg_ce1, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            input_img_ce1 <= grp_dateport_C1_conv_fu_402_inputimg_ce1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st38_fsm_37)) then 
            input_img_ce1 <= grp_dateport_update_C1_fu_316_inputimg_ce1;
        else 
            input_img_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    input_img_d0 <= date_read_reg_861;

    -- input_img_we0 assign process. --
    input_img_we0_assign_proc : process(ap_sig_cseq_ST_st48_fsm_47)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st48_fsm_47))) then 
            input_img_we0 <= ap_const_logic_1;
        else 
            input_img_we0 <= ap_const_logic_0;
        end if; 
    end process;

    j_fu_696_p2 <= std_logic_vector(unsigned(offset_reg_293) + unsigned(ap_const_lv4_1));
    led <= led_1_data_reg;

    -- led_1_ack_in assign process. --
    led_1_ack_in_assign_proc : process(led_1_vld_reg)
    begin
        if (((ap_const_logic_0 = led_1_vld_reg) or ((ap_const_logic_1 = led_1_vld_reg) and (ap_const_logic_1 = ap_const_logic_1)))) then 
            led_1_ack_in <= ap_const_logic_1;
        else 
            led_1_ack_in <= ap_const_logic_0;
        end if; 
    end process;


    -- led_1_vld_in assign process. --
    led_1_vld_in_assign_proc : process(ap_sig_cseq_ST_st45_fsm_44)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st45_fsm_44)) then 
            led_1_vld_in <= ap_const_logic_1;
        else 
            led_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    led_ap_vld <= led_1_vld_reg;
    m_to_int_fu_724_p1 <= reg_547;
    notlhs5_fu_778_p2 <= "0" when (tmp_11_fu_746_p4 = ap_const_lv8_FF) else "1";
    notlhs_fu_760_p2 <= "0" when (tmp_fu_728_p4 = ap_const_lv8_FF) else "1";
    notrhs6_fu_784_p2 <= "1" when (tmp_22_fu_756_p1 = ap_const_lv23_0) else "0";
    notrhs_fu_766_p2 <= "1" when (tmp_21_fu_738_p1 = ap_const_lv23_0) else "0";
    offset_1_fu_815_p3 <= 
        offset_cast1_reg_942 when (tmp_17_fu_802_p2(0) = '1') else 
        offset_i_reg_304;
    offset_cast1_fu_686_p1 <= std_logic_vector(resize(unsigned(offset_reg_293),32));

    -- output_bias_address0 assign process. --
    output_bias_address0_assign_proc : process(ap_sig_cseq_ST_st13_fsm_12, tmp_i_reg_938, grp_dateport_O_layer_fu_328_output_bias_address0, grp_dateport_upadteall_fu_416_output_bias_address0, ap_sig_cseq_ST_st40_fsm_39)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            output_bias_address0 <= grp_dateport_upadteall_fu_416_output_bias_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then 
            output_bias_address0 <= grp_dateport_O_layer_fu_328_output_bias_address0;
        else 
            output_bias_address0 <= "XXXX";
        end if; 
    end process;


    -- output_bias_ce0 assign process. --
    output_bias_ce0_assign_proc : process(ap_sig_cseq_ST_st13_fsm_12, tmp_i_reg_938, grp_dateport_O_layer_fu_328_output_bias_ce0, grp_dateport_upadteall_fu_416_output_bias_ce0, ap_sig_cseq_ST_st40_fsm_39)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            output_bias_ce0 <= grp_dateport_upadteall_fu_416_output_bias_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then 
            output_bias_ce0 <= grp_dateport_O_layer_fu_328_output_bias_ce0;
        else 
            output_bias_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_bias_d0 <= grp_dateport_upadteall_fu_416_output_bias_d0;

    -- output_bias_we0 assign process. --
    output_bias_we0_assign_proc : process(tmp_i_reg_938, grp_dateport_upadteall_fu_416_output_bias_we0, ap_sig_cseq_ST_st40_fsm_39)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            output_bias_we0 <= grp_dateport_upadteall_fu_416_output_bias_we0;
        else 
            output_bias_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- output_d_address0 assign process. --
    output_d_address0_assign_proc : process(tmp_i_i_reg_912, grp_dateport_DC5_layer_fu_488_output_d_address0, grp_dateport_update_OUT_fu_518_output_d_address0, ap_sig_cseq_ST_st27_fsm_26, ap_sig_cseq_ST_st30_fsm_29, ap_sig_cseq_ST_st28_fsm_27)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st27_fsm_26)) then 
            output_d_address0 <= tmp_i_i_reg_912(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29)) then 
            output_d_address0 <= grp_dateport_update_OUT_fu_518_output_d_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27)) then 
            output_d_address0 <= grp_dateport_DC5_layer_fu_488_output_d_address0;
        else 
            output_d_address0 <= "XXXX";
        end if; 
    end process;


    -- output_d_ce0 assign process. --
    output_d_ce0_assign_proc : process(grp_dateport_DC5_layer_fu_488_output_d_ce0, grp_dateport_update_OUT_fu_518_output_d_ce0, ap_sig_cseq_ST_st27_fsm_26, ap_sig_cseq_ST_st30_fsm_29, ap_sig_cseq_ST_st28_fsm_27)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st27_fsm_26)) then 
            output_d_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29)) then 
            output_d_ce0 <= grp_dateport_update_OUT_fu_518_output_d_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27)) then 
            output_d_ce0 <= grp_dateport_DC5_layer_fu_488_output_d_ce0;
        else 
            output_d_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_d_d0 <= tmp_81_i_i_reg_927;

    -- output_d_we0 assign process. --
    output_d_we0_assign_proc : process(ap_sig_cseq_ST_st27_fsm_26)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st27_fsm_26))) then 
            output_d_we0 <= ap_const_logic_1;
        else 
            output_d_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- output_dbias_address0 assign process. --
    output_dbias_address0_assign_proc : process(tmp_i_reg_938, grp_dateport_upadteall_fu_416_output_dbias_address0, grp_dateport_update_OUT_fu_518_output_dbias_address0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st30_fsm_29)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29)) then 
            output_dbias_address0 <= grp_dateport_update_OUT_fu_518_output_dbias_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            output_dbias_address0 <= grp_dateport_upadteall_fu_416_output_dbias_address0;
        else 
            output_dbias_address0 <= "XXXX";
        end if; 
    end process;


    -- output_dbias_ce0 assign process. --
    output_dbias_ce0_assign_proc : process(tmp_i_reg_938, grp_dateport_upadteall_fu_416_output_dbias_ce0, grp_dateport_update_OUT_fu_518_output_dbias_ce0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st30_fsm_29)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29)) then 
            output_dbias_ce0 <= grp_dateport_update_OUT_fu_518_output_dbias_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            output_dbias_ce0 <= grp_dateport_upadteall_fu_416_output_dbias_ce0;
        else 
            output_dbias_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- output_dbias_d0 assign process. --
    output_dbias_d0_assign_proc : process(tmp_i_reg_938, grp_dateport_upadteall_fu_416_output_dbias_d0, grp_dateport_update_OUT_fu_518_output_dbias_d0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st30_fsm_29)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29)) then 
            output_dbias_d0 <= grp_dateport_update_OUT_fu_518_output_dbias_d0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            output_dbias_d0 <= grp_dateport_upadteall_fu_416_output_dbias_d0;
        else 
            output_dbias_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- output_dbias_we0 assign process. --
    output_dbias_we0_assign_proc : process(tmp_i_reg_938, grp_dateport_upadteall_fu_416_output_dbias_we0, grp_dateport_update_OUT_fu_518_output_dbias_we0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st30_fsm_29)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29)) then 
            output_dbias_we0 <= grp_dateport_update_OUT_fu_518_output_dbias_we0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            output_dbias_we0 <= grp_dateport_upadteall_fu_416_output_dbias_we0;
        else 
            output_dbias_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- output_dwei_address0 assign process. --
    output_dwei_address0_assign_proc : process(tmp_i_reg_938, grp_dateport_upadteall_fu_416_output_dwei_address0, grp_dateport_update_OUT_fu_518_output_dwei_address0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st30_fsm_29)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29)) then 
            output_dwei_address0 <= grp_dateport_update_OUT_fu_518_output_dwei_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            output_dwei_address0 <= grp_dateport_upadteall_fu_416_output_dwei_address0;
        else 
            output_dwei_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    -- output_dwei_ce0 assign process. --
    output_dwei_ce0_assign_proc : process(tmp_i_reg_938, grp_dateport_upadteall_fu_416_output_dwei_ce0, grp_dateport_update_OUT_fu_518_output_dwei_ce0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st30_fsm_29)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29)) then 
            output_dwei_ce0 <= grp_dateport_update_OUT_fu_518_output_dwei_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            output_dwei_ce0 <= grp_dateport_upadteall_fu_416_output_dwei_ce0;
        else 
            output_dwei_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- output_dwei_d0 assign process. --
    output_dwei_d0_assign_proc : process(tmp_i_reg_938, grp_dateport_upadteall_fu_416_output_dwei_d0, grp_dateport_update_OUT_fu_518_output_dwei_d0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st30_fsm_29)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29)) then 
            output_dwei_d0 <= grp_dateport_update_OUT_fu_518_output_dwei_d0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            output_dwei_d0 <= grp_dateport_upadteall_fu_416_output_dwei_d0;
        else 
            output_dwei_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- output_dwei_we0 assign process. --
    output_dwei_we0_assign_proc : process(tmp_i_reg_938, grp_dateport_upadteall_fu_416_output_dwei_we0, grp_dateport_update_OUT_fu_518_output_dwei_we0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st30_fsm_29)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29)) then 
            output_dwei_we0 <= grp_dateport_update_OUT_fu_518_output_dwei_we0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            output_dwei_we0 <= grp_dateport_upadteall_fu_416_output_dwei_we0;
        else 
            output_dwei_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- output_wei_address0 assign process. --
    output_wei_address0_assign_proc : process(ap_sig_cseq_ST_st13_fsm_12, tmp_i_reg_938, grp_dateport_O_layer_fu_328_output_wei_address0, grp_dateport_upadteall_fu_416_output_wei_address0, grp_dateport_DC5_layer_fu_488_output_wei_address0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st28_fsm_27)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27)) then 
            output_wei_address0 <= grp_dateport_DC5_layer_fu_488_output_wei_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            output_wei_address0 <= grp_dateport_upadteall_fu_416_output_wei_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then 
            output_wei_address0 <= grp_dateport_O_layer_fu_328_output_wei_address0;
        else 
            output_wei_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    -- output_wei_ce0 assign process. --
    output_wei_ce0_assign_proc : process(ap_sig_cseq_ST_st13_fsm_12, tmp_i_reg_938, grp_dateport_O_layer_fu_328_output_wei_ce0, grp_dateport_upadteall_fu_416_output_wei_ce0, grp_dateport_DC5_layer_fu_488_output_wei_ce0, ap_sig_cseq_ST_st40_fsm_39, ap_sig_cseq_ST_st28_fsm_27)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27)) then 
            output_wei_ce0 <= grp_dateport_DC5_layer_fu_488_output_wei_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            output_wei_ce0 <= grp_dateport_upadteall_fu_416_output_wei_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then 
            output_wei_ce0 <= grp_dateport_O_layer_fu_328_output_wei_ce0;
        else 
            output_wei_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_wei_d0 <= grp_dateport_upadteall_fu_416_output_wei_d0;

    -- output_wei_we0 assign process. --
    output_wei_we0_assign_proc : process(tmp_i_reg_938, grp_dateport_upadteall_fu_416_output_wei_we0, ap_sig_cseq_ST_st40_fsm_39)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39) and not((ap_const_lv1_0 = tmp_i_reg_938)))) then 
            output_wei_we0 <= grp_dateport_upadteall_fu_416_output_wei_we0;
        else 
            output_wei_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- output_y_address0 assign process. --
    output_y_address0_assign_proc : process(ap_sig_cseq_ST_st13_fsm_12, tmp_i_i_fu_629_p1, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st41_fsm_40, grp_dateport_O_layer_fu_328_output_y_address0, tmp_i1_fu_702_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st41_fsm_40)) then 
            output_y_address0 <= tmp_i1_fu_702_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            output_y_address0 <= tmp_i_i_fu_629_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then 
            output_y_address0 <= grp_dateport_O_layer_fu_328_output_y_address0;
        else 
            output_y_address0 <= "XXXX";
        end if; 
    end process;


    -- output_y_ce0 assign process. --
    output_y_ce0_assign_proc : process(ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st20_fsm_19, ap_sig_cseq_ST_st41_fsm_40, grp_dateport_O_layer_fu_328_output_y_ce0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) or (ap_const_logic_1 = ap_sig_cseq_ST_st41_fsm_40))) then 
            output_y_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then 
            output_y_ce0 <= grp_dateport_O_layer_fu_328_output_y_ce0;
        else 
            output_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_y_d0 <= grp_dateport_O_layer_fu_328_output_y_d0;

    -- output_y_we0 assign process. --
    output_y_we0_assign_proc : process(ap_sig_cseq_ST_st13_fsm_12, grp_dateport_O_layer_fu_328_output_y_we0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then 
            output_y_we0 <= grp_dateport_O_layer_fu_328_output_y_we0;
        else 
            output_y_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_tmp_7_fu_847_p3 <= 
        ap_const_lv32_0 when (tmp_8_fu_841_p2(0) = '1') else 
        tmp_7_fu_835_p2;
    resid_addr3_fu_593_p2 <= std_logic_vector(unsigned(tmp_6_fu_588_p2) + unsigned(tmp_5_fu_583_p2));
    resid_addr4_fu_615_p2 <= std_logic_vector(unsigned(resid_addr3_reg_884) + unsigned(tmp_i_i_trn_fu_611_p1));
    resid_address0 <= tmp_18_fu_620_p1(7 - 1 downto 0);

    -- resid_ce0 assign process. --
    resid_ce0_assign_proc : process(ap_sig_cseq_ST_st14_fsm_13)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            resid_ce0 <= ap_const_logic_1;
        else 
            resid_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    signal_out <= signal_out_1_data_reg;

    -- signal_out_1_ack_in assign process. --
    signal_out_1_ack_in_assign_proc : process(signal_out_1_vld_reg)
    begin
        if (((ap_const_logic_0 = signal_out_1_vld_reg) or ((ap_const_logic_1 = signal_out_1_vld_reg) and (ap_const_logic_1 = ap_const_logic_1)))) then 
            signal_out_1_ack_in <= ap_const_logic_1;
        else 
            signal_out_1_ack_in <= ap_const_logic_0;
        end if; 
    end process;

    signal_out_1_data_in <= ap_const_lv8_2;

    -- signal_out_1_vld_in assign process. --
    signal_out_1_vld_in_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, tmp_1_fu_553_p2, ap_sig_cseq_ST_st46_fsm_45)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((tmp_1_fu_553_p2 = ap_const_lv1_0))) or (ap_const_logic_1 = ap_sig_cseq_ST_st46_fsm_45))) then 
            signal_out_1_vld_in <= ap_const_logic_1;
        else 
            signal_out_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    signal_out_ap_vld <= signal_out_1_vld_reg;

    -- signal_r_0_ack_out assign process. --
    signal_r_0_ack_out_assign_proc : process(ap_sig_cseq_ST_st49_fsm_48, ap_sig_bdd_1677)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st49_fsm_48) and not(ap_sig_bdd_1677))) then 
            signal_r_0_ack_out <= ap_const_logic_1;
        else 
            signal_r_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_fu_638_p1 <= renew(6 - 1 downto 0);
    tmp_11_fu_746_p4 <= h_i_to_int_fu_742_p1(30 downto 23);
    tmp_11_i_cast_fu_676_p1 <= std_logic_vector(resize(unsigned(tmp_11_i_fu_668_p3),8));
    tmp_11_i_fu_668_p3 <= 
        tmp_i_9_fu_652_p2 when (tmp_19_fu_657_p2(0) = '1') else 
        tmp_20_fu_663_p2;
    tmp_12_fu_642_p1 <= renew(7 - 1 downto 0);
    tmp_12_i_fu_712_p2 <= std_logic_vector(unsigned(righht_i) + unsigned(ap_const_lv16_1));
    tmp_13_fu_772_p2 <= (notrhs_fu_766_p2 or notlhs_fu_760_p2);
    tmp_14_fu_790_p2 <= (notrhs6_fu_784_p2 or notlhs5_fu_778_p2);
    tmp_15_fu_796_p2 <= (tmp_13_fu_772_p2 and tmp_14_fu_790_p2);
    tmp_16_fu_537_opcode <= ap_const_lv5_2;
    tmp_16_fu_537_p0 <= reg_547;
    tmp_16_fu_537_p1 <= h_i_reg_281;
    tmp_17_fu_802_p2 <= (tmp_15_fu_796_p2 and tmp_16_reg_963);
        tmp_18_fu_620_p1 <= std_logic_vector(resize(signed(resid_addr4_fu_615_p2),64));

    tmp_19_fu_657_p2 <= "1" when (unsigned(tmp_i_9_fu_652_p2) < unsigned(ap_const_lv6_32)) else "0";
    tmp_1_fu_553_p2 <= "1" when (signal_r_0_data_reg = ap_const_lv8_3) else "0";
    tmp_20_fu_663_p2 <= std_logic_vector(unsigned(tmp_10_reg_932) + unsigned(ap_const_lv6_F));
    tmp_21_fu_738_p1 <= m_to_int_fu_724_p1(23 - 1 downto 0);
    tmp_22_fu_756_p1 <= h_i_to_int_fu_742_p1(23 - 1 downto 0);
    tmp_3_fu_571_p2 <= "1" when (signal_r_0_data_reg = ap_const_lv8_0) else "0";
        tmp_4_fu_830_p1 <= std_logic_vector(resize(signed(input_i),64));

    tmp_5_fu_583_p2 <= std_logic_vector(shift_left(unsigned(date_read_reg_861),to_integer(unsigned('0' & ap_const_lv32_3(31-1 downto 0)))));
    tmp_6_fu_588_p2 <= std_logic_vector(shift_left(unsigned(date_read_reg_861),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    tmp_7_fu_835_p2 <= std_logic_vector(unsigned(input_i) + unsigned(ap_const_lv32_1));
    tmp_8_fu_841_p2 <= "1" when (tmp_7_fu_835_p2 = ap_const_lv32_400) else "0";
    tmp_9_fu_559_p2 <= "1" when (signal_r_0_data_reg = ap_const_lv8_2) else "0";
    tmp_fu_728_p4 <= m_to_int_fu_724_p1(30 downto 23);
    tmp_i1_fu_702_p1 <= std_logic_vector(resize(unsigned(offset_reg_293),64));
    tmp_i3_fu_707_p2 <= "1" when (offset_i_reg_304 = date_read_reg_861) else "0";
    tmp_i_9_fu_652_p2 <= std_logic_vector(unsigned(tmp_10_reg_932) + unsigned(ap_const_lv6_1));
    tmp_i_fu_646_p2 <= "1" when (tmp_12_fu_642_p1 = ap_const_lv7_0) else "0";
    tmp_i_i_fu_629_p1 <= std_logic_vector(resize(unsigned(i_i_i_reg_269),64));
    tmp_i_i_trn_fu_611_p1 <= std_logic_vector(resize(unsigned(i_i_i_reg_269),32));
    tmp_s_fu_565_p2 <= "1" when (signal_r_0_data_reg = ap_const_lv8_1) else "0";
end behav;
