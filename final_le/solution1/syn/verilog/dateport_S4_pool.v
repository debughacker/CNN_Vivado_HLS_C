// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dateport_S4_pool (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        C3_y_address0,
        C3_y_ce0,
        C3_y_q0,
        C3_y_address1,
        C3_y_ce1,
        C3_y_q1,
        S4_y_address0,
        S4_y_ce0,
        S4_y_we0,
        S4_y_d0
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 24'b1;
parameter    ap_ST_st2_fsm_1 = 24'b10;
parameter    ap_ST_st3_fsm_2 = 24'b100;
parameter    ap_ST_st4_fsm_3 = 24'b1000;
parameter    ap_ST_st5_fsm_4 = 24'b10000;
parameter    ap_ST_st6_fsm_5 = 24'b100000;
parameter    ap_ST_st7_fsm_6 = 24'b1000000;
parameter    ap_ST_st8_fsm_7 = 24'b10000000;
parameter    ap_ST_st9_fsm_8 = 24'b100000000;
parameter    ap_ST_st10_fsm_9 = 24'b1000000000;
parameter    ap_ST_st11_fsm_10 = 24'b10000000000;
parameter    ap_ST_st12_fsm_11 = 24'b100000000000;
parameter    ap_ST_st13_fsm_12 = 24'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 24'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 24'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 24'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 24'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 24'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 24'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 24'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 24'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 24'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 24'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 24'b100000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_3E800000 = 32'b111110100000000000000000000000;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv4_A = 4'b1010;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv4_2 = 4'b10;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] C3_y_address0;
output   C3_y_ce0;
input  [31:0] C3_y_q0;
output  [10:0] C3_y_address1;
output   C3_y_ce1;
input  [31:0] C3_y_q1;
output  [8:0] S4_y_address0;
output   S4_y_ce0;
output   S4_y_we0;
output  [31:0] S4_y_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[10:0] C3_y_address0;
reg C3_y_ce0;
reg[10:0] C3_y_address1;
reg C3_y_ce1;
reg S4_y_ce0;
reg S4_y_we0;
(* fsm_encoding = "none" *) reg   [23:0] ap_CS_fsm = 24'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_42;
reg   [31:0] reg_147;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_69;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_bdd_76;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_bdd_84;
wire   [31:0] grp_fu_137_p2;
reg   [31:0] reg_154;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_bdd_94;
wire   [4:0] i_5_fu_166_p2;
reg   [4:0] i_5_reg_451;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_104;
wire   [8:0] C3_y_addr1_fu_200_p2;
reg   [8:0] C3_y_addr1_reg_456;
wire   [0:0] exitcond_fu_160_p2;
wire   [7:0] S4_y_addr1_fu_218_p2;
reg   [7:0] S4_y_addr1_reg_462;
wire   [31:0] C3_y_addr3_fu_269_p2;
reg   [31:0] C3_y_addr3_reg_470;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_121;
wire   [0:0] tmp_s_fu_224_p2;
wire   [31:0] C3_y_addr9_fu_308_p2;
reg   [31:0] C3_y_addr9_reg_476;
wire   [31:0] S4_y_addr3_fu_349_p2;
reg   [31:0] S4_y_addr3_reg_482;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_138;
wire   [0:0] tmp_29_fu_355_p2;
wire   [31:0] C3_y_addr7_fu_395_p2;
reg   [31:0] C3_y_addr7_reg_500;
wire   [31:0] C3_y_addr4_fu_400_p2;
reg   [31:0] C3_y_addr4_reg_505;
wire   [31:0] S4_y_addr4_fu_419_p2;
reg   [31:0] S4_y_addr4_reg_510;
wire   [3:0] k_6_fu_424_p2;
reg   [3:0] k_6_reg_515;
wire   [3:0] j_6_fu_430_p2;
reg   [31:0] C3_y_load_1_reg_525;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_165;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_bdd_174;
reg   [4:0] i_reg_103;
reg   [3:0] j_reg_114;
reg   [3:0] k_reg_126;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_bdd_193;
wire   [63:0] tmp_78_fu_370_p1;
wire   [63:0] tmp_79_fu_390_p1;
wire   [63:0] tmp_80_fu_436_p1;
wire   [63:0] tmp_81_fu_440_p1;
wire   [63:0] tmp_82_fu_444_p1;
wire   [31:0] grp_fu_141_p2;
reg   [31:0] grp_fu_137_p0;
reg   [31:0] grp_fu_137_p1;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_212;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_bdd_219;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_bdd_226;
wire   [31:0] grp_fu_141_p0;
wire   [31:0] grp_fu_141_p1;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_bdd_237;
wire   [7:0] tmp_fu_176_p3;
wire   [5:0] tmp_70_fu_188_p3;
wire   [8:0] p_shl30_cast_fu_196_p1;
wire   [8:0] p_shl29_cast_fu_184_p1;
wire   [6:0] tmp_71_fu_206_p3;
wire   [7:0] tmp_trn_cast_fu_172_p1;
wire   [7:0] p_shl_cast_fu_214_p1;
wire   [8:0] tmp_37_trn_cast_fu_236_p1;
wire   [8:0] C3_y_addr2_fu_240_p2;
wire   [11:0] tmp_72_fu_245_p3;
wire   [9:0] tmp_73_fu_257_p3;
wire   [31:0] p_shl_fu_253_p1;
wire   [31:0] p_shl9_fu_265_p1;
wire   [3:0] tmp_27_fu_230_p2;
wire   [8:0] tmp_39_trn6_cast_fu_275_p1;
wire   [8:0] C3_y_addr8_fu_279_p2;
wire   [11:0] tmp_74_fu_284_p3;
wire   [9:0] tmp_75_fu_296_p3;
wire   [31:0] p_shl10_fu_292_p1;
wire   [31:0] p_shl11_fu_304_p1;
wire   [2:0] tmp_76_fu_314_p4;
wire   [7:0] tmp_41_trn_cast_fu_324_p1;
wire   [7:0] S4_y_addr2_fu_328_p2;
wire   [9:0] tmp_77_fu_337_p3;
wire   [31:0] p_shl12_fu_345_p1;
wire   [31:0] S4_y_addr2_cast_fu_333_p1;
wire   [31:0] tmp_43_trn_fu_361_p1;
wire   [31:0] C3_y_addr5_fu_365_p2;
wire   [3:0] tmp_30_fu_375_p2;
wire   [31:0] tmp_45_trn_fu_381_p1;
wire   [31:0] C3_y_addr6_fu_385_p2;
wire   [2:0] tmp_35_fu_405_p4;
wire   [31:0] tmp_51_trn_fu_415_p1;
wire    grp_fu_137_ce;
wire    grp_fu_141_ce;
reg   [23:0] ap_NS_fsm;


dateport_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dateport_fadd_32ns_32ns_32_5_full_dsp_U20(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_137_p0 ),
    .din1( grp_fu_137_p1 ),
    .ce( grp_fu_137_ce ),
    .dout( grp_fu_137_p2 )
);

dateport_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dateport_fmul_32ns_32ns_32_4_max_dsp_U21(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_141_p0 ),
    .din1( grp_fu_141_p1 ),
    .ce( grp_fu_141_ce ),
    .dout( grp_fu_141_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == tmp_s_fu_224_p2))) begin
        i_reg_103 <= i_5_reg_451;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_103 <= ap_const_lv5_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond_fu_160_p2 == ap_const_lv1_0))) begin
        j_reg_114 <= ap_const_lv4_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == tmp_29_fu_355_p2))) begin
        j_reg_114 <= j_6_fu_430_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == tmp_s_fu_224_p2))) begin
        k_reg_126 <= ap_const_lv4_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        k_reg_126 <= k_6_reg_515;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        reg_147 <= C3_y_q1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9))) begin
        reg_147 <= C3_y_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond_fu_160_p2 == ap_const_lv1_0))) begin
        C3_y_addr1_reg_456[8 : 1] <= C3_y_addr1_fu_200_p2[8 : 1];
        S4_y_addr1_reg_462 <= S4_y_addr1_fu_218_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == tmp_s_fu_224_p2))) begin
        C3_y_addr3_reg_470[31 : 1] <= C3_y_addr3_fu_269_p2[31 : 1];
        C3_y_addr9_reg_476[31 : 2] <= C3_y_addr9_fu_308_p2[31 : 2];
        S4_y_addr3_reg_482 <= S4_y_addr3_fu_349_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == tmp_29_fu_355_p2))) begin
        C3_y_addr4_reg_505[31 : 1] <= C3_y_addr4_fu_400_p2[31 : 1];
        C3_y_addr7_reg_500 <= C3_y_addr7_fu_395_p2;
        S4_y_addr4_reg_510 <= S4_y_addr4_fu_419_p2;
        k_6_reg_515 <= k_6_fu_424_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        C3_y_load_1_reg_525 <= C3_y_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_5_reg_451 <= i_5_fu_166_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) | (ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14) | (ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19))) begin
        reg_154 <= grp_fu_137_p2;
    end
end

/// C3_y_address0 assign process. ///
always @ (ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st9_fsm_8 or tmp_78_fu_370_p1 or tmp_80_fu_436_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        C3_y_address0 = tmp_80_fu_436_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        C3_y_address0 = tmp_78_fu_370_p1;
    end else begin
        C3_y_address0 = 'bx;
    end
end

/// C3_y_address1 assign process. ///
always @ (ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st14_fsm_13 or tmp_79_fu_390_p1 or tmp_81_fu_440_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        C3_y_address1 = tmp_81_fu_440_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        C3_y_address1 = tmp_79_fu_390_p1;
    end else begin
        C3_y_address1 = 'bx;
    end
end

/// C3_y_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st9_fsm_8)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8))) begin
        C3_y_ce0 = ap_const_logic_1;
    end else begin
        C3_y_ce0 = ap_const_logic_0;
    end
end

/// C3_y_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st14_fsm_13)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13))) begin
        C3_y_ce1 = ap_const_logic_1;
    end else begin
        C3_y_ce1 = ap_const_logic_0;
    end
end

/// S4_y_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st24_fsm_23)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        S4_y_ce0 = ap_const_logic_1;
    end else begin
        S4_y_ce0 = ap_const_logic_0;
    end
end

/// S4_y_we0 assign process. ///
always @ (ap_sig_cseq_ST_st24_fsm_23)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        S4_y_we0 = ap_const_logic_1;
    end else begin
        S4_y_we0 = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st2_fsm_1 or exitcond_fu_160_p2)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond_fu_160_p2 == ap_const_lv1_0)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or exitcond_fu_160_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond_fu_160_p2 == ap_const_lv1_0))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st10_fsm_9 assign process. ///
always @ (ap_sig_bdd_76)
begin
    if (ap_sig_bdd_76) begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st11_fsm_10 assign process. ///
always @ (ap_sig_bdd_219)
begin
    if (ap_sig_bdd_219) begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st14_fsm_13 assign process. ///
always @ (ap_sig_bdd_174)
begin
    if (ap_sig_bdd_174) begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st15_fsm_14 assign process. ///
always @ (ap_sig_bdd_84)
begin
    if (ap_sig_bdd_84) begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st16_fsm_15 assign process. ///
always @ (ap_sig_bdd_226)
begin
    if (ap_sig_bdd_226) begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_42)
begin
    if (ap_sig_bdd_42) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st20_fsm_19 assign process. ///
always @ (ap_sig_bdd_94)
begin
    if (ap_sig_bdd_94) begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st21_fsm_20 assign process. ///
always @ (ap_sig_bdd_237)
begin
    if (ap_sig_bdd_237) begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st24_fsm_23 assign process. ///
always @ (ap_sig_bdd_193)
begin
    if (ap_sig_bdd_193) begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_104)
begin
    if (ap_sig_bdd_104) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_121)
begin
    if (ap_sig_bdd_121) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_138)
begin
    if (ap_sig_bdd_138) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_69)
begin
    if (ap_sig_bdd_69) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_212)
begin
    if (ap_sig_bdd_212) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st9_fsm_8 assign process. ///
always @ (ap_sig_bdd_165)
begin
    if (ap_sig_bdd_165) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

/// grp_fu_137_p0 assign process. ///
always @ (reg_147 or reg_154 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st16_fsm_15)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) | (ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15))) begin
        grp_fu_137_p0 = reg_154;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        grp_fu_137_p0 = reg_147;
    end else begin
        grp_fu_137_p0 = 'bx;
    end
end

/// grp_fu_137_p1 assign process. ///
always @ (reg_147 or C3_y_load_1_reg_525 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st16_fsm_15)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) | (ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15))) begin
        grp_fu_137_p1 = reg_147;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        grp_fu_137_p1 = C3_y_load_1_reg_525;
    end else begin
        grp_fu_137_p1 = 'bx;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or exitcond_fu_160_p2 or tmp_s_fu_224_p2 or tmp_29_fu_355_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(exitcond_fu_160_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if (~(ap_const_lv1_0 == tmp_s_fu_224_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            if ((ap_const_lv1_0 == tmp_29_fu_355_p2)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C3_y_addr1_fu_200_p2 = (p_shl30_cast_fu_196_p1 + p_shl29_cast_fu_184_p1);
assign C3_y_addr2_fu_240_p2 = (tmp_37_trn_cast_fu_236_p1 + C3_y_addr1_reg_456);
assign C3_y_addr3_fu_269_p2 = (p_shl_fu_253_p1 + p_shl9_fu_265_p1);
assign C3_y_addr4_fu_400_p2 = (C3_y_addr9_reg_476 + tmp_45_trn_fu_381_p1);
assign C3_y_addr5_fu_365_p2 = (C3_y_addr3_reg_470 + tmp_43_trn_fu_361_p1);
assign C3_y_addr6_fu_385_p2 = (C3_y_addr3_reg_470 + tmp_45_trn_fu_381_p1);
assign C3_y_addr7_fu_395_p2 = (C3_y_addr9_reg_476 + tmp_43_trn_fu_361_p1);
assign C3_y_addr8_fu_279_p2 = (tmp_39_trn6_cast_fu_275_p1 + C3_y_addr1_reg_456);
assign C3_y_addr9_fu_308_p2 = (p_shl10_fu_292_p1 + p_shl11_fu_304_p1);
assign S4_y_addr1_fu_218_p2 = (tmp_trn_cast_fu_172_p1 + p_shl_cast_fu_214_p1);
assign S4_y_addr2_cast_fu_333_p1 = S4_y_addr2_fu_328_p2;
assign S4_y_addr2_fu_328_p2 = (tmp_41_trn_cast_fu_324_p1 + S4_y_addr1_reg_462);
assign S4_y_addr3_fu_349_p2 = (p_shl12_fu_345_p1 + S4_y_addr2_cast_fu_333_p1);
assign S4_y_addr4_fu_419_p2 = (S4_y_addr3_reg_482 + tmp_51_trn_fu_415_p1);
assign S4_y_address0 = tmp_82_fu_444_p1;
assign S4_y_d0 = grp_fu_141_p2;

/// ap_sig_bdd_104 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_104 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_121 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_121 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_138 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_138 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_165 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_165 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_174 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_174 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end

/// ap_sig_bdd_193 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_193 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_17]);
end

/// ap_sig_bdd_212 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_212 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_219 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_219 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end

/// ap_sig_bdd_226 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_226 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end

/// ap_sig_bdd_237 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_237 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_14]);
end

/// ap_sig_bdd_42 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_42 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_69 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_69 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_76 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_76 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end

/// ap_sig_bdd_84 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_84 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end

/// ap_sig_bdd_94 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_94 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_13]);
end
assign exitcond_fu_160_p2 = (i_reg_103 == ap_const_lv5_10? 1'b1: 1'b0);
assign grp_fu_137_ce = ap_const_logic_1;
assign grp_fu_141_ce = ap_const_logic_1;
assign grp_fu_141_p0 = reg_154;
assign grp_fu_141_p1 = ap_const_lv32_3E800000;
assign i_5_fu_166_p2 = (i_reg_103 + ap_const_lv5_1);
assign j_6_fu_430_p2 = (j_reg_114 + ap_const_lv4_2);
assign k_6_fu_424_p2 = (k_reg_126 + ap_const_lv4_2);
assign p_shl10_fu_292_p1 = tmp_74_fu_284_p3;
assign p_shl11_fu_304_p1 = tmp_75_fu_296_p3;
assign p_shl12_fu_345_p1 = tmp_77_fu_337_p3;
assign p_shl29_cast_fu_184_p1 = tmp_fu_176_p3;
assign p_shl30_cast_fu_196_p1 = tmp_70_fu_188_p3;
assign p_shl9_fu_265_p1 = tmp_73_fu_257_p3;
assign p_shl_cast_fu_214_p1 = tmp_71_fu_206_p3;
assign p_shl_fu_253_p1 = tmp_72_fu_245_p3;
assign tmp_27_fu_230_p2 = (j_reg_114 | ap_const_lv4_1);
assign tmp_29_fu_355_p2 = (k_reg_126 < ap_const_lv4_A? 1'b1: 1'b0);
assign tmp_30_fu_375_p2 = (k_reg_126 | ap_const_lv4_1);
assign tmp_35_fu_405_p4 = {{k_reg_126[ap_const_lv32_3 : ap_const_lv32_1]}};
assign tmp_37_trn_cast_fu_236_p1 = j_reg_114;
assign tmp_39_trn6_cast_fu_275_p1 = tmp_27_fu_230_p2;
assign tmp_41_trn_cast_fu_324_p1 = tmp_76_fu_314_p4;
assign tmp_43_trn_fu_361_p1 = k_reg_126;
assign tmp_45_trn_fu_381_p1 = tmp_30_fu_375_p2;
assign tmp_51_trn_fu_415_p1 = tmp_35_fu_405_p4;
assign tmp_70_fu_188_p3 = {{i_reg_103}, {ap_const_lv1_0}};
assign tmp_71_fu_206_p3 = {{i_reg_103}, {ap_const_lv2_0}};
assign tmp_72_fu_245_p3 = {{C3_y_addr2_fu_240_p2}, {ap_const_lv3_0}};
assign tmp_73_fu_257_p3 = {{C3_y_addr2_fu_240_p2}, {ap_const_lv1_0}};
assign tmp_74_fu_284_p3 = {{C3_y_addr8_fu_279_p2}, {ap_const_lv3_0}};
assign tmp_75_fu_296_p3 = {{C3_y_addr8_fu_279_p2}, {ap_const_lv1_0}};
assign tmp_76_fu_314_p4 = {{j_reg_114[ap_const_lv32_3 : ap_const_lv32_1]}};
assign tmp_77_fu_337_p3 = {{S4_y_addr2_fu_328_p2}, {ap_const_lv2_0}};
assign tmp_78_fu_370_p1 = C3_y_addr5_fu_365_p2;
assign tmp_79_fu_390_p1 = C3_y_addr6_fu_385_p2;
assign tmp_80_fu_436_p1 = C3_y_addr7_reg_500;
assign tmp_81_fu_440_p1 = C3_y_addr4_reg_505;
assign tmp_82_fu_444_p1 = S4_y_addr4_reg_510;
assign tmp_fu_176_p3 = {{i_reg_103}, {ap_const_lv3_0}};
assign tmp_s_fu_224_p2 = (j_reg_114 < ap_const_lv4_A? 1'b1: 1'b0);
assign tmp_trn_cast_fu_172_p1 = i_reg_103;
always @ (posedge ap_clk)
begin
    C3_y_addr1_reg_456[0] <= 1'b0;
    C3_y_addr3_reg_470[0] <= 1'b0;
    C3_y_addr9_reg_476[1:0] <= 2'b10;
    C3_y_addr4_reg_505[0] <= 1'b1;
end



endmodule //dateport_S4_pool

