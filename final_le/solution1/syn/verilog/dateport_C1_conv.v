// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dateport_C1_conv (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        inputimg_address0,
        inputimg_ce0,
        inputimg_q0,
        inputimg_address1,
        inputimg_ce1,
        inputimg_q1,
        C1_v_address0,
        C1_v_ce0,
        C1_v_we0,
        C1_v_d0,
        C1_v_q0,
        C1_bias_address0,
        C1_bias_ce0,
        C1_bias_q0,
        C1_y_address0,
        C1_y_ce0,
        C1_y_we0,
        C1_y_d0,
        C1_mapData_address0,
        C1_mapData_ce0,
        C1_mapData_q0,
        C1_mapData_address1,
        C1_mapData_ce1,
        C1_mapData_q1
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 25'b1;
parameter    ap_ST_pp0_stg0_fsm_1 = 25'b10;
parameter    ap_ST_pp1_stg0_fsm_2 = 25'b100;
parameter    ap_ST_pp1_stg1_fsm_3 = 25'b1000;
parameter    ap_ST_pp1_stg2_fsm_4 = 25'b10000;
parameter    ap_ST_pp1_stg3_fsm_5 = 25'b100000;
parameter    ap_ST_pp1_stg4_fsm_6 = 25'b1000000;
parameter    ap_ST_pp1_stg5_fsm_7 = 25'b10000000;
parameter    ap_ST_pp1_stg6_fsm_8 = 25'b100000000;
parameter    ap_ST_pp1_stg7_fsm_9 = 25'b1000000000;
parameter    ap_ST_pp1_stg8_fsm_10 = 25'b10000000000;
parameter    ap_ST_pp1_stg9_fsm_11 = 25'b100000000000;
parameter    ap_ST_pp1_stg10_fsm_12 = 25'b1000000000000;
parameter    ap_ST_pp1_stg11_fsm_13 = 25'b10000000000000;
parameter    ap_ST_pp1_stg12_fsm_14 = 25'b100000000000000;
parameter    ap_ST_pp1_stg13_fsm_15 = 25'b1000000000000000;
parameter    ap_ST_pp1_stg14_fsm_16 = 25'b10000000000000000;
parameter    ap_ST_pp1_stg15_fsm_17 = 25'b100000000000000000;
parameter    ap_ST_pp1_stg16_fsm_18 = 25'b1000000000000000000;
parameter    ap_ST_pp1_stg17_fsm_19 = 25'b10000000000000000000;
parameter    ap_ST_pp1_stg18_fsm_20 = 25'b100000000000000000000;
parameter    ap_ST_pp1_stg19_fsm_21 = 25'b1000000000000000000000;
parameter    ap_ST_pp1_stg20_fsm_22 = 25'b10000000000000000000000;
parameter    ap_ST_pp1_stg21_fsm_23 = 25'b100000000000000000000000;
parameter    ap_ST_st40_fsm_24 = 25'b1000000000000000000000000;
parameter    ap_true = 1'b1;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv13_0 = 13'b0000000000000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv15_0 = 15'b000000000000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv13_1260 = 13'b1001001100000;
parameter    ap_const_lv13_1 = 13'b1;
parameter    ap_const_lv10_310 = 10'b1100010000;
parameter    ap_const_lv10_1 = 10'b1;
parameter    ap_const_lv5_1C = 5'b11100;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv15_5BE0 = 15'b101101111100000;
parameter    ap_const_lv15_1 = 15'b1;
parameter    ap_const_lv13_F50 = 13'b111101010000;
parameter    ap_const_lv3_5 = 3'b101;
parameter    ap_const_lv8_8C = 8'b10001100;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv5_3 = 5'b11;
parameter    ap_const_lv5_4 = 5'b100;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv32_18 = 32'b11000;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] inputimg_address0;
output   inputimg_ce0;
input  [31:0] inputimg_q0;
output  [9:0] inputimg_address1;
output   inputimg_ce1;
input  [31:0] inputimg_q1;
output  [12:0] C1_v_address0;
output   C1_v_ce0;
output   C1_v_we0;
output  [31:0] C1_v_d0;
input  [31:0] C1_v_q0;
output  [2:0] C1_bias_address0;
output   C1_bias_ce0;
input  [31:0] C1_bias_q0;
output  [12:0] C1_y_address0;
output   C1_y_ce0;
output   C1_y_we0;
output  [31:0] C1_y_d0;
output  [7:0] C1_mapData_address0;
output   C1_mapData_ce0;
input  [31:0] C1_mapData_q0;
output  [7:0] C1_mapData_address1;
output   C1_mapData_ce1;
input  [31:0] C1_mapData_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] inputimg_address0;
reg inputimg_ce0;
reg[9:0] inputimg_address1;
reg inputimg_ce1;
reg[12:0] C1_v_address0;
reg C1_v_ce0;
reg C1_v_we0;
reg[31:0] C1_v_d0;
reg C1_bias_ce0;
reg C1_y_ce0;
reg C1_y_we0;
reg[7:0] C1_mapData_address0;
reg C1_mapData_ce0;
reg[7:0] C1_mapData_address1;
reg C1_mapData_ce1;
(* fsm_encoding = "none" *) reg   [24:0] ap_CS_fsm = 25'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_43;
reg   [12:0] indvar_flatten4_reg_263;
reg   [2:0] i_reg_274;
reg   [9:0] indvar_flatten_reg_286;
reg   [4:0] j_reg_297;
reg   [4:0] k_reg_309;
reg   [14:0] indvar_flatten5_reg_321;
reg   [2:0] i_1_reg_332;
reg   [12:0] indvar_flatten6_reg_344;
reg   [4:0] j_1_reg_355;
reg   [7:0] indvar_flatten7_reg_366;
reg   [4:0] k_1_reg_377;
reg   [2:0] m_reg_388;
wire   [31:0] grp_fu_400_p2;
reg   [31:0] reg_417;
reg    ap_sig_cseq_ST_pp1_stg11_fsm_13;
reg    ap_sig_bdd_118;
reg    ap_reg_ppiten_pp1_it0 = 1'b0;
reg    ap_reg_ppiten_pp1_it1 = 1'b0;
reg   [0:0] exitcond_flatten8_reg_1162;
reg    ap_sig_cseq_ST_pp1_stg15_fsm_17;
reg    ap_sig_bdd_133;
reg    ap_sig_cseq_ST_pp1_stg19_fsm_21;
reg    ap_sig_bdd_142;
reg    ap_sig_cseq_ST_pp1_stg1_fsm_3;
reg    ap_sig_bdd_151;
reg   [0:0] ap_reg_ppstg_exitcond_flatten8_reg_1162_pp1_it1;
reg    ap_sig_cseq_ST_pp1_stg5_fsm_7;
reg    ap_sig_bdd_162;
wire   [0:0] exitcond_flatten_fu_422_p2;
reg   [0:0] exitcond_flatten_reg_1114;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_1;
reg    ap_sig_bdd_173;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1114_pp0_it1;
wire   [12:0] indvar_flatten_next4_fu_428_p2;
wire   [0:0] exitcond_flatten9_fu_434_p2;
reg   [0:0] exitcond_flatten9_reg_1123;
wire   [9:0] indvar_flatten_next_fu_446_p3;
wire   [2:0] i_mid2_fu_484_p3;
reg   [2:0] i_mid2_reg_1136;
wire   [4:0] k_mid2_fu_502_p3;
reg   [4:0] k_mid2_reg_1141;
wire   [4:0] j_mid2_fu_510_p3;
reg   [4:0] j_mid2_reg_1146;
wire  signed [9:0] C1_v_addr9_fu_556_p2;
reg  signed [9:0] C1_v_addr9_reg_1151;
wire   [4:0] k_2_fu_562_p2;
reg   [4:0] k_2_reg_1157;
wire   [0:0] exitcond_flatten8_fu_610_p2;
reg    ap_sig_cseq_ST_pp1_stg0_fsm_2;
reg    ap_sig_bdd_213;
wire   [14:0] indvar_flatten_next5_fu_616_p2;
reg   [14:0] indvar_flatten_next5_reg_1166;
wire   [0:0] exitcond_flatten10_fu_622_p2;
reg   [0:0] exitcond_flatten10_reg_1171;
wire   [4:0] j_1_mid_fu_628_p3;
reg   [4:0] j_1_mid_reg_1177;
wire   [0:0] exitcond_flatten23_mid_fu_660_p2;
reg   [0:0] exitcond_flatten23_mid_reg_1183;
wire   [4:0] k_1_mid_fu_672_p3;
reg   [4:0] k_1_mid_reg_1189;
wire   [0:0] exitcond1_mid3_fu_692_p2;
reg   [0:0] exitcond1_mid3_reg_1195;
wire   [7:0] indvar_flatten_next6_fu_704_p3;
reg   [7:0] indvar_flatten_next6_reg_1201;
wire   [12:0] indvar_flatten_next7_fu_718_p3;
reg   [12:0] indvar_flatten_next7_reg_1206;
wire   [2:0] i_1_mid2_fu_732_p3;
reg   [2:0] i_1_mid2_reg_1211;
reg   [2:0] ap_reg_ppstg_i_1_mid2_reg_1211_pp1_it1;
wire   [4:0] j_1_mid2_fu_744_p3;
reg   [4:0] j_1_mid2_reg_1218;
wire   [4:0] k_1_mid2_fu_772_p3;
reg   [4:0] k_1_mid2_reg_1224;
wire   [4:0] tmp_22_fu_788_p2;
reg   [4:0] tmp_22_reg_1233;
wire   [4:0] tmp_322_fu_804_p3;
reg   [4:0] tmp_322_reg_1240;
wire   [5:0] C1_mapData_addr6_fu_839_p2;
reg   [5:0] C1_mapData_addr6_reg_1250;
wire   [2:0] m_1_fu_858_p2;
reg   [2:0] m_1_reg_1261;
wire   [0:0] ifzero_fu_864_p2;
reg   [0:0] ifzero_reg_1266;
reg   [0:0] ap_reg_ppstg_ifzero_reg_1266_pp1_it1;
reg   [31:0] inputimg_load_reg_1270;
reg    ap_sig_cseq_ST_pp1_stg2_fsm_4;
reg    ap_sig_bdd_269;
wire   [31:0] C1_mapData_addr7_fu_894_p2;
reg   [31:0] C1_mapData_addr7_reg_1275;
reg   [31:0] inputimg_load_1_reg_1287;
reg    ap_sig_cseq_ST_pp1_stg3_fsm_5;
reg    ap_sig_bdd_289;
reg   [31:0] C1_mapData_load_1_reg_1312;
reg   [31:0] inputimg_load_2_reg_1317;
reg   [31:0] inputimg_load_3_reg_1327;
reg   [31:0] C1_mapData_load_2_reg_1342;
reg    ap_sig_cseq_ST_pp1_stg4_fsm_6;
reg    ap_sig_bdd_307;
reg   [31:0] C1_mapData_load_3_reg_1347;
reg   [31:0] inputimg_load_4_reg_1352;
wire  signed [9:0] C1_v_addr7_fu_1014_p2;
reg  signed [9:0] C1_v_addr7_reg_1362;
reg   [31:0] C1_mapData_load_4_reg_1368;
wire   [63:0] tmp_323_fu_1057_p1;
reg   [63:0] tmp_323_reg_1373;
reg    ap_sig_cseq_ST_pp1_stg6_fsm_8;
reg    ap_sig_bdd_325;
reg   [63:0] ap_reg_ppstg_tmp_323_reg_1373_pp1_it1;
reg   [12:0] C1_v_addr_12_reg_1378;
wire   [31:0] grp_fu_407_p2;
reg   [31:0] tmp_31_reg_1383;
reg    ap_sig_cseq_ST_pp1_stg7_fsm_9;
reg    ap_sig_bdd_340;
reg   [31:0] tmp_31_1_reg_1393;
reg   [31:0] tmp_31_2_reg_1398;
reg    ap_sig_cseq_ST_pp1_stg8_fsm_10;
reg    ap_sig_bdd_350;
reg   [31:0] tmp_31_3_reg_1403;
reg    ap_sig_cseq_ST_pp1_stg9_fsm_11;
reg    ap_sig_bdd_359;
reg   [31:0] tmp_31_4_reg_1408;
reg    ap_sig_cseq_ST_pp1_stg10_fsm_12;
reg    ap_sig_bdd_368;
reg   [31:0] C1_bias_load_reg_1418;
reg   [31:0] temp_reg_1423;
wire   [0:0] tmp_84_fu_1101_p2;
reg   [0:0] tmp_84_reg_1430;
reg    ap_sig_cseq_ST_pp1_stg21_fsm_23;
reg    ap_sig_bdd_397;
reg   [2:0] i_phi_fu_278_p4;
reg   [4:0] j_phi_fu_301_p4;
reg   [4:0] k_phi_fu_313_p4;
reg   [14:0] indvar_flatten5_phi_fu_325_p4;
reg   [2:0] i_1_phi_fu_336_p4;
reg   [12:0] indvar_flatten6_phi_fu_348_p4;
reg   [4:0] j_1_phi_fu_359_p4;
reg   [7:0] indvar_flatten7_phi_fu_370_p4;
reg   [4:0] k_1_phi_fu_381_p4;
reg   [2:0] m_phi_fu_392_p4;
wire   [63:0] tmp_318_fu_605_p1;
wire   [63:0] tmp_325_fu_824_p1;
wire   [63:0] tmp_328_fu_853_p1;
wire   [63:0] tmp_326_fu_906_p1;
wire   [63:0] tmp_329_fu_917_p1;
wire   [63:0] tmp_331_fu_929_p1;
wire   [63:0] tmp_334_fu_941_p1;
wire   [63:0] tmp_332_fu_956_p1;
wire   [63:0] tmp_335_fu_966_p1;
wire   [63:0] tmp_337_fu_978_p1;
wire   [63:0] tmp_338_fu_983_p1;
wire   [63:0] tmp_s_fu_1062_p1;
reg    ap_sig_cseq_ST_pp1_stg12_fsm_14;
reg    ap_sig_bdd_456;
reg   [31:0] grp_fu_400_p0;
reg   [31:0] grp_fu_400_p1;
reg   [31:0] grp_fu_407_p0;
reg   [31:0] grp_fu_407_p1;
wire   [31:0] tmp_83_fu_412_p0;
wire   [31:0] tmp_83_fu_412_p1;
wire   [9:0] indvar_flatten_op_fu_440_p2;
wire   [0:0] exitcond_fu_466_p2;
wire   [0:0] not_exitcond_flatten_fu_461_p2;
wire   [2:0] i_s_fu_478_p2;
wire   [4:0] j_mid_fu_454_p3;
wire   [0:0] exitcond5_mid_fu_472_p2;
wire   [0:0] tmp_fu_497_p2;
wire   [4:0] j_2_fu_491_p2;
wire   [7:0] tmp_316_fu_522_p3;
wire   [4:0] tmp_317_fu_534_p3;
wire   [8:0] p_shl75_cast_fu_530_p1;
wire   [8:0] p_shl76_cast_fu_542_p1;
wire   [8:0] C1_v_addr8_fu_546_p2;
wire  signed [9:0] C1_v_addr8_cast_fu_552_p1;
wire   [9:0] tmp_14_trn_cast_fu_518_p1;
wire   [14:0] tmp_145_fu_571_p3;
wire   [11:0] tmp_146_fu_582_p3;
wire  signed [31:0] p_shl_fu_578_p1;
wire  signed [31:0] p_shl50_fu_589_p1;
wire  signed [31:0] C1_v_addr4_fu_593_p2;
wire   [31:0] tmp_17_trn_fu_568_p1;
wire  signed [31:0] C1_v_addr5_fu_599_p2;
wire   [0:0] exitcond19_fu_642_p2;
wire   [0:0] not_exitcond_flatten1_fu_636_p2;
wire   [0:0] exitcond_flatten11_fu_654_p2;
wire   [0:0] tmp_319_fu_666_p2;
wire   [0:0] exitcond_flatten23_not_fu_680_p2;
wire   [0:0] exitcond1_mid_fu_648_p2;
wire   [0:0] not_exitcond_flatten23_mid_fu_686_p2;
wire   [7:0] indvar_flatten21_op_fu_698_p2;
wire   [12:0] indvar_flatten33_op_fu_712_p2;
wire   [2:0] i_10_fu_726_p2;
wire   [4:0] j_3_fu_739_p2;
wire   [0:0] tmp_320_fu_755_p2;
wire   [0:0] tmp_147_fu_759_p2;
wire   [4:0] k_3_fu_750_p2;
wire   [2:0] m_mid2_fu_764_p3;
wire   [4:0] tmp_21_cast1_fu_784_p1;
wire   [9:0] tmp_324_fu_816_p3;
wire  signed [2:0] tmp_24_fu_794_p2;
wire   [5:0] tmp_trn_cast_fu_800_p1;
wire   [5:0] p_shl82_cast1_fu_812_p1;
wire   [5:0] C1_mapData_addr5_fu_833_p2;
wire   [5:0] tmp_25_trn_cast_fu_829_p1;
wire   [4:0] tmp_27_1_fu_778_p2;
wire   [9:0] tmp_327_fu_845_p3;
wire   [7:0] tmp_150_fu_883_p3;
wire   [31:0] C1_mapData_addr6_cast_fu_880_p1;
wire   [31:0] p_shl53_fu_890_p1;
wire   [31:0] C1_mapData_addr8_fu_900_p2;
wire   [31:0] C1_mapData_addr9_fu_911_p2;
wire   [4:0] tmp_27_2_fu_870_p2;
wire   [9:0] tmp_330_fu_922_p3;
wire   [4:0] tmp_27_3_fu_875_p2;
wire   [9:0] tmp_333_fu_934_p3;
wire   [31:0] C1_mapData_addr2_fu_951_p2;
wire   [31:0] C1_mapData_addr3_fu_961_p2;
wire   [4:0] tmp_27_4_fu_946_p2;
wire   [9:0] tmp_336_fu_971_p3;
wire   [7:0] tmp_321_fu_990_p3;
wire   [8:0] p_shl81_cast_fu_997_p1;
wire   [8:0] p_shl82_cast_fu_1001_p1;
wire   [8:0] C1_v_addr6_fu_1004_p2;
wire  signed [9:0] C1_v_addr12_cast_fu_1010_p1;
wire   [9:0] tmp_15_trn_cast_fu_987_p1;
wire   [14:0] tmp_148_fu_1023_p3;
wire   [11:0] tmp_149_fu_1034_p3;
wire  signed [31:0] p_shl51_fu_1030_p1;
wire  signed [31:0] p_shl52_fu_1041_p1;
wire  signed [31:0] C1_v_addr10_fu_1045_p2;
wire   [31:0] tmp_18_trn_fu_1020_p1;
wire  signed [31:0] C1_v_addr11_fu_1051_p2;
wire   [31:0] temp_to_int_fu_1066_p1;
wire   [7:0] tmp_80_fu_1069_p4;
wire   [22:0] tmp_151_fu_1079_p1;
wire   [0:0] notrhs_fu_1089_p2;
wire   [0:0] notlhs_fu_1083_p2;
wire   [0:0] tmp_82_fu_1095_p2;
wire   [0:0] tmp_83_fu_412_p2;
wire    grp_fu_400_ce;
wire    grp_fu_407_ce;
wire   [4:0] tmp_83_fu_412_opcode;
reg    ap_sig_cseq_ST_st40_fsm_24;
reg    ap_sig_bdd_945;
reg   [24:0] ap_NS_fsm;


dateport_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dateport_fadd_32ns_32ns_32_5_full_dsp_U0(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_400_p0 ),
    .din1( grp_fu_400_p1 ),
    .ce( grp_fu_400_ce ),
    .dout( grp_fu_400_p2 )
);

dateport_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dateport_fmul_32ns_32ns_32_4_max_dsp_U1(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_407_p0 ),
    .din1( grp_fu_407_p1 ),
    .ce( grp_fu_407_ce ),
    .dout( grp_fu_407_p2 )
);

dateport_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
dateport_fcmp_32ns_32ns_1_1_U2(
    .din0( tmp_83_fu_412_p0 ),
    .din1( tmp_83_fu_412_p1 ),
    .opcode( tmp_83_fu_412_opcode ),
    .dout( tmp_83_fu_412_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_const_lv1_0 == exitcond_flatten_fu_422_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_lv1_0 == exitcond_flatten_fu_422_p2))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_const_lv1_0 == exitcond_flatten_fu_422_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
    end
end

/// ap_reg_ppiten_pp1_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_2) & ~(ap_const_lv1_0 == exitcond_flatten8_fu_610_p2))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond_flatten_fu_422_p2))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp1_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
    end else begin
        if (((exitcond_flatten8_reg_1162 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg21_fsm_23))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond_flatten_fu_422_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg21_fsm_23) & ~(exitcond_flatten8_reg_1162 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond_flatten_fu_422_p2))) begin
        i_1_reg_332 <= ap_const_lv3_0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg1_fsm_3) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten8_reg_1162_pp1_it1))) begin
        i_1_reg_332 <= i_1_mid2_reg_1211;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1114_pp0_it1))) begin
        i_reg_274 <= i_mid2_reg_1136;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_274 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_lv1_0 == exitcond_flatten_fu_422_p2))) begin
        indvar_flatten4_reg_263 <= indvar_flatten_next4_fu_428_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        indvar_flatten4_reg_263 <= ap_const_lv13_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond_flatten_fu_422_p2))) begin
        indvar_flatten5_reg_321 <= ap_const_lv15_0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (exitcond_flatten8_reg_1162 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_2))) begin
        indvar_flatten5_reg_321 <= indvar_flatten_next5_reg_1166;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond_flatten_fu_422_p2))) begin
        indvar_flatten6_reg_344 <= ap_const_lv13_0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (exitcond_flatten8_reg_1162 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_2))) begin
        indvar_flatten6_reg_344 <= indvar_flatten_next7_reg_1206;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond_flatten_fu_422_p2))) begin
        indvar_flatten7_reg_366 <= ap_const_lv8_0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (exitcond_flatten8_reg_1162 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_2))) begin
        indvar_flatten7_reg_366 <= indvar_flatten_next6_reg_1201;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_lv1_0 == exitcond_flatten_fu_422_p2))) begin
        indvar_flatten_reg_286 <= indvar_flatten_next_fu_446_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        indvar_flatten_reg_286 <= ap_const_lv10_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond_flatten_fu_422_p2))) begin
        j_1_reg_355 <= ap_const_lv5_0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (exitcond_flatten8_reg_1162 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_2))) begin
        j_1_reg_355 <= j_1_mid2_reg_1218;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1114_pp0_it1))) begin
        j_reg_297 <= j_mid2_reg_1146;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        j_reg_297 <= ap_const_lv5_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond_flatten_fu_422_p2))) begin
        k_1_reg_377 <= ap_const_lv5_0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (exitcond_flatten8_reg_1162 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_2))) begin
        k_1_reg_377 <= k_1_mid2_reg_1224;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1114_pp0_it1))) begin
        k_reg_309 <= k_2_reg_1157;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        k_reg_309 <= ap_const_lv5_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond_flatten_fu_422_p2))) begin
        m_reg_388 <= ap_const_lv3_0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (exitcond_flatten8_reg_1162 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_2))) begin
        m_reg_388 <= m_1_reg_1261;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg5_fsm_7) & ~(ap_const_lv1_0 == ap_reg_ppstg_ifzero_reg_1266_pp1_it1))) begin
        C1_bias_load_reg_1418 <= C1_bias_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten8_reg_1162 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg1_fsm_3))) begin
        C1_mapData_addr6_reg_1250 <= C1_mapData_addr6_fu_839_p2;
        ifzero_reg_1266 <= ifzero_fu_864_p2;
        tmp_22_reg_1233 <= tmp_22_fu_788_p2;
        tmp_322_reg_1240[4 : 2] <= tmp_322_fu_804_p3[4 : 2];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten8_reg_1162 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg2_fsm_4))) begin
        C1_mapData_addr7_reg_1275 <= C1_mapData_addr7_fu_894_p2;
        inputimg_load_1_reg_1287 <= inputimg_q1;
        inputimg_load_reg_1270 <= inputimg_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten8_reg_1162 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg3_fsm_5))) begin
        C1_mapData_load_1_reg_1312 <= C1_mapData_q1;
        inputimg_load_2_reg_1317 <= inputimg_q0;
        inputimg_load_3_reg_1327 <= inputimg_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten8_reg_1162 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg4_fsm_6))) begin
        C1_mapData_load_2_reg_1342 <= C1_mapData_q0;
        C1_mapData_load_3_reg_1347 <= C1_mapData_q1;
        inputimg_load_4_reg_1352 <= inputimg_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten8_reg_1162 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg5_fsm_7))) begin
        C1_mapData_load_4_reg_1368 <= C1_mapData_q0;
        C1_v_addr7_reg_1362 <= C1_v_addr7_fu_1014_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_lv1_0 == exitcond_flatten_reg_1114))) begin
        C1_v_addr9_reg_1151 <= C1_v_addr9_fu_556_p2;
        k_mid2_reg_1141 <= k_mid2_fu_502_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten8_reg_1162 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg6_fsm_8))) begin
        C1_v_addr_12_reg_1378 <= tmp_323_fu_1057_p1;
        tmp_31_reg_1383 <= grp_fu_407_p2;
        tmp_323_reg_1373[31 : 0] <= tmp_323_fu_1057_p1[31 : 0];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_2)) begin
        ap_reg_ppstg_exitcond_flatten8_reg_1162_pp1_it1 <= exitcond_flatten8_reg_1162;
        exitcond_flatten8_reg_1162 <= exitcond_flatten8_fu_610_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)) begin
        ap_reg_ppstg_exitcond_flatten_reg_1114_pp0_it1 <= exitcond_flatten_reg_1114;
        exitcond_flatten_reg_1114 <= exitcond_flatten_fu_422_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg1_fsm_3)) begin
        ap_reg_ppstg_i_1_mid2_reg_1211_pp1_it1 <= i_1_mid2_reg_1211;
        ap_reg_ppstg_ifzero_reg_1266_pp1_it1 <= ifzero_reg_1266;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg6_fsm_8)) begin
        ap_reg_ppstg_tmp_323_reg_1373_pp1_it1[31 : 0] <= tmp_323_reg_1373[31 : 0];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_2) & (ap_const_lv1_0 == exitcond_flatten8_fu_610_p2))) begin
        exitcond1_mid3_reg_1195 <= exitcond1_mid3_fu_692_p2;
        exitcond_flatten10_reg_1171 <= exitcond_flatten10_fu_622_p2;
        exitcond_flatten23_mid_reg_1183 <= exitcond_flatten23_mid_fu_660_p2;
        j_1_mid_reg_1177 <= j_1_mid_fu_628_p3;
        k_1_mid_reg_1189 <= k_1_mid_fu_672_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_lv1_0 == exitcond_flatten_fu_422_p2))) begin
        exitcond_flatten9_reg_1123 <= exitcond_flatten9_fu_434_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (exitcond_flatten8_reg_1162 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg1_fsm_3))) begin
        i_1_mid2_reg_1211 <= i_1_mid2_fu_732_p3;
        j_1_mid2_reg_1218 <= j_1_mid2_fu_744_p3;
        k_1_mid2_reg_1224 <= k_1_mid2_fu_772_p3;
        m_1_reg_1261 <= m_1_fu_858_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == exitcond_flatten_reg_1114))) begin
        i_mid2_reg_1136 <= i_mid2_fu_484_p3;
        j_mid2_reg_1146 <= j_mid2_fu_510_p3;
        k_2_reg_1157 <= k_2_fu_562_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_2))) begin
        indvar_flatten_next5_reg_1166 <= indvar_flatten_next5_fu_616_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_2) & (ap_const_lv1_0 == exitcond_flatten8_fu_610_p2))) begin
        indvar_flatten_next6_reg_1201 <= indvar_flatten_next6_fu_704_p3;
        indvar_flatten_next7_reg_1206 <= indvar_flatten_next7_fu_718_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg11_fsm_13) & (exitcond_flatten8_reg_1162 == ap_const_lv1_0)) | ((exitcond_flatten8_reg_1162 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg15_fsm_17)) | ((exitcond_flatten8_reg_1162 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg19_fsm_21)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg1_fsm_3) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten8_reg_1162_pp1_it1)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten8_reg_1162_pp1_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg5_fsm_7)))) begin
        reg_417 <= grp_fu_400_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg10_fsm_12) & ~(ap_const_lv1_0 == ap_reg_ppstg_ifzero_reg_1266_pp1_it1))) begin
        temp_reg_1423 <= grp_fu_400_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten8_reg_1162 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg7_fsm_9))) begin
        tmp_31_1_reg_1393 <= grp_fu_407_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten8_reg_1162 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg8_fsm_10))) begin
        tmp_31_2_reg_1398 <= grp_fu_407_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten8_reg_1162 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg9_fsm_11))) begin
        tmp_31_3_reg_1403 <= grp_fu_407_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond_flatten8_reg_1162 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg10_fsm_12))) begin
        tmp_31_4_reg_1408 <= grp_fu_407_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg11_fsm_13) & ~(ap_const_lv1_0 == ap_reg_ppstg_ifzero_reg_1266_pp1_it1))) begin
        tmp_84_reg_1430 <= tmp_84_fu_1101_p2;
    end
end

/// C1_bias_ce0 assign process. ///
always @ (ap_reg_ppiten_pp1_it1 or ap_sig_cseq_ST_pp1_stg4_fsm_6)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg4_fsm_6))) begin
        C1_bias_ce0 = ap_const_logic_1;
    end else begin
        C1_bias_ce0 = ap_const_logic_0;
    end
end

/// C1_mapData_address0 assign process. ///
always @ (ap_reg_ppiten_pp1_it0 or ap_sig_cseq_ST_pp1_stg2_fsm_4 or ap_sig_cseq_ST_pp1_stg3_fsm_5 or ap_sig_cseq_ST_pp1_stg4_fsm_6 or tmp_326_fu_906_p1 or tmp_332_fu_956_p1 or tmp_338_fu_983_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg4_fsm_6)) begin
            C1_mapData_address0 = tmp_338_fu_983_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg3_fsm_5)) begin
            C1_mapData_address0 = tmp_332_fu_956_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg2_fsm_4)) begin
            C1_mapData_address0 = tmp_326_fu_906_p1;
        end else begin
            C1_mapData_address0 = 'bx;
        end
    end else begin
        C1_mapData_address0 = 'bx;
    end
end

/// C1_mapData_address1 assign process. ///
always @ (ap_reg_ppiten_pp1_it0 or ap_sig_cseq_ST_pp1_stg2_fsm_4 or ap_sig_cseq_ST_pp1_stg3_fsm_5 or tmp_329_fu_917_p1 or tmp_335_fu_966_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg3_fsm_5)) begin
            C1_mapData_address1 = tmp_335_fu_966_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg2_fsm_4)) begin
            C1_mapData_address1 = tmp_329_fu_917_p1;
        end else begin
            C1_mapData_address1 = 'bx;
        end
    end else begin
        C1_mapData_address1 = 'bx;
    end
end

/// C1_mapData_ce0 assign process. ///
always @ (ap_reg_ppiten_pp1_it0 or ap_sig_cseq_ST_pp1_stg2_fsm_4 or ap_sig_cseq_ST_pp1_stg3_fsm_5 or ap_sig_cseq_ST_pp1_stg4_fsm_6)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg2_fsm_4)) | ((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg3_fsm_5)) | ((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg4_fsm_6)))) begin
        C1_mapData_ce0 = ap_const_logic_1;
    end else begin
        C1_mapData_ce0 = ap_const_logic_0;
    end
end

/// C1_mapData_ce1 assign process. ///
always @ (ap_reg_ppiten_pp1_it0 or ap_sig_cseq_ST_pp1_stg2_fsm_4 or ap_sig_cseq_ST_pp1_stg3_fsm_5)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg2_fsm_4)) | ((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg3_fsm_5)))) begin
        C1_mapData_ce1 = ap_const_logic_1;
    end else begin
        C1_mapData_ce1 = ap_const_logic_0;
    end
end

/// C1_v_address0 assign process. ///
always @ (ap_reg_ppiten_pp1_it0 or ap_reg_ppiten_pp1_it1 or ap_sig_cseq_ST_pp1_stg5_fsm_7 or ap_reg_ppiten_pp0_it2 or tmp_323_fu_1057_p1 or ap_sig_cseq_ST_pp1_stg6_fsm_8 or C1_v_addr_12_reg_1378 or tmp_318_fu_605_p1)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg5_fsm_7))) begin
        C1_v_address0 = C1_v_addr_12_reg_1378;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) begin
        C1_v_address0 = tmp_318_fu_605_p1;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg6_fsm_8))) begin
        C1_v_address0 = tmp_323_fu_1057_p1;
    end else begin
        C1_v_address0 = 'bx;
    end
end

/// C1_v_ce0 assign process. ///
always @ (ap_reg_ppiten_pp1_it0 or ap_reg_ppiten_pp1_it1 or ap_sig_cseq_ST_pp1_stg5_fsm_7 or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_pp1_stg6_fsm_8)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) | ((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg6_fsm_8)) | ((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg5_fsm_7)))) begin
        C1_v_ce0 = ap_const_logic_1;
    end else begin
        C1_v_ce0 = ap_const_logic_0;
    end
end

/// C1_v_d0 assign process. ///
always @ (grp_fu_400_p2 or ap_reg_ppiten_pp1_it1 or ap_sig_cseq_ST_pp1_stg5_fsm_7 or ap_reg_ppiten_pp0_it2)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg5_fsm_7))) begin
        C1_v_d0 = grp_fu_400_p2;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) begin
        C1_v_d0 = ap_const_lv32_0;
    end else begin
        C1_v_d0 = 'bx;
    end
end

/// C1_v_we0 assign process. ///
always @ (ap_reg_ppiten_pp1_it1 or ap_reg_ppstg_exitcond_flatten8_reg_1162_pp1_it1 or ap_sig_cseq_ST_pp1_stg5_fsm_7 or ap_reg_ppiten_pp0_it2 or ap_reg_ppstg_exitcond_flatten_reg_1114_pp0_it1)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1114_pp0_it1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten8_reg_1162_pp1_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg5_fsm_7)))) begin
        C1_v_we0 = ap_const_logic_1;
    end else begin
        C1_v_we0 = ap_const_logic_0;
    end
end

/// C1_y_ce0 assign process. ///
always @ (ap_reg_ppiten_pp1_it1 or ap_sig_cseq_ST_pp1_stg12_fsm_14)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg12_fsm_14))) begin
        C1_y_ce0 = ap_const_logic_1;
    end else begin
        C1_y_ce0 = ap_const_logic_0;
    end
end

/// C1_y_we0 assign process. ///
always @ (ap_reg_ppiten_pp1_it1 or ap_reg_ppstg_ifzero_reg_1266_pp1_it1 or ap_sig_cseq_ST_pp1_stg12_fsm_14)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_const_lv1_0 == ap_reg_ppstg_ifzero_reg_1266_pp1_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg12_fsm_14))) begin
        C1_y_we0 = ap_const_logic_1;
    end else begin
        C1_y_we0 = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st40_fsm_24)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st40_fsm_24))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st40_fsm_24)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st40_fsm_24)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_1 assign process. ///
always @ (ap_sig_bdd_173)
begin
    if (ap_sig_bdd_173) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp1_stg0_fsm_2 assign process. ///
always @ (ap_sig_bdd_213)
begin
    if (ap_sig_bdd_213) begin
        ap_sig_cseq_ST_pp1_stg0_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg0_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp1_stg10_fsm_12 assign process. ///
always @ (ap_sig_bdd_368)
begin
    if (ap_sig_bdd_368) begin
        ap_sig_cseq_ST_pp1_stg10_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg10_fsm_12 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp1_stg11_fsm_13 assign process. ///
always @ (ap_sig_bdd_118)
begin
    if (ap_sig_bdd_118) begin
        ap_sig_cseq_ST_pp1_stg11_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg11_fsm_13 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp1_stg12_fsm_14 assign process. ///
always @ (ap_sig_bdd_456)
begin
    if (ap_sig_bdd_456) begin
        ap_sig_cseq_ST_pp1_stg12_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg12_fsm_14 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp1_stg15_fsm_17 assign process. ///
always @ (ap_sig_bdd_133)
begin
    if (ap_sig_bdd_133) begin
        ap_sig_cseq_ST_pp1_stg15_fsm_17 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg15_fsm_17 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp1_stg19_fsm_21 assign process. ///
always @ (ap_sig_bdd_142)
begin
    if (ap_sig_bdd_142) begin
        ap_sig_cseq_ST_pp1_stg19_fsm_21 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg19_fsm_21 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp1_stg1_fsm_3 assign process. ///
always @ (ap_sig_bdd_151)
begin
    if (ap_sig_bdd_151) begin
        ap_sig_cseq_ST_pp1_stg1_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg1_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp1_stg21_fsm_23 assign process. ///
always @ (ap_sig_bdd_397)
begin
    if (ap_sig_bdd_397) begin
        ap_sig_cseq_ST_pp1_stg21_fsm_23 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg21_fsm_23 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp1_stg2_fsm_4 assign process. ///
always @ (ap_sig_bdd_269)
begin
    if (ap_sig_bdd_269) begin
        ap_sig_cseq_ST_pp1_stg2_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg2_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp1_stg3_fsm_5 assign process. ///
always @ (ap_sig_bdd_289)
begin
    if (ap_sig_bdd_289) begin
        ap_sig_cseq_ST_pp1_stg3_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg3_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp1_stg4_fsm_6 assign process. ///
always @ (ap_sig_bdd_307)
begin
    if (ap_sig_bdd_307) begin
        ap_sig_cseq_ST_pp1_stg4_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg4_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp1_stg5_fsm_7 assign process. ///
always @ (ap_sig_bdd_162)
begin
    if (ap_sig_bdd_162) begin
        ap_sig_cseq_ST_pp1_stg5_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg5_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp1_stg6_fsm_8 assign process. ///
always @ (ap_sig_bdd_325)
begin
    if (ap_sig_bdd_325) begin
        ap_sig_cseq_ST_pp1_stg6_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg6_fsm_8 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp1_stg7_fsm_9 assign process. ///
always @ (ap_sig_bdd_340)
begin
    if (ap_sig_bdd_340) begin
        ap_sig_cseq_ST_pp1_stg7_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg7_fsm_9 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp1_stg8_fsm_10 assign process. ///
always @ (ap_sig_bdd_350)
begin
    if (ap_sig_bdd_350) begin
        ap_sig_cseq_ST_pp1_stg8_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg8_fsm_10 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp1_stg9_fsm_11 assign process. ///
always @ (ap_sig_bdd_359)
begin
    if (ap_sig_bdd_359) begin
        ap_sig_cseq_ST_pp1_stg9_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg9_fsm_11 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_43)
begin
    if (ap_sig_bdd_43) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st40_fsm_24 assign process. ///
always @ (ap_sig_bdd_945)
begin
    if (ap_sig_bdd_945) begin
        ap_sig_cseq_ST_st40_fsm_24 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st40_fsm_24 = ap_const_logic_0;
    end
end

/// grp_fu_400_p0 assign process. ///
always @ (C1_v_q0 or grp_fu_400_p2 or reg_417 or ap_sig_cseq_ST_pp1_stg11_fsm_13 or ap_reg_ppiten_pp1_it0 or ap_reg_ppiten_pp1_it1 or ap_sig_cseq_ST_pp1_stg15_fsm_17 or ap_sig_cseq_ST_pp1_stg19_fsm_21 or ap_sig_cseq_ST_pp1_stg1_fsm_3 or ap_sig_cseq_ST_pp1_stg6_fsm_8 or ap_sig_cseq_ST_pp1_stg7_fsm_9)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg6_fsm_8))) begin
        grp_fu_400_p0 = reg_417;
    end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg1_fsm_3)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg11_fsm_13) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg15_fsm_17)) | ((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg19_fsm_21)))) begin
        grp_fu_400_p0 = grp_fu_400_p2;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg7_fsm_9))) begin
        grp_fu_400_p0 = C1_v_q0;
    end else begin
        grp_fu_400_p0 = 'bx;
    end
end

/// grp_fu_400_p1 assign process. ///
always @ (ap_sig_cseq_ST_pp1_stg11_fsm_13 or ap_reg_ppiten_pp1_it0 or ap_reg_ppiten_pp1_it1 or ap_sig_cseq_ST_pp1_stg15_fsm_17 or ap_sig_cseq_ST_pp1_stg19_fsm_21 or ap_sig_cseq_ST_pp1_stg1_fsm_3 or ap_sig_cseq_ST_pp1_stg6_fsm_8 or tmp_31_reg_1383 or ap_sig_cseq_ST_pp1_stg7_fsm_9 or tmp_31_1_reg_1393 or tmp_31_2_reg_1398 or tmp_31_3_reg_1403 or tmp_31_4_reg_1408 or C1_bias_load_reg_1418)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg6_fsm_8))) begin
        grp_fu_400_p1 = C1_bias_load_reg_1418;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg1_fsm_3))) begin
        grp_fu_400_p1 = tmp_31_4_reg_1408;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg19_fsm_21))) begin
        grp_fu_400_p1 = tmp_31_3_reg_1403;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg15_fsm_17))) begin
        grp_fu_400_p1 = tmp_31_2_reg_1398;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg11_fsm_13) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0))) begin
        grp_fu_400_p1 = tmp_31_1_reg_1393;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg7_fsm_9))) begin
        grp_fu_400_p1 = tmp_31_reg_1383;
    end else begin
        grp_fu_400_p1 = 'bx;
    end
end

/// grp_fu_407_p0 assign process. ///
always @ (ap_reg_ppiten_pp1_it0 or ap_sig_cseq_ST_pp1_stg5_fsm_7 or inputimg_load_reg_1270 or inputimg_load_1_reg_1287 or ap_sig_cseq_ST_pp1_stg3_fsm_5 or inputimg_load_2_reg_1317 or inputimg_load_3_reg_1327 or ap_sig_cseq_ST_pp1_stg4_fsm_6 or inputimg_load_4_reg_1352 or ap_sig_cseq_ST_pp1_stg6_fsm_8 or ap_sig_cseq_ST_pp1_stg7_fsm_9)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg7_fsm_9)) begin
            grp_fu_407_p0 = inputimg_load_4_reg_1352;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg6_fsm_8)) begin
            grp_fu_407_p0 = inputimg_load_3_reg_1327;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg5_fsm_7)) begin
            grp_fu_407_p0 = inputimg_load_2_reg_1317;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg4_fsm_6)) begin
            grp_fu_407_p0 = inputimg_load_1_reg_1287;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg3_fsm_5)) begin
            grp_fu_407_p0 = inputimg_load_reg_1270;
        end else begin
            grp_fu_407_p0 = 'bx;
        end
    end else begin
        grp_fu_407_p0 = 'bx;
    end
end

/// grp_fu_407_p1 assign process. ///
always @ (C1_mapData_q0 or ap_reg_ppiten_pp1_it0 or ap_sig_cseq_ST_pp1_stg5_fsm_7 or ap_sig_cseq_ST_pp1_stg3_fsm_5 or C1_mapData_load_1_reg_1312 or C1_mapData_load_2_reg_1342 or ap_sig_cseq_ST_pp1_stg4_fsm_6 or C1_mapData_load_3_reg_1347 or C1_mapData_load_4_reg_1368 or ap_sig_cseq_ST_pp1_stg6_fsm_8 or ap_sig_cseq_ST_pp1_stg7_fsm_9)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg7_fsm_9)) begin
            grp_fu_407_p1 = C1_mapData_load_4_reg_1368;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg6_fsm_8)) begin
            grp_fu_407_p1 = C1_mapData_load_3_reg_1347;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg5_fsm_7)) begin
            grp_fu_407_p1 = C1_mapData_load_2_reg_1342;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg4_fsm_6)) begin
            grp_fu_407_p1 = C1_mapData_load_1_reg_1312;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg3_fsm_5)) begin
            grp_fu_407_p1 = C1_mapData_q0;
        end else begin
            grp_fu_407_p1 = 'bx;
        end
    end else begin
        grp_fu_407_p1 = 'bx;
    end
end

/// i_1_phi_fu_336_p4 assign process. ///
always @ (i_1_reg_332 or ap_reg_ppiten_pp1_it1 or ap_sig_cseq_ST_pp1_stg1_fsm_3 or ap_reg_ppstg_exitcond_flatten8_reg_1162_pp1_it1 or i_1_mid2_reg_1211)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg1_fsm_3) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten8_reg_1162_pp1_it1))) begin
        i_1_phi_fu_336_p4 = i_1_mid2_reg_1211;
    end else begin
        i_1_phi_fu_336_p4 = i_1_reg_332;
    end
end

/// i_phi_fu_278_p4 assign process. ///
always @ (i_reg_274 or ap_reg_ppiten_pp0_it2 or ap_reg_ppstg_exitcond_flatten_reg_1114_pp0_it1 or i_mid2_reg_1136)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1114_pp0_it1))) begin
        i_phi_fu_278_p4 = i_mid2_reg_1136;
    end else begin
        i_phi_fu_278_p4 = i_reg_274;
    end
end

/// indvar_flatten5_phi_fu_325_p4 assign process. ///
always @ (indvar_flatten5_reg_321 or ap_reg_ppiten_pp1_it1 or exitcond_flatten8_reg_1162 or ap_sig_cseq_ST_pp1_stg0_fsm_2 or indvar_flatten_next5_reg_1166)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (exitcond_flatten8_reg_1162 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_2))) begin
        indvar_flatten5_phi_fu_325_p4 = indvar_flatten_next5_reg_1166;
    end else begin
        indvar_flatten5_phi_fu_325_p4 = indvar_flatten5_reg_321;
    end
end

/// indvar_flatten6_phi_fu_348_p4 assign process. ///
always @ (indvar_flatten6_reg_344 or ap_reg_ppiten_pp1_it1 or exitcond_flatten8_reg_1162 or ap_sig_cseq_ST_pp1_stg0_fsm_2 or indvar_flatten_next7_reg_1206)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (exitcond_flatten8_reg_1162 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_2))) begin
        indvar_flatten6_phi_fu_348_p4 = indvar_flatten_next7_reg_1206;
    end else begin
        indvar_flatten6_phi_fu_348_p4 = indvar_flatten6_reg_344;
    end
end

/// indvar_flatten7_phi_fu_370_p4 assign process. ///
always @ (indvar_flatten7_reg_366 or ap_reg_ppiten_pp1_it1 or exitcond_flatten8_reg_1162 or ap_sig_cseq_ST_pp1_stg0_fsm_2 or indvar_flatten_next6_reg_1201)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (exitcond_flatten8_reg_1162 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_2))) begin
        indvar_flatten7_phi_fu_370_p4 = indvar_flatten_next6_reg_1201;
    end else begin
        indvar_flatten7_phi_fu_370_p4 = indvar_flatten7_reg_366;
    end
end

/// inputimg_address0 assign process. ///
always @ (ap_reg_ppiten_pp1_it0 or ap_sig_cseq_ST_pp1_stg1_fsm_3 or ap_sig_cseq_ST_pp1_stg2_fsm_4 or ap_sig_cseq_ST_pp1_stg3_fsm_5 or tmp_325_fu_824_p1 or tmp_331_fu_929_p1 or tmp_337_fu_978_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg3_fsm_5)) begin
            inputimg_address0 = tmp_337_fu_978_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg2_fsm_4)) begin
            inputimg_address0 = tmp_331_fu_929_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg1_fsm_3)) begin
            inputimg_address0 = tmp_325_fu_824_p1;
        end else begin
            inputimg_address0 = 'bx;
        end
    end else begin
        inputimg_address0 = 'bx;
    end
end

/// inputimg_address1 assign process. ///
always @ (ap_reg_ppiten_pp1_it0 or ap_sig_cseq_ST_pp1_stg1_fsm_3 or ap_sig_cseq_ST_pp1_stg2_fsm_4 or tmp_328_fu_853_p1 or tmp_334_fu_941_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg2_fsm_4)) begin
            inputimg_address1 = tmp_334_fu_941_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg1_fsm_3)) begin
            inputimg_address1 = tmp_328_fu_853_p1;
        end else begin
            inputimg_address1 = 'bx;
        end
    end else begin
        inputimg_address1 = 'bx;
    end
end

/// inputimg_ce0 assign process. ///
always @ (ap_reg_ppiten_pp1_it0 or ap_sig_cseq_ST_pp1_stg1_fsm_3 or ap_sig_cseq_ST_pp1_stg2_fsm_4 or ap_sig_cseq_ST_pp1_stg3_fsm_5)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg1_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg2_fsm_4)) | ((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg3_fsm_5)))) begin
        inputimg_ce0 = ap_const_logic_1;
    end else begin
        inputimg_ce0 = ap_const_logic_0;
    end
end

/// inputimg_ce1 assign process. ///
always @ (ap_reg_ppiten_pp1_it0 or ap_sig_cseq_ST_pp1_stg1_fsm_3 or ap_sig_cseq_ST_pp1_stg2_fsm_4)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg1_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg2_fsm_4)))) begin
        inputimg_ce1 = ap_const_logic_1;
    end else begin
        inputimg_ce1 = ap_const_logic_0;
    end
end

/// j_1_phi_fu_359_p4 assign process. ///
always @ (j_1_reg_355 or ap_reg_ppiten_pp1_it1 or exitcond_flatten8_reg_1162 or ap_sig_cseq_ST_pp1_stg0_fsm_2 or j_1_mid2_reg_1218)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (exitcond_flatten8_reg_1162 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_2))) begin
        j_1_phi_fu_359_p4 = j_1_mid2_reg_1218;
    end else begin
        j_1_phi_fu_359_p4 = j_1_reg_355;
    end
end

/// j_phi_fu_301_p4 assign process. ///
always @ (j_reg_297 or ap_reg_ppiten_pp0_it2 or ap_reg_ppstg_exitcond_flatten_reg_1114_pp0_it1 or j_mid2_reg_1146)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1114_pp0_it1))) begin
        j_phi_fu_301_p4 = j_mid2_reg_1146;
    end else begin
        j_phi_fu_301_p4 = j_reg_297;
    end
end

/// k_1_phi_fu_381_p4 assign process. ///
always @ (k_1_reg_377 or ap_reg_ppiten_pp1_it1 or exitcond_flatten8_reg_1162 or ap_sig_cseq_ST_pp1_stg0_fsm_2 or k_1_mid2_reg_1224)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (exitcond_flatten8_reg_1162 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_2))) begin
        k_1_phi_fu_381_p4 = k_1_mid2_reg_1224;
    end else begin
        k_1_phi_fu_381_p4 = k_1_reg_377;
    end
end

/// k_phi_fu_313_p4 assign process. ///
always @ (k_reg_309 or ap_reg_ppiten_pp0_it2 or ap_reg_ppstg_exitcond_flatten_reg_1114_pp0_it1 or k_2_reg_1157)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_flatten_reg_1114_pp0_it1))) begin
        k_phi_fu_313_p4 = k_2_reg_1157;
    end else begin
        k_phi_fu_313_p4 = k_reg_309;
    end
end

/// m_phi_fu_392_p4 assign process. ///
always @ (m_reg_388 or ap_reg_ppiten_pp1_it1 or exitcond_flatten8_reg_1162 or ap_sig_cseq_ST_pp1_stg0_fsm_2 or m_1_reg_1261)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (exitcond_flatten8_reg_1162 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_2))) begin
        m_phi_fu_392_p4 = m_1_reg_1261;
    end else begin
        m_phi_fu_392_p4 = m_reg_388;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or ap_reg_ppiten_pp1_it0 or ap_reg_ppiten_pp1_it1 or exitcond_flatten_fu_422_p2 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or exitcond_flatten8_fu_610_p2 or ap_sig_cseq_ST_pp1_stg12_fsm_14)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_pp0_stg0_fsm_1 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond_flatten_fu_422_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond_flatten_fu_422_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_2;
            end
        end
        ap_ST_pp1_stg0_fsm_2 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_const_lv1_0 == exitcond_flatten8_fu_610_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) begin
                ap_NS_fsm = ap_ST_pp1_stg1_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st40_fsm_24;
            end
        end
        ap_ST_pp1_stg1_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_pp1_stg2_fsm_4;
        end
        ap_ST_pp1_stg2_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_pp1_stg3_fsm_5;
        end
        ap_ST_pp1_stg3_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_pp1_stg4_fsm_6;
        end
        ap_ST_pp1_stg4_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_pp1_stg5_fsm_7;
        end
        ap_ST_pp1_stg5_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_pp1_stg6_fsm_8;
        end
        ap_ST_pp1_stg6_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_pp1_stg7_fsm_9;
        end
        ap_ST_pp1_stg7_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_pp1_stg8_fsm_10;
        end
        ap_ST_pp1_stg8_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_pp1_stg9_fsm_11;
        end
        ap_ST_pp1_stg9_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_pp1_stg10_fsm_12;
        end
        ap_ST_pp1_stg10_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_pp1_stg11_fsm_13;
        end
        ap_ST_pp1_stg11_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_pp1_stg12_fsm_14;
        end
        ap_ST_pp1_stg12_fsm_14 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg12_fsm_14) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it0))) begin
                ap_NS_fsm = ap_ST_pp1_stg13_fsm_15;
            end else begin
                ap_NS_fsm = ap_ST_st40_fsm_24;
            end
        end
        ap_ST_pp1_stg13_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_pp1_stg14_fsm_16;
        end
        ap_ST_pp1_stg14_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_pp1_stg15_fsm_17;
        end
        ap_ST_pp1_stg15_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_pp1_stg16_fsm_18;
        end
        ap_ST_pp1_stg16_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_pp1_stg17_fsm_19;
        end
        ap_ST_pp1_stg17_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_pp1_stg18_fsm_20;
        end
        ap_ST_pp1_stg18_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_pp1_stg19_fsm_21;
        end
        ap_ST_pp1_stg19_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_pp1_stg20_fsm_22;
        end
        ap_ST_pp1_stg20_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_pp1_stg21_fsm_23;
        end
        ap_ST_pp1_stg21_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_pp1_stg0_fsm_2;
        end
        ap_ST_st40_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C1_bias_address0 = tmp_s_fu_1062_p1;
assign C1_mapData_addr2_fu_951_p2 = (C1_mapData_addr7_reg_1275 + ap_const_lv32_2);
assign C1_mapData_addr3_fu_961_p2 = (C1_mapData_addr7_reg_1275 + ap_const_lv32_1);
assign C1_mapData_addr5_fu_833_p2 = (tmp_trn_cast_fu_800_p1 + p_shl82_cast1_fu_812_p1);
assign C1_mapData_addr6_cast_fu_880_p1 = C1_mapData_addr6_reg_1250;
assign C1_mapData_addr6_fu_839_p2 = (C1_mapData_addr5_fu_833_p2 + tmp_25_trn_cast_fu_829_p1);
assign C1_mapData_addr7_fu_894_p2 = (C1_mapData_addr6_cast_fu_880_p1 + p_shl53_fu_890_p1);
assign C1_mapData_addr8_fu_900_p2 = (C1_mapData_addr7_fu_894_p2 + ap_const_lv32_4);
assign C1_mapData_addr9_fu_911_p2 = (C1_mapData_addr7_fu_894_p2 + ap_const_lv32_3);
assign C1_v_addr10_fu_1045_p2 = ($signed(p_shl51_fu_1030_p1) - $signed(p_shl52_fu_1041_p1));
assign C1_v_addr11_fu_1051_p2 = ($signed(C1_v_addr10_fu_1045_p2) + $signed(tmp_18_trn_fu_1020_p1));
assign C1_v_addr12_cast_fu_1010_p1 = $signed(C1_v_addr6_fu_1004_p2);
assign C1_v_addr4_fu_593_p2 = ($signed(p_shl_fu_578_p1) - $signed(p_shl50_fu_589_p1));
assign C1_v_addr5_fu_599_p2 = ($signed(C1_v_addr4_fu_593_p2) + $signed(tmp_17_trn_fu_568_p1));
assign C1_v_addr6_fu_1004_p2 = (p_shl81_cast_fu_997_p1 - p_shl82_cast_fu_1001_p1);
assign C1_v_addr7_fu_1014_p2 = ($signed(C1_v_addr12_cast_fu_1010_p1) + $signed(tmp_15_trn_cast_fu_987_p1));
assign C1_v_addr8_cast_fu_552_p1 = $signed(C1_v_addr8_fu_546_p2);
assign C1_v_addr8_fu_546_p2 = (p_shl75_cast_fu_530_p1 - p_shl76_cast_fu_542_p1);
assign C1_v_addr9_fu_556_p2 = ($signed(C1_v_addr8_cast_fu_552_p1) + $signed(tmp_14_trn_cast_fu_518_p1));
assign C1_y_address0 = ap_reg_ppstg_tmp_323_reg_1373_pp1_it1;
assign C1_y_d0 = ((tmp_84_reg_1430[0:0]===1'b1)? temp_reg_1423: ap_const_lv32_0);

/// ap_sig_bdd_118 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_118 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end

/// ap_sig_bdd_133 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_133 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_11]);
end

/// ap_sig_bdd_142 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_142 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_15]);
end

/// ap_sig_bdd_151 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_151 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_162 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_162 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_173 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_173 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_213 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_213 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_269 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_269 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_289 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_289 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_307 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_307 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_325 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_325 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_340 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_340 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end

/// ap_sig_bdd_350 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_350 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end

/// ap_sig_bdd_359 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_359 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end

/// ap_sig_bdd_368 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_368 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end

/// ap_sig_bdd_397 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_397 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_17]);
end

/// ap_sig_bdd_43 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_43 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_456 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_456 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end

/// ap_sig_bdd_945 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_945 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_18]);
end
assign exitcond19_fu_642_p2 = (m_phi_fu_392_p4 == ap_const_lv3_5? 1'b1: 1'b0);
assign exitcond1_mid3_fu_692_p2 = (exitcond1_mid_fu_648_p2 & not_exitcond_flatten23_mid_fu_686_p2);
assign exitcond1_mid_fu_648_p2 = (exitcond19_fu_642_p2 & not_exitcond_flatten1_fu_636_p2);
assign exitcond5_mid_fu_472_p2 = (exitcond_fu_466_p2 & not_exitcond_flatten_fu_461_p2);
assign exitcond_flatten10_fu_622_p2 = (indvar_flatten6_phi_fu_348_p4 == ap_const_lv13_F50? 1'b1: 1'b0);
assign exitcond_flatten11_fu_654_p2 = (indvar_flatten7_phi_fu_370_p4 == ap_const_lv8_8C? 1'b1: 1'b0);
assign exitcond_flatten23_mid_fu_660_p2 = (exitcond_flatten11_fu_654_p2 & not_exitcond_flatten1_fu_636_p2);
assign exitcond_flatten23_not_fu_680_p2 = (exitcond_flatten11_fu_654_p2 ^ ap_const_lv1_1);
assign exitcond_flatten8_fu_610_p2 = (indvar_flatten5_phi_fu_325_p4 == ap_const_lv15_5BE0? 1'b1: 1'b0);
assign exitcond_flatten9_fu_434_p2 = (indvar_flatten_reg_286 == ap_const_lv10_310? 1'b1: 1'b0);
assign exitcond_flatten_fu_422_p2 = (indvar_flatten4_reg_263 == ap_const_lv13_1260? 1'b1: 1'b0);
assign exitcond_fu_466_p2 = (k_phi_fu_313_p4 == ap_const_lv5_1C? 1'b1: 1'b0);
assign grp_fu_400_ce = ap_const_logic_1;
assign grp_fu_407_ce = ap_const_logic_1;
assign i_10_fu_726_p2 = (i_1_phi_fu_336_p4 + ap_const_lv3_1);
assign i_1_mid2_fu_732_p3 = ((exitcond_flatten10_reg_1171[0:0]===1'b1)? i_10_fu_726_p2: i_1_phi_fu_336_p4);
assign i_mid2_fu_484_p3 = ((exitcond_flatten9_reg_1123[0:0]===1'b1)? i_s_fu_478_p2: i_phi_fu_278_p4);
assign i_s_fu_478_p2 = (i_phi_fu_278_p4 + ap_const_lv3_1);
assign ifzero_fu_864_p2 = (m_1_fu_858_p2 == ap_const_lv3_5? 1'b1: 1'b0);
assign indvar_flatten21_op_fu_698_p2 = (indvar_flatten7_phi_fu_370_p4 + ap_const_lv8_1);
assign indvar_flatten33_op_fu_712_p2 = (indvar_flatten6_phi_fu_348_p4 + ap_const_lv13_1);
assign indvar_flatten_next4_fu_428_p2 = (indvar_flatten4_reg_263 + ap_const_lv13_1);
assign indvar_flatten_next5_fu_616_p2 = (indvar_flatten5_phi_fu_325_p4 + ap_const_lv15_1);
assign indvar_flatten_next6_fu_704_p3 = ((tmp_319_fu_666_p2[0:0]===1'b1)? ap_const_lv8_1: indvar_flatten21_op_fu_698_p2);
assign indvar_flatten_next7_fu_718_p3 = ((exitcond_flatten10_fu_622_p2[0:0]===1'b1)? ap_const_lv13_1: indvar_flatten33_op_fu_712_p2);
assign indvar_flatten_next_fu_446_p3 = ((exitcond_flatten9_fu_434_p2[0:0]===1'b1)? ap_const_lv10_1: indvar_flatten_op_fu_440_p2);
assign indvar_flatten_op_fu_440_p2 = (indvar_flatten_reg_286 + ap_const_lv10_1);
assign j_1_mid2_fu_744_p3 = ((exitcond_flatten23_mid_reg_1183[0:0]===1'b1)? j_3_fu_739_p2: j_1_mid_reg_1177);
assign j_1_mid_fu_628_p3 = ((exitcond_flatten10_fu_622_p2[0:0]===1'b1)? ap_const_lv5_0: j_1_phi_fu_359_p4);
assign j_2_fu_491_p2 = (j_mid_fu_454_p3 + ap_const_lv5_1);
assign j_3_fu_739_p2 = (j_1_mid_reg_1177 + ap_const_lv5_1);
assign j_mid2_fu_510_p3 = ((exitcond5_mid_fu_472_p2[0:0]===1'b1)? j_2_fu_491_p2: j_mid_fu_454_p3);
assign j_mid_fu_454_p3 = ((exitcond_flatten9_reg_1123[0:0]===1'b1)? ap_const_lv5_0: j_phi_fu_301_p4);
assign k_1_mid2_fu_772_p3 = ((exitcond1_mid3_reg_1195[0:0]===1'b1)? k_3_fu_750_p2: k_1_mid_reg_1189);
assign k_1_mid_fu_672_p3 = ((tmp_319_fu_666_p2[0:0]===1'b1)? ap_const_lv5_0: k_1_phi_fu_381_p4);
assign k_2_fu_562_p2 = (k_mid2_fu_502_p3 + ap_const_lv5_1);
assign k_3_fu_750_p2 = (k_1_mid_reg_1189 + ap_const_lv5_1);
assign k_mid2_fu_502_p3 = ((tmp_fu_497_p2[0:0]===1'b1)? ap_const_lv5_0: k_phi_fu_313_p4);
assign m_1_fu_858_p2 = (m_mid2_fu_764_p3 + ap_const_lv3_1);
assign m_mid2_fu_764_p3 = ((tmp_147_fu_759_p2[0:0]===1'b1)? ap_const_lv3_0: m_reg_388);
assign not_exitcond_flatten1_fu_636_p2 = (exitcond_flatten10_fu_622_p2 ^ ap_const_lv1_1);
assign not_exitcond_flatten23_mid_fu_686_p2 = (exitcond_flatten10_fu_622_p2 | exitcond_flatten23_not_fu_680_p2);
assign not_exitcond_flatten_fu_461_p2 = (exitcond_flatten9_reg_1123 ^ ap_const_lv1_1);
assign notlhs_fu_1083_p2 = (tmp_80_fu_1069_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notrhs_fu_1089_p2 = (tmp_151_fu_1079_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign p_shl50_fu_589_p1 = $signed(tmp_146_fu_582_p3);
assign p_shl51_fu_1030_p1 = $signed(tmp_148_fu_1023_p3);
assign p_shl52_fu_1041_p1 = $signed(tmp_149_fu_1034_p3);
assign p_shl53_fu_890_p1 = tmp_150_fu_883_p3;
assign p_shl75_cast_fu_530_p1 = tmp_316_fu_522_p3;
assign p_shl76_cast_fu_542_p1 = tmp_317_fu_534_p3;
assign p_shl81_cast_fu_997_p1 = tmp_321_fu_990_p3;
assign p_shl82_cast1_fu_812_p1 = tmp_322_fu_804_p3;
assign p_shl82_cast_fu_1001_p1 = tmp_322_reg_1240;
assign p_shl_fu_578_p1 = $signed(tmp_145_fu_571_p3);
assign temp_to_int_fu_1066_p1 = temp_reg_1423;
assign tmp_145_fu_571_p3 = {{C1_v_addr9_reg_1151}, {ap_const_lv5_0}};
assign tmp_146_fu_582_p3 = {{C1_v_addr9_reg_1151}, {ap_const_lv2_0}};
assign tmp_147_fu_759_p2 = (tmp_320_fu_755_p2 | exitcond_flatten10_reg_1171);
assign tmp_148_fu_1023_p3 = {{C1_v_addr7_reg_1362}, {ap_const_lv5_0}};
assign tmp_149_fu_1034_p3 = {{C1_v_addr7_reg_1362}, {ap_const_lv2_0}};
assign tmp_14_trn_cast_fu_518_p1 = j_mid2_fu_510_p3;
assign tmp_150_fu_883_p3 = {{C1_mapData_addr6_reg_1250}, {ap_const_lv2_0}};
assign tmp_151_fu_1079_p1 = temp_to_int_fu_1066_p1[22:0];
assign tmp_15_trn_cast_fu_987_p1 = j_1_mid2_reg_1218;
assign tmp_17_trn_fu_568_p1 = k_mid2_reg_1141;
assign tmp_18_trn_fu_1020_p1 = k_1_mid2_reg_1224;
assign tmp_21_cast1_fu_784_p1 = m_mid2_fu_764_p3;
assign tmp_22_fu_788_p2 = (tmp_21_cast1_fu_784_p1 + j_1_mid2_fu_744_p3);
assign tmp_24_fu_794_p2 = ($signed(ap_const_lv3_4) - $signed(m_mid2_fu_764_p3));
assign tmp_25_trn_cast_fu_829_p1 = $unsigned(tmp_24_fu_794_p2);
assign tmp_27_1_fu_778_p2 = (k_1_mid2_fu_772_p3 + ap_const_lv5_1);
assign tmp_27_2_fu_870_p2 = (k_1_mid2_reg_1224 + ap_const_lv5_2);
assign tmp_27_3_fu_875_p2 = (k_1_mid2_reg_1224 + ap_const_lv5_3);
assign tmp_27_4_fu_946_p2 = (k_1_mid2_reg_1224 + ap_const_lv5_4);
assign tmp_316_fu_522_p3 = {{i_mid2_fu_484_p3}, {ap_const_lv5_0}};
assign tmp_317_fu_534_p3 = {{i_mid2_fu_484_p3}, {ap_const_lv2_0}};
assign tmp_318_fu_605_p1 = $unsigned(C1_v_addr5_fu_599_p2);
assign tmp_319_fu_666_p2 = (exitcond_flatten23_mid_fu_660_p2 | exitcond_flatten10_fu_622_p2);
assign tmp_320_fu_755_p2 = (exitcond1_mid3_reg_1195 | exitcond_flatten23_mid_reg_1183);
assign tmp_321_fu_990_p3 = {{i_1_mid2_reg_1211}, {ap_const_lv5_0}};
assign tmp_322_fu_804_p3 = {{i_1_mid2_fu_732_p3}, {ap_const_lv2_0}};
assign tmp_323_fu_1057_p1 = $unsigned(C1_v_addr11_fu_1051_p2);
assign tmp_324_fu_816_p3 = {{tmp_22_fu_788_p2}, {k_1_mid2_fu_772_p3}};
assign tmp_325_fu_824_p1 = tmp_324_fu_816_p3;
assign tmp_326_fu_906_p1 = C1_mapData_addr8_fu_900_p2;
assign tmp_327_fu_845_p3 = {{tmp_22_fu_788_p2}, {tmp_27_1_fu_778_p2}};
assign tmp_328_fu_853_p1 = tmp_327_fu_845_p3;
assign tmp_329_fu_917_p1 = C1_mapData_addr9_fu_911_p2;
assign tmp_330_fu_922_p3 = {{tmp_22_reg_1233}, {tmp_27_2_fu_870_p2}};
assign tmp_331_fu_929_p1 = tmp_330_fu_922_p3;
assign tmp_332_fu_956_p1 = C1_mapData_addr2_fu_951_p2;
assign tmp_333_fu_934_p3 = {{tmp_22_reg_1233}, {tmp_27_3_fu_875_p2}};
assign tmp_334_fu_941_p1 = tmp_333_fu_934_p3;
assign tmp_335_fu_966_p1 = C1_mapData_addr3_fu_961_p2;
assign tmp_336_fu_971_p3 = {{tmp_22_reg_1233}, {tmp_27_4_fu_946_p2}};
assign tmp_337_fu_978_p1 = tmp_336_fu_971_p3;
assign tmp_338_fu_983_p1 = C1_mapData_addr7_reg_1275;
assign tmp_80_fu_1069_p4 = {{temp_to_int_fu_1066_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_82_fu_1095_p2 = (notrhs_fu_1089_p2 | notlhs_fu_1083_p2);
assign tmp_83_fu_412_opcode = ap_const_lv5_2;
assign tmp_83_fu_412_p0 = temp_reg_1423;
assign tmp_83_fu_412_p1 = ap_const_lv32_0;
assign tmp_84_fu_1101_p2 = (tmp_82_fu_1095_p2 & tmp_83_fu_412_p2);
assign tmp_fu_497_p2 = (exitcond5_mid_fu_472_p2 | exitcond_flatten9_reg_1123);
assign tmp_s_fu_1062_p1 = ap_reg_ppstg_i_1_mid2_reg_1211_pp1_it1;
assign tmp_trn_cast_fu_800_p1 = i_1_mid2_fu_732_p3;
always @ (posedge ap_clk)
begin
    tmp_322_reg_1240[1:0] <= 2'b00;
    tmp_323_reg_1373[63:32] <= 32'b00000000000000000000000000000000;
    ap_reg_ppstg_tmp_323_reg_1373_pp1_it1[63:32] <= 32'b00000000000000000000000000000000;
end



endmodule //dateport_C1_conv

