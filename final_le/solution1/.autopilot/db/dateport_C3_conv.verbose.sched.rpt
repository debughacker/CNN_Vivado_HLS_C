

================================================================
== Vivado HLS Report for 'dateport_C3_conv'
================================================================
* Date:           Tue May 09 23:54:53 2017

* Version:        2015.2 (Build 1266856 on Fri Jun 26 16:57:37 PM 2015)
* Project:        final_le
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     14.51|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +---------+---------+---------+---------+---------+
    |      Latency      |      Interval     | Pipeline|
    |   min   |   max   |   min   |   max   |   Type  |
    +---------+---------+---------+---------+---------+
    |  1072728|  1072728|  1072728|  1072728|   none  |
    +---------+---------+---------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |                        |      Latency      | Iteration|  Initiation Interval  |  Trip |          |
        |        Loop Name       |   min   |   max   |  Latency |  achieved |   target  | Count | Pipelined|
        +------------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |- Loop 1                |     1952|     1952|       122|          -|          -|     16|    no    |
        | + Loop 1.1             |      120|      120|        12|          -|          -|     10|    no    |
        |  ++ Loop 1.1.1         |       10|       10|         1|          -|          -|     10|    no    |
        |- L_L_L_C3_conv_label1  |  1056005|  1056005|        28|         22|          1|  48000|    yes   |
        |- Loop 3                |    14768|    14768|       923|          -|          -|     16|    no    |
        | + Loop 3.1             |      920|      920|        92|          -|          -|     10|    no    |
        |  ++ Loop 3.1.1         |       90|       90|         9|          -|          -|     10|    no    |
        +------------------------+---------+---------+----------+-----------+-----------+-------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 22, depth = 28


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 44
* Pipeline: 1
  Pipeline-0: II = 22, D = 28, States = { 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	5  / (exitcond3)
	3  / (!exitcond3)
3 --> 
	2  / (exitcond5)
	4  / (!exitcond5)
4 --> 
	3  / (exitcond9)
	4  / (!exitcond9)
5 --> 
	33  / (exitcond_flatten3)
	6  / (!exitcond_flatten3)
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	5  / true
33 --> 
	34  / (!exitcond2)
34 --> 
	35  / true
35 --> 
	33  / (exitcond1)
	36  / (!exitcond1)
36 --> 
	35  / (exitcond)
	37  / (!exitcond)
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	36  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: stg_45 [1/1] 1.57ns
:0  br label %.loopexit


 <State 2>: 3.48ns
ST_2: i [1/1] 0.00ns
.loopexit:0  %i = phi i5 [ 0, %0 ], [ %i_3, %.preheader20 ]

ST_2: exitcond3 [1/1] 1.91ns
.loopexit:1  %exitcond3 = icmp eq i5 %i, -16

ST_2: empty [1/1] 0.00ns
.loopexit:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind

ST_2: i_3 [1/1] 1.72ns
.loopexit:3  %i_3 = add i5 %i, 1

ST_2: stg_50 [1/1] 1.57ns
.loopexit:4  br i1 %exitcond3, label %.preheader14, label %.preheader20.preheader

ST_2: tmp [1/1] 0.00ns
.preheader20.preheader:0  %tmp = call i8 @_ssdm_op_BitConcatenate.i8.i5.i3(i5 %i, i3 0)

ST_2: p_shl_cast [1/1] 0.00ns
.preheader20.preheader:1  %p_shl_cast = zext i8 %tmp to i9

ST_2: tmp_35 [1/1] 0.00ns
.preheader20.preheader:2  %tmp_35 = call i6 @_ssdm_op_BitConcatenate.i6.i5.i1(i5 %i, i1 false)

ST_2: p_shl10_cast [1/1] 0.00ns
.preheader20.preheader:3  %p_shl10_cast = zext i6 %tmp_35 to i9

ST_2: C3_v_addr1 [1/1] 1.72ns
.preheader20.preheader:4  %C3_v_addr1 = add i9 %p_shl10_cast, %p_shl_cast

ST_2: stg_56 [1/1] 1.57ns
.preheader20.preheader:5  br label %.preheader20


 <State 3>: 3.68ns
ST_3: j [1/1] 0.00ns
.preheader20:0  %j = phi i4 [ 0, %.preheader20.preheader ], [ %j_3, %.preheader19 ]

ST_3: exitcond5 [1/1] 1.88ns
.preheader20:1  %exitcond5 = icmp eq i4 %j, -6

ST_3: empty_13 [1/1] 0.00ns
.preheader20:2  %empty_13 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10) nounwind

ST_3: j_3 [1/1] 0.80ns
.preheader20:3  %j_3 = add i4 %j, 1

ST_3: stg_61 [1/1] 0.00ns
.preheader20:4  br i1 %exitcond5, label %.loopexit, label %.preheader19.preheader

ST_3: tmp_20_trn_cast [1/1] 0.00ns
.preheader19.preheader:0  %tmp_20_trn_cast = zext i4 %j to i9

ST_3: C3_v_addr7 [1/1] 1.84ns
.preheader19.preheader:1  %C3_v_addr7 = add i9 %C3_v_addr1, %tmp_20_trn_cast

ST_3: tmp_64 [1/1] 0.00ns
.preheader19.preheader:2  %tmp_64 = call i12 @_ssdm_op_BitConcatenate.i12.i9.i3(i9 %C3_v_addr7, i3 0)

ST_3: p_shl5 [1/1] 0.00ns
.preheader19.preheader:3  %p_shl5 = zext i12 %tmp_64 to i32

ST_3: tmp_65 [1/1] 0.00ns
.preheader19.preheader:4  %tmp_65 = call i10 @_ssdm_op_BitConcatenate.i10.i9.i1(i9 %C3_v_addr7, i1 false)

ST_3: p_shl6 [1/1] 0.00ns
.preheader19.preheader:5  %p_shl6 = zext i10 %tmp_65 to i32

ST_3: C3_v_addr8 [1/1] 1.84ns
.preheader19.preheader:6  %C3_v_addr8 = add i32 %p_shl6, %p_shl5

ST_3: stg_69 [1/1] 1.57ns
.preheader19.preheader:7  br label %.preheader19


 <State 4>: 4.67ns
ST_4: k [1/1] 0.00ns
.preheader19:0  %k = phi i4 [ %k_3, %1 ], [ 0, %.preheader19.preheader ]

ST_4: exitcond9 [1/1] 1.88ns
.preheader19:1  %exitcond9 = icmp eq i4 %k, -6

ST_4: empty_14 [1/1] 0.00ns
.preheader19:2  %empty_14 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10) nounwind

ST_4: k_3 [1/1] 0.80ns
.preheader19:3  %k_3 = add i4 %k, 1

ST_4: stg_74 [1/1] 0.00ns
.preheader19:4  br i1 %exitcond9, label %.preheader20, label %1

ST_4: tmp_23_trn [1/1] 0.00ns
:0  %tmp_23_trn = zext i4 %k to i32

ST_4: C3_v_addr10 [1/1] 1.96ns
:1  %C3_v_addr10 = add i32 %C3_v_addr8, %tmp_23_trn

ST_4: tmp_68 [1/1] 0.00ns
:2  %tmp_68 = zext i32 %C3_v_addr10 to i64

ST_4: C3_v_addr [1/1] 0.00ns
:3  %C3_v_addr = getelementptr [1600 x float]* @C3_v, i64 0, i64 %tmp_68

ST_4: stg_79 [1/1] 2.71ns
:4  store float 0.000000e+00, float* %C3_v_addr, align 4

ST_4: stg_80 [1/1] 0.00ns
:5  br label %.preheader19


 <State 5>: 7.62ns
ST_5: indvar_flatten1 [1/1] 0.00ns
.preheader14:0  %indvar_flatten1 = phi i16 [ %indvar_flatten_next3, %.preheader18 ], [ 0, %.loopexit ]

ST_5: i_1 [1/1] 0.00ns
.preheader14:1  %i_1 = phi i5 [ %i_1_mid2, %.preheader18 ], [ 0, %.loopexit ]

ST_5: indvar_flatten2 [1/1] 0.00ns
.preheader14:2  %indvar_flatten2 = phi i12 [ %indvar_flatten_next2, %.preheader18 ], [ 0, %.loopexit ]

ST_5: j_1 [1/1] 0.00ns
.preheader14:3  %j_1 = phi i3 [ %j_1_mid2, %.preheader18 ], [ 0, %.loopexit ]

ST_5: indvar_flatten3 [1/1] 0.00ns
.preheader14:4  %indvar_flatten3 = phi i10 [ %indvar_flatten_next1, %.preheader18 ], [ 0, %.loopexit ]

ST_5: k_1 [1/1] 0.00ns
.preheader14:5  %k_1 = phi i4 [ %k_1_mid2, %.preheader18 ], [ 0, %.loopexit ]

ST_5: indvar_flatten [1/1] 0.00ns
.preheader14:6  %indvar_flatten = phi i7 [ %indvar_flatten_next, %.preheader18 ], [ 0, %.loopexit ]

ST_5: m [1/1] 0.00ns
.preheader14:7  %m = phi i4 [ %m_mid2, %.preheader18 ], [ 0, %.loopexit ]

ST_5: n [1/1] 0.00ns
.preheader14:8  %n = phi i3 [ %n_1, %.preheader18 ], [ 0, %.loopexit ]

ST_5: exitcond_flatten3 [1/1] 2.28ns
.preheader14:9  %exitcond_flatten3 = icmp eq i16 %indvar_flatten1, -17536

ST_5: indvar_flatten_next3 [1/1] 1.96ns
.preheader14:10  %indvar_flatten_next3 = add i16 %indvar_flatten1, 1

ST_5: stg_92 [1/1] 1.57ns
.preheader14:11  br i1 %exitcond_flatten3, label %.preheader13, label %.preheader18

ST_5: exitcond_flatten [1/1] 2.14ns
.preheader18:2  %exitcond_flatten = icmp eq i12 %indvar_flatten2, -1096

ST_5: j_1_mid [1/1] 1.37ns
.preheader18:3  %j_1_mid = select i1 %exitcond_flatten, i3 0, i3 %j_1

ST_5: not_exitcond_flatten [1/1] 1.37ns
.preheader18:4  %not_exitcond_flatten = xor i1 %exitcond_flatten, true

ST_5: exitcond4 [1/1] 1.62ns
.preheader18:5  %exitcond4 = icmp eq i3 %n, -3

ST_5: exitcond4_mid [1/1] 1.37ns
.preheader18:6  %exitcond4_mid = and i1 %exitcond4, %not_exitcond_flatten

ST_5: exitcond_flatten1 [1/1] 1.97ns
.preheader18:7  %exitcond_flatten1 = icmp eq i7 %indvar_flatten, 50

ST_5: exitcond_flatten_mid [1/1] 1.37ns
.preheader18:8  %exitcond_flatten_mid = and i1 %exitcond_flatten1, %not_exitcond_flatten

ST_5: exitcond_flatten2 [1/1] 2.07ns
.preheader18:9  %exitcond_flatten2 = icmp eq i10 %indvar_flatten3, 500

ST_5: exitcond_flatten15_mid [1/1] 1.37ns
.preheader18:10  %exitcond_flatten15_mid = and i1 %exitcond_flatten2, %not_exitcond_flatten

ST_5: i_s [1/1] 1.72ns
.preheader18:11  %i_s = add i5 1, %i_1

ST_5: i_1_mid2 [1/1] 1.37ns
.preheader18:12  %i_1_mid2 = select i1 %exitcond_flatten, i5 %i_s, i5 %i_1

ST_5: tmp_36 [1/1] 1.37ns
.preheader18:15  %tmp_36 = or i1 %exitcond_flatten15_mid, %exitcond_flatten

ST_5: exitcond_flatten15_not [1/1] 1.37ns
.preheader18:17  %exitcond_flatten15_not = xor i1 %exitcond_flatten2, true

ST_5: not_exitcond_flatten15_mid [1/1] 1.37ns
.preheader18:18  %not_exitcond_flatten15_mid = or i1 %exitcond_flatten, %exitcond_flatten15_not

ST_5: exitcond4_mid1 [1/1] 1.37ns
.preheader18:19  %exitcond4_mid1 = and i1 %exitcond4_mid, %not_exitcond_flatten15_mid

ST_5: exitcond_flatten_mid1 [1/1] 1.37ns
.preheader18:20  %exitcond_flatten_mid1 = and i1 %exitcond_flatten_mid, %not_exitcond_flatten15_mid

ST_5: not_exitcond_flatten_mid [1/1] 1.37ns
.preheader18:27  %not_exitcond_flatten_mid = xor i1 %exitcond_flatten_mid1, true

ST_5: indvar_flatten13_op [1/1] 1.84ns
.preheader18:146  %indvar_flatten13_op = add i10 1, %indvar_flatten3

ST_5: indvar_flatten_next1 [1/1] 1.37ns
.preheader18:147  %indvar_flatten_next1 = select i1 %tmp_36, i10 1, i10 %indvar_flatten13_op

ST_5: indvar_flatten33_op [1/1] 1.84ns
.preheader18:148  %indvar_flatten33_op = add i12 1, %indvar_flatten2

ST_5: indvar_flatten_next2 [1/1] 1.37ns
.preheader18:149  %indvar_flatten_next2 = select i1 %exitcond_flatten, i12 1, i12 %indvar_flatten33_op


 <State 6>: 8.01ns
ST_6: j_4 [1/1] 0.80ns
.preheader18:13  %j_4 = add i3 1, %j_1_mid

ST_6: k_1_mid [1/1] 1.37ns
.preheader18:16  %k_1_mid = select i1 %tmp_36, i4 0, i4 %k_1

ST_6: j_1_mid2 [1/1] 1.37ns
.preheader18:21  %j_1_mid2 = select i1 %exitcond_flatten15_mid, i3 %j_4, i3 %j_1_mid

ST_6: k_5 [1/1] 0.80ns
.preheader18:22  %k_5 = add i4 1, %k_1_mid

ST_6: tmp_37 [1/1] 1.37ns
.preheader18:24  %tmp_37 = or i1 %exitcond_flatten_mid1, %exitcond_flatten15_mid

ST_6: tmp_38 [1/1] 1.37ns
.preheader18:25  %tmp_38 = or i1 %tmp_37, %exitcond_flatten

ST_6: m_mid1 [1/1] 1.37ns
.preheader18:26  %m_mid1 = select i1 %tmp_38, i4 0, i4 %m

ST_6: exitcond4_mid2 [1/1] 1.37ns
.preheader18:28  %exitcond4_mid2 = and i1 %exitcond4_mid1, %not_exitcond_flatten_mid

ST_6: k_1_mid2 [1/1] 1.37ns
.preheader18:29  %k_1_mid2 = select i1 %exitcond_flatten_mid1, i4 %k_5, i4 %k_1_mid

ST_6: m_1 [1/1] 0.80ns
.preheader18:30  %m_1 = add i4 1, %m_mid1

ST_6: tmp_39 [1/1] 1.37ns
.preheader18:32  %tmp_39 = or i1 %exitcond4_mid2, %exitcond_flatten_mid1

ST_6: tmp_40 [1/1] 1.37ns
.preheader18:33  %tmp_40 = or i1 %tmp_39, %tmp_36

ST_6: n_mid2 [1/1] 1.37ns
.preheader18:34  %n_mid2 = select i1 %tmp_40, i3 0, i3 %n

ST_6: m_mid2 [1/1] 1.37ns
.preheader18:35  %m_mid2 = select i1 %exitcond4_mid2, i4 %m_1, i4 %m_mid1

ST_6: tmp_38_cast4 [1/1] 0.00ns
.preheader18:43  %tmp_38_cast4 = zext i3 %n_mid2 to i4

ST_6: tmp_s [1/1] 0.80ns
.preheader18:44  %tmp_s = add i4 %k_1_mid2, %tmp_38_cast4

ST_6: tmp_20 [1/1] 0.80ns
.preheader18:45  %tmp_20 = sub i3 -4, %n_mid2

ST_6: tmp_24_trn_cast [1/1] 0.00ns
.preheader18:46  %tmp_24_trn_cast = zext i4 %k_1_mid2 to i9

ST_6: tmp_41 [1/1] 0.00ns
.preheader18:47  %tmp_41 = call i8 @_ssdm_op_BitConcatenate.i8.i5.i3(i5 %i_1_mid2, i3 0)

ST_6: p_shl11_cast [1/1] 0.00ns
.preheader18:48  %p_shl11_cast = zext i8 %tmp_41 to i9

ST_6: tmp_42 [1/1] 0.00ns
.preheader18:49  %tmp_42 = call i6 @_ssdm_op_BitConcatenate.i6.i5.i1(i5 %i_1_mid2, i1 false)

ST_6: p_shl12_cast [1/1] 0.00ns
.preheader18:50  %p_shl12_cast = zext i6 %tmp_42 to i9

ST_6: C3_v_addr2 [1/1] 1.37ns
.preheader18:51  %C3_v_addr2 = add i9 %p_shl11_cast, %p_shl12_cast

ST_6: C3_v_addr3 [1/1] 1.37ns
.preheader18:52  %C3_v_addr3 = add i9 %tmp_24_trn_cast, %C3_v_addr2

ST_6: tmp_21_trn_cast [1/1] 0.00ns
.preheader18:63  %tmp_21_trn_cast = zext i3 %j_1_mid2 to i10

ST_6: tmp_32_trn_cast [1/1] 0.00ns
.preheader18:64  %tmp_32_trn_cast = zext i4 %tmp_s to i9

ST_6: tmp_46 [1/1] 0.00ns
.preheader18:65  %tmp_46 = call i7 @_ssdm_op_BitConcatenate.i7.i3.i4(i3 %j_1_mid2, i4 0)

ST_6: p_shl15_cast [1/1] 0.00ns
.preheader18:66  %p_shl15_cast = zext i7 %tmp_46 to i8

ST_6: tmp_47 [1/1] 0.00ns
.preheader18:67  %tmp_47 = call i4 @_ssdm_op_BitConcatenate.i4.i3.i1(i3 %j_1_mid2, i1 false)

ST_6: p_shl16_cast [1/1] 0.00ns
.preheader18:68  %p_shl16_cast = zext i4 %tmp_47 to i8

ST_6: S2_y_addr5 [1/1] 1.72ns
.preheader18:69  %S2_y_addr5 = sub i8 %p_shl15_cast, %p_shl16_cast

ST_6: S2_y_addr5_cast [1/1] 0.00ns
.preheader18:70  %S2_y_addr5_cast = sext i8 %S2_y_addr5 to i9

ST_6: S2_y_addr6 [1/1] 1.72ns
.preheader18:71  %S2_y_addr6 = add i9 %tmp_32_trn_cast, %S2_y_addr5_cast

ST_6: C3_mapData_addr1 [1/1] 1.72ns
.preheader18:81  %C3_mapData_addr1 = sub i9 %p_shl11_cast, %p_shl12_cast

ST_6: C3_mapData_addr1_cast [1/1] 0.00ns
.preheader18:82  %C3_mapData_addr1_cast = sext i9 %C3_mapData_addr1 to i10

ST_6: C3_mapData_addr2 [1/1] 1.84ns
.preheader18:83  %C3_mapData_addr2 = add i10 %tmp_21_trn_cast, %C3_mapData_addr1_cast

ST_6: C3_mapData_addr2_cast [1/1] 0.00ns
.preheader18:84  %C3_mapData_addr2_cast = sext i10 %C3_mapData_addr2 to i32

ST_6: tmp_34_trn [1/1] 0.00ns
.preheader18:85  %tmp_34_trn = zext i3 %tmp_20 to i32

ST_6: tmp_51 [1/1] 0.00ns
.preheader18:86  %tmp_51 = call i12 @_ssdm_op_BitConcatenate.i12.i10.i2(i10 %C3_mapData_addr2, i2 0)

ST_6: p_shl4 [1/1] 0.00ns
.preheader18:87  %p_shl4 = sext i12 %tmp_51 to i32

ST_6: C3_mapData_addr3 [1/1] 1.73ns
.preheader18:88  %C3_mapData_addr3 = add i32 %p_shl4, %C3_mapData_addr2_cast

ST_6: C3_mapData_addr4 [1/1] 1.73ns
.preheader18:89  %C3_mapData_addr4 = add i32 %tmp_34_trn, %C3_mapData_addr3

ST_6: n_1 [1/1] 0.80ns
.preheader18:143  %n_1 = add i3 1, %n_mid2

ST_6: indvar_flatten_op [1/1] 1.72ns
.preheader18:144  %indvar_flatten_op = add i7 1, %indvar_flatten

ST_6: indvar_flatten_next [1/1] 1.37ns
.preheader18:145  %indvar_flatten_next = select i1 %tmp_38, i7 1, i7 %indvar_flatten_op


 <State 7>: 6.87ns
ST_7: tmp_67_1 [1/1] 0.80ns
.preheader18:36  %tmp_67_1 = add i4 1, %m_mid2

ST_7: tmp_30_trn [1/1] 0.00ns
.preheader18:53  %tmp_30_trn = zext i4 %m_mid2 to i32

ST_7: tmp_43 [1/1] 0.00ns
.preheader18:54  %tmp_43 = call i12 @_ssdm_op_BitConcatenate.i12.i9.i3(i9 %C3_v_addr3, i3 0)

ST_7: p_shl [1/1] 0.00ns
.preheader18:55  %p_shl = zext i12 %tmp_43 to i32

ST_7: tmp_44 [1/1] 0.00ns
.preheader18:56  %tmp_44 = call i10 @_ssdm_op_BitConcatenate.i10.i9.i1(i9 %C3_v_addr3, i1 false)

ST_7: p_shl1 [1/1] 0.00ns
.preheader18:57  %p_shl1 = zext i10 %tmp_44 to i32

ST_7: C3_v_addr4 [1/1] 1.73ns
.preheader18:58  %C3_v_addr4 = add i32 %p_shl, %p_shl1

ST_7: C3_v_addr5 [1/1] 1.73ns
.preheader18:59  %C3_v_addr5 = add i32 %tmp_30_trn, %C3_v_addr4

ST_7: tmp_45 [1/1] 0.00ns
.preheader18:60  %tmp_45 = zext i32 %C3_v_addr5 to i64

ST_7: C3_v_addr_2 [1/1] 0.00ns
.preheader18:61  %C3_v_addr_2 = getelementptr [1600 x float]* @C3_v, i64 0, i64 %tmp_45

ST_7: tmp_48 [1/1] 0.00ns
.preheader18:72  %tmp_48 = call i13 @_ssdm_op_BitConcatenate.i13.i9.i4(i9 %S2_y_addr6, i4 0)

ST_7: p_shl2 [1/1] 0.00ns
.preheader18:73  %p_shl2 = sext i13 %tmp_48 to i32

ST_7: tmp_49 [1/1] 0.00ns
.preheader18:74  %tmp_49 = call i10 @_ssdm_op_BitConcatenate.i10.i9.i1(i9 %S2_y_addr6, i1 false)

ST_7: p_shl3 [1/1] 0.00ns
.preheader18:75  %p_shl3 = sext i10 %tmp_49 to i32

ST_7: S2_y_addr7 [1/1] 1.96ns
.preheader18:76  %S2_y_addr7 = sub i32 %p_shl2, %p_shl3

ST_7: S2_y_addr8 [1/1] 1.96ns
.preheader18:77  %S2_y_addr8 = add i32 %tmp_30_trn, %S2_y_addr7

ST_7: tmp_50 [1/1] 0.00ns
.preheader18:78  %tmp_50 = zext i32 %S2_y_addr8 to i64

ST_7: S2_y_addr [1/1] 0.00ns
.preheader18:79  %S2_y_addr = getelementptr [1176 x float]* @S2_y, i64 0, i64 %tmp_50

ST_7: S2_y_load [2/2] 2.71ns
.preheader18:80  %S2_y_load = load float* %S2_y_addr, align 4

ST_7: tmp_52 [1/1] 0.00ns
.preheader18:90  %tmp_52 = shl i32 %C3_mapData_addr4, 2

ST_7: C3_mapData_addr5 [1/1] 2.08ns
.preheader18:91  %C3_mapData_addr5 = add i32 %tmp_52, %C3_mapData_addr4

ST_7: C3_mapData_addr6 [1/1] 2.08ns
.preheader18:92  %C3_mapData_addr6 = add i32 4, %C3_mapData_addr5

ST_7: tmp_53 [1/1] 0.00ns
.preheader18:93  %tmp_53 = zext i32 %C3_mapData_addr6 to i64

ST_7: C3_mapData_addr [1/1] 0.00ns
.preheader18:94  %C3_mapData_addr = getelementptr [2400 x float]* @C3_mapData, i64 0, i64 %tmp_53

ST_7: C3_mapData_load [2/2] 2.71ns
.preheader18:95  %C3_mapData_load = load float* %C3_mapData_addr, align 4

ST_7: tmp_68_1_trn [1/1] 0.00ns
.preheader18:98  %tmp_68_1_trn = zext i4 %tmp_67_1 to i32

ST_7: S2_y_addr9 [1/1] 1.96ns
.preheader18:99  %S2_y_addr9 = add i32 %tmp_68_1_trn, %S2_y_addr7

ST_7: tmp_54 [1/1] 0.00ns
.preheader18:100  %tmp_54 = zext i32 %S2_y_addr9 to i64

ST_7: S2_y_addr_1 [1/1] 0.00ns
.preheader18:101  %S2_y_addr_1 = getelementptr [1176 x float]* @S2_y, i64 0, i64 %tmp_54

ST_7: S2_y_load_1 [2/2] 2.71ns
.preheader18:102  %S2_y_load_1 = load float* %S2_y_addr_1, align 4

ST_7: C3_mapData_addr7 [1/1] 2.08ns
.preheader18:103  %C3_mapData_addr7 = add i32 3, %C3_mapData_addr5

ST_7: tmp_55 [1/1] 0.00ns
.preheader18:104  %tmp_55 = zext i32 %C3_mapData_addr7 to i64

ST_7: C3_mapData_addr_1 [1/1] 0.00ns
.preheader18:105  %C3_mapData_addr_1 = getelementptr [2400 x float]* @C3_mapData, i64 0, i64 %tmp_55

ST_7: C3_mapData_load_1 [2/2] 2.71ns
.preheader18:106  %C3_mapData_load_1 = load float* %C3_mapData_addr_1, align 4


 <State 8>: 8.41ns
ST_8: tmp_67_2 [1/1] 0.80ns
.preheader18:37  %tmp_67_2 = add i4 2, %m_mid2

ST_8: tmp_67_3 [1/1] 0.80ns
.preheader18:38  %tmp_67_3 = add i4 3, %m_mid2

ST_8: tmp_67_4 [1/1] 0.80ns
.preheader18:39  %tmp_67_4 = add i4 4, %m_mid2

ST_8: S2_y_load [1/2] 2.71ns
.preheader18:80  %S2_y_load = load float* %S2_y_addr, align 4

ST_8: C3_mapData_load [1/2] 2.71ns
.preheader18:95  %C3_mapData_load = load float* %C3_mapData_addr, align 4

ST_8: tmp_21 [4/4] 5.70ns
.preheader18:96  %tmp_21 = fmul float %S2_y_load, %C3_mapData_load

ST_8: S2_y_load_1 [1/2] 2.71ns
.preheader18:102  %S2_y_load_1 = load float* %S2_y_addr_1, align 4

ST_8: C3_mapData_load_1 [1/2] 2.71ns
.preheader18:106  %C3_mapData_load_1 = load float* %C3_mapData_addr_1, align 4

ST_8: tmp_68_2_trn [1/1] 0.00ns
.preheader18:109  %tmp_68_2_trn = zext i4 %tmp_67_2 to i32

ST_8: S2_y_addr2 [1/1] 1.96ns
.preheader18:110  %S2_y_addr2 = add i32 %tmp_68_2_trn, %S2_y_addr7

ST_8: tmp_56 [1/1] 0.00ns
.preheader18:111  %tmp_56 = zext i32 %S2_y_addr2 to i64

ST_8: S2_y_addr_2 [1/1] 0.00ns
.preheader18:112  %S2_y_addr_2 = getelementptr [1176 x float]* @S2_y, i64 0, i64 %tmp_56

ST_8: S2_y_load_2 [2/2] 2.71ns
.preheader18:113  %S2_y_load_2 = load float* %S2_y_addr_2, align 4

ST_8: C3_mapData_addr8 [1/1] 2.08ns
.preheader18:114  %C3_mapData_addr8 = add i32 2, %C3_mapData_addr5

ST_8: tmp_57 [1/1] 0.00ns
.preheader18:115  %tmp_57 = zext i32 %C3_mapData_addr8 to i64

ST_8: C3_mapData_addr_2 [1/1] 0.00ns
.preheader18:116  %C3_mapData_addr_2 = getelementptr [2400 x float]* @C3_mapData, i64 0, i64 %tmp_57

ST_8: C3_mapData_load_2 [2/2] 2.71ns
.preheader18:117  %C3_mapData_load_2 = load float* %C3_mapData_addr_2, align 4

ST_8: tmp_68_3_trn [1/1] 0.00ns
.preheader18:120  %tmp_68_3_trn = zext i4 %tmp_67_3 to i32

ST_8: S2_y_addr3 [1/1] 1.96ns
.preheader18:121  %S2_y_addr3 = add i32 %tmp_68_3_trn, %S2_y_addr7

ST_8: tmp_58 [1/1] 0.00ns
.preheader18:122  %tmp_58 = zext i32 %S2_y_addr3 to i64

ST_8: S2_y_addr_3 [1/1] 0.00ns
.preheader18:123  %S2_y_addr_3 = getelementptr [1176 x float]* @S2_y, i64 0, i64 %tmp_58

ST_8: S2_y_load_3 [2/2] 2.71ns
.preheader18:124  %S2_y_load_3 = load float* %S2_y_addr_3, align 4

ST_8: C3_mapData_addr9 [1/1] 2.08ns
.preheader18:125  %C3_mapData_addr9 = add i32 1, %C3_mapData_addr5

ST_8: tmp_59 [1/1] 0.00ns
.preheader18:126  %tmp_59 = zext i32 %C3_mapData_addr9 to i64

ST_8: C3_mapData_addr_3 [1/1] 0.00ns
.preheader18:127  %C3_mapData_addr_3 = getelementptr [2400 x float]* @C3_mapData, i64 0, i64 %tmp_59

ST_8: C3_mapData_load_3 [2/2] 2.71ns
.preheader18:128  %C3_mapData_load_3 = load float* %C3_mapData_addr_3, align 4

ST_8: tmp_68_4_trn [1/1] 0.00ns
.preheader18:131  %tmp_68_4_trn = zext i4 %tmp_67_4 to i32

ST_8: S2_y_addr4 [1/1] 1.96ns
.preheader18:132  %S2_y_addr4 = add i32 %tmp_68_4_trn, %S2_y_addr7


 <State 9>: 5.70ns
ST_9: tmp_21 [3/4] 5.70ns
.preheader18:96  %tmp_21 = fmul float %S2_y_load, %C3_mapData_load

ST_9: tmp_71_1 [4/4] 5.70ns
.preheader18:107  %tmp_71_1 = fmul float %S2_y_load_1, %C3_mapData_load_1

ST_9: S2_y_load_2 [1/2] 2.71ns
.preheader18:113  %S2_y_load_2 = load float* %S2_y_addr_2, align 4

ST_9: C3_mapData_load_2 [1/2] 2.71ns
.preheader18:117  %C3_mapData_load_2 = load float* %C3_mapData_addr_2, align 4

ST_9: S2_y_load_3 [1/2] 2.71ns
.preheader18:124  %S2_y_load_3 = load float* %S2_y_addr_3, align 4

ST_9: C3_mapData_load_3 [1/2] 2.71ns
.preheader18:128  %C3_mapData_load_3 = load float* %C3_mapData_addr_3, align 4

ST_9: tmp_60 [1/1] 0.00ns
.preheader18:133  %tmp_60 = zext i32 %S2_y_addr4 to i64

ST_9: S2_y_addr_4 [1/1] 0.00ns
.preheader18:134  %S2_y_addr_4 = getelementptr [1176 x float]* @S2_y, i64 0, i64 %tmp_60

ST_9: S2_y_load_4 [2/2] 2.71ns
.preheader18:135  %S2_y_load_4 = load float* %S2_y_addr_4, align 4

ST_9: tmp_61 [1/1] 0.00ns
.preheader18:136  %tmp_61 = zext i32 %C3_mapData_addr5 to i64

ST_9: C3_mapData_addr_4 [1/1] 0.00ns
.preheader18:137  %C3_mapData_addr_4 = getelementptr [2400 x float]* @C3_mapData, i64 0, i64 %tmp_61

ST_9: C3_mapData_load_4 [2/2] 2.71ns
.preheader18:138  %C3_mapData_load_4 = load float* %C3_mapData_addr_4, align 4


 <State 10>: 5.70ns
ST_10: tmp_21 [2/4] 5.70ns
.preheader18:96  %tmp_21 = fmul float %S2_y_load, %C3_mapData_load

ST_10: tmp_71_1 [3/4] 5.70ns
.preheader18:107  %tmp_71_1 = fmul float %S2_y_load_1, %C3_mapData_load_1

ST_10: tmp_71_2 [4/4] 5.70ns
.preheader18:118  %tmp_71_2 = fmul float %S2_y_load_2, %C3_mapData_load_2

ST_10: S2_y_load_4 [1/2] 2.71ns
.preheader18:135  %S2_y_load_4 = load float* %S2_y_addr_4, align 4

ST_10: C3_mapData_load_4 [1/2] 2.71ns
.preheader18:138  %C3_mapData_load_4 = load float* %C3_mapData_addr_4, align 4


 <State 11>: 5.70ns
ST_11: C3_v_load [2/2] 2.71ns
.preheader18:62  %C3_v_load = load float* %C3_v_addr_2, align 4

ST_11: tmp_21 [1/4] 5.70ns
.preheader18:96  %tmp_21 = fmul float %S2_y_load, %C3_mapData_load

ST_11: tmp_71_1 [2/4] 5.70ns
.preheader18:107  %tmp_71_1 = fmul float %S2_y_load_1, %C3_mapData_load_1

ST_11: tmp_71_2 [3/4] 5.70ns
.preheader18:118  %tmp_71_2 = fmul float %S2_y_load_2, %C3_mapData_load_2

ST_11: tmp_71_3 [4/4] 5.70ns
.preheader18:129  %tmp_71_3 = fmul float %S2_y_load_3, %C3_mapData_load_3


 <State 12>: 9.97ns
ST_12: C3_v_load [1/2] 2.71ns
.preheader18:62  %C3_v_load = load float* %C3_v_addr_2, align 4

ST_12: tmp_22 [5/5] 7.26ns
.preheader18:97  %tmp_22 = fadd float %C3_v_load, %tmp_21

ST_12: tmp_71_1 [1/4] 5.70ns
.preheader18:107  %tmp_71_1 = fmul float %S2_y_load_1, %C3_mapData_load_1

ST_12: tmp_71_2 [2/4] 5.70ns
.preheader18:118  %tmp_71_2 = fmul float %S2_y_load_2, %C3_mapData_load_2

ST_12: tmp_71_3 [3/4] 5.70ns
.preheader18:129  %tmp_71_3 = fmul float %S2_y_load_3, %C3_mapData_load_3

ST_12: tmp_71_4 [4/4] 5.70ns
.preheader18:139  %tmp_71_4 = fmul float %S2_y_load_4, %C3_mapData_load_4


 <State 13>: 7.26ns
ST_13: tmp_22 [4/5] 7.26ns
.preheader18:97  %tmp_22 = fadd float %C3_v_load, %tmp_21

ST_13: tmp_71_2 [1/4] 5.70ns
.preheader18:118  %tmp_71_2 = fmul float %S2_y_load_2, %C3_mapData_load_2

ST_13: tmp_71_3 [2/4] 5.70ns
.preheader18:129  %tmp_71_3 = fmul float %S2_y_load_3, %C3_mapData_load_3

ST_13: tmp_71_4 [3/4] 5.70ns
.preheader18:139  %tmp_71_4 = fmul float %S2_y_load_4, %C3_mapData_load_4


 <State 14>: 7.26ns
ST_14: tmp_22 [3/5] 7.26ns
.preheader18:97  %tmp_22 = fadd float %C3_v_load, %tmp_21

ST_14: tmp_71_3 [1/4] 5.70ns
.preheader18:129  %tmp_71_3 = fmul float %S2_y_load_3, %C3_mapData_load_3

ST_14: tmp_71_4 [2/4] 5.70ns
.preheader18:139  %tmp_71_4 = fmul float %S2_y_load_4, %C3_mapData_load_4


 <State 15>: 7.26ns
ST_15: tmp_22 [2/5] 7.26ns
.preheader18:97  %tmp_22 = fadd float %C3_v_load, %tmp_21

ST_15: tmp_71_4 [1/4] 5.70ns
.preheader18:139  %tmp_71_4 = fmul float %S2_y_load_4, %C3_mapData_load_4


 <State 16>: 14.51ns
ST_16: tmp_22 [1/5] 7.26ns
.preheader18:97  %tmp_22 = fadd float %C3_v_load, %tmp_21

ST_16: tmp_72_1 [5/5] 7.26ns
.preheader18:108  %tmp_72_1 = fadd float %tmp_22, %tmp_71_1


 <State 17>: 7.26ns
ST_17: tmp_72_1 [4/5] 7.26ns
.preheader18:108  %tmp_72_1 = fadd float %tmp_22, %tmp_71_1


 <State 18>: 7.26ns
ST_18: tmp_72_1 [3/5] 7.26ns
.preheader18:108  %tmp_72_1 = fadd float %tmp_22, %tmp_71_1


 <State 19>: 7.26ns
ST_19: tmp_72_1 [2/5] 7.26ns
.preheader18:108  %tmp_72_1 = fadd float %tmp_22, %tmp_71_1


 <State 20>: 14.51ns
ST_20: tmp_72_1 [1/5] 7.26ns
.preheader18:108  %tmp_72_1 = fadd float %tmp_22, %tmp_71_1

ST_20: tmp_72_2 [5/5] 7.26ns
.preheader18:119  %tmp_72_2 = fadd float %tmp_72_1, %tmp_71_2


 <State 21>: 7.26ns
ST_21: tmp_72_2 [4/5] 7.26ns
.preheader18:119  %tmp_72_2 = fadd float %tmp_72_1, %tmp_71_2


 <State 22>: 7.26ns
ST_22: tmp_72_2 [3/5] 7.26ns
.preheader18:119  %tmp_72_2 = fadd float %tmp_72_1, %tmp_71_2


 <State 23>: 7.26ns
ST_23: tmp_72_2 [2/5] 7.26ns
.preheader18:119  %tmp_72_2 = fadd float %tmp_72_1, %tmp_71_2


 <State 24>: 14.51ns
ST_24: tmp_72_2 [1/5] 7.26ns
.preheader18:119  %tmp_72_2 = fadd float %tmp_72_1, %tmp_71_2

ST_24: tmp_72_3 [5/5] 7.26ns
.preheader18:130  %tmp_72_3 = fadd float %tmp_72_2, %tmp_71_3


 <State 25>: 7.26ns
ST_25: tmp_72_3 [4/5] 7.26ns
.preheader18:130  %tmp_72_3 = fadd float %tmp_72_2, %tmp_71_3


 <State 26>: 7.26ns
ST_26: tmp_72_3 [3/5] 7.26ns
.preheader18:130  %tmp_72_3 = fadd float %tmp_72_2, %tmp_71_3


 <State 27>: 7.26ns
ST_27: tmp_72_3 [2/5] 7.26ns
.preheader18:130  %tmp_72_3 = fadd float %tmp_72_2, %tmp_71_3


 <State 28>: 14.51ns
ST_28: tmp_72_3 [1/5] 7.26ns
.preheader18:130  %tmp_72_3 = fadd float %tmp_72_2, %tmp_71_3

ST_28: tmp_72_4 [5/5] 7.26ns
.preheader18:140  %tmp_72_4 = fadd float %tmp_72_3, %tmp_71_4


 <State 29>: 7.26ns
ST_29: tmp_72_4 [4/5] 7.26ns
.preheader18:140  %tmp_72_4 = fadd float %tmp_72_3, %tmp_71_4


 <State 30>: 7.26ns
ST_30: tmp_72_4 [3/5] 7.26ns
.preheader18:140  %tmp_72_4 = fadd float %tmp_72_3, %tmp_71_4


 <State 31>: 7.26ns
ST_31: tmp_72_4 [2/5] 7.26ns
.preheader18:140  %tmp_72_4 = fadd float %tmp_72_3, %tmp_71_4


 <State 32>: 9.97ns
ST_32: stg_278 [1/1] 0.00ns
.preheader18:0  call void (...)* @_ssdm_op_SpecLoopName([21 x i8]* @L_L_L_C3_conv_label1_str)

ST_32: empty_15 [1/1] 0.00ns
.preheader18:1  %empty_15 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 48000, i64 48000, i64 48000) nounwind

ST_32: stg_280 [1/1] 0.00ns
.preheader18:14  call void (...)* @_ssdm_op_SpecLoopName([19 x i8]* @L_L_C3_conv_label1_str)

ST_32: stg_281 [1/1] 0.00ns
.preheader18:23  call void (...)* @_ssdm_op_SpecLoopName([19 x i8]* @L_L_C3_conv_label1_str)

ST_32: stg_282 [1/1] 0.00ns
.preheader18:31  call void (...)* @_ssdm_op_SpecLoopName([17 x i8]* @L_C3_conv_label1_str)

ST_32: stg_283 [1/1] 0.00ns
.preheader18:40  call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @p_str5) nounwind

ST_32: tmp_1 [1/1] 0.00ns
.preheader18:41  %tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([15 x i8]* @p_str5) nounwind

ST_32: stg_285 [1/1] 0.00ns
.preheader18:42  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_32: tmp_72_4 [1/5] 7.26ns
.preheader18:140  %tmp_72_4 = fadd float %tmp_72_3, %tmp_71_4

ST_32: stg_287 [1/1] 2.71ns
.preheader18:141  store float %tmp_72_4, float* %C3_v_addr_2, align 4

ST_32: empty_16 [1/1] 0.00ns
.preheader18:142  %empty_16 = call i32 (...)* @_ssdm_op_SpecRegionEnd([15 x i8]* @p_str5, i32 %tmp_1) nounwind

ST_32: stg_289 [1/1] 0.00ns
.preheader18:150  br label %.preheader14


 <State 33>: 2.39ns
ST_33: i_2 [1/1] 0.00ns
.preheader13:0  %i_2 = phi i5 [ 0, %.preheader14 ], [ %i_4, %.preheader12 ]

ST_33: exitcond2 [1/1] 1.91ns
.preheader13:1  %exitcond2 = icmp eq i5 %i_2, -16

ST_33: empty_17 [1/1] 0.00ns
.preheader13:2  %empty_17 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind

ST_33: i_4 [1/1] 1.72ns
.preheader13:3  %i_4 = add i5 %i_2, 1

ST_33: stg_294 [1/1] 0.00ns
.preheader13:4  br i1 %exitcond2, label %3, label %.preheader12.preheader

ST_33: tmp_19 [1/1] 0.00ns
.preheader12.preheader:0  %tmp_19 = zext i5 %i_2 to i64

ST_33: C3_bias_addr [1/1] 0.00ns
.preheader12.preheader:1  %C3_bias_addr = getelementptr [16 x float]* @C3_bias, i64 0, i64 %tmp_19

ST_33: C3_bias_load [2/2] 2.39ns
.preheader12.preheader:2  %C3_bias_load = load float* %C3_bias_addr, align 4

ST_33: stg_298 [1/1] 0.00ns
:0  ret void


 <State 34>: 2.39ns
ST_34: C3_bias_load [1/2] 2.39ns
.preheader12.preheader:2  %C3_bias_load = load float* %C3_bias_addr, align 4

ST_34: tmp_62 [1/1] 0.00ns
.preheader12.preheader:3  %tmp_62 = call i8 @_ssdm_op_BitConcatenate.i8.i5.i3(i5 %i_2, i3 0)

ST_34: p_shl25_cast [1/1] 0.00ns
.preheader12.preheader:4  %p_shl25_cast = zext i8 %tmp_62 to i9

ST_34: tmp_63 [1/1] 0.00ns
.preheader12.preheader:5  %tmp_63 = call i6 @_ssdm_op_BitConcatenate.i6.i5.i1(i5 %i_2, i1 false)

ST_34: p_shl26_cast [1/1] 0.00ns
.preheader12.preheader:6  %p_shl26_cast = zext i6 %tmp_63 to i9

ST_34: C3_v_addr9 [1/1] 1.72ns
.preheader12.preheader:7  %C3_v_addr9 = add i9 %p_shl26_cast, %p_shl25_cast

ST_34: stg_305 [1/1] 1.57ns
.preheader12.preheader:8  br label %.preheader12


 <State 35>: 3.68ns
ST_35: j_2 [1/1] 0.00ns
.preheader12:0  %j_2 = phi i4 [ 0, %.preheader12.preheader ], [ %j_5, %.preheader ]

ST_35: exitcond1 [1/1] 1.88ns
.preheader12:1  %exitcond1 = icmp eq i4 %j_2, -6

ST_35: empty_18 [1/1] 0.00ns
.preheader12:2  %empty_18 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10) nounwind

ST_35: j_5 [1/1] 0.80ns
.preheader12:3  %j_5 = add i4 %j_2, 1

ST_35: stg_310 [1/1] 0.00ns
.preheader12:4  br i1 %exitcond1, label %.preheader13, label %.preheader.preheader

ST_35: tmp_22_trn_cast [1/1] 0.00ns
.preheader.preheader:0  %tmp_22_trn_cast = zext i4 %j_2 to i9

ST_35: C3_v_addr6 [1/1] 1.84ns
.preheader.preheader:1  %C3_v_addr6 = add i9 %C3_v_addr9, %tmp_22_trn_cast

ST_35: tmp_66 [1/1] 0.00ns
.preheader.preheader:2  %tmp_66 = call i12 @_ssdm_op_BitConcatenate.i12.i9.i3(i9 %C3_v_addr6, i3 0)

ST_35: p_shl7 [1/1] 0.00ns
.preheader.preheader:3  %p_shl7 = zext i12 %tmp_66 to i32

ST_35: tmp_67 [1/1] 0.00ns
.preheader.preheader:4  %tmp_67 = call i10 @_ssdm_op_BitConcatenate.i10.i9.i1(i9 %C3_v_addr6, i1 false)

ST_35: p_shl8 [1/1] 0.00ns
.preheader.preheader:5  %p_shl8 = zext i10 %tmp_67 to i32

ST_35: C3_v_addr11 [1/1] 1.84ns
.preheader.preheader:6  %C3_v_addr11 = add i32 %p_shl8, %p_shl7

ST_35: stg_318 [1/1] 1.57ns
.preheader.preheader:7  br label %.preheader


 <State 36>: 4.67ns
ST_36: k_2 [1/1] 0.00ns
.preheader:0  %k_2 = phi i4 [ %k_4, %2 ], [ 0, %.preheader.preheader ]

ST_36: exitcond [1/1] 1.88ns
.preheader:1  %exitcond = icmp eq i4 %k_2, -6

ST_36: empty_19 [1/1] 0.00ns
.preheader:2  %empty_19 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10) nounwind

ST_36: k_4 [1/1] 0.80ns
.preheader:3  %k_4 = add i4 %k_2, 1

ST_36: stg_323 [1/1] 0.00ns
.preheader:4  br i1 %exitcond, label %.preheader12, label %2

ST_36: tmp_25_trn [1/1] 0.00ns
:0  %tmp_25_trn = zext i4 %k_2 to i32

ST_36: C3_v_addr12 [1/1] 1.96ns
:1  %C3_v_addr12 = add i32 %tmp_25_trn, %C3_v_addr11

ST_36: tmp_69 [1/1] 0.00ns
:2  %tmp_69 = zext i32 %C3_v_addr12 to i64

ST_36: C3_v_addr_1 [1/1] 0.00ns
:3  %C3_v_addr_1 = getelementptr [1600 x float]* @C3_v, i64 0, i64 %tmp_69

ST_36: C3_v_load_1 [2/2] 2.71ns
:4  %C3_v_load_1 = load float* %C3_v_addr_1, align 4


 <State 37>: 2.71ns
ST_37: C3_v_load_1 [1/2] 2.71ns
:4  %C3_v_load_1 = load float* %C3_v_addr_1, align 4


 <State 38>: 7.26ns
ST_38: temp [5/5] 7.26ns
:5  %temp = fadd float %C3_v_load_1, %C3_bias_load


 <State 39>: 7.26ns
ST_39: temp [4/5] 7.26ns
:5  %temp = fadd float %C3_v_load_1, %C3_bias_load


 <State 40>: 7.26ns
ST_40: temp [3/5] 7.26ns
:5  %temp = fadd float %C3_v_load_1, %C3_bias_load


 <State 41>: 7.26ns
ST_41: temp [2/5] 7.26ns
:5  %temp = fadd float %C3_v_load_1, %C3_bias_load


 <State 42>: 7.26ns
ST_42: temp [1/5] 7.26ns
:5  %temp = fadd float %C3_v_load_1, %C3_bias_load


 <State 43>: 8.16ns
ST_43: temp_to_int [1/1] 0.00ns
:6  %temp_to_int = bitcast float %temp to i32

ST_43: tmp_18 [1/1] 0.00ns
:7  %tmp_18 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %temp_to_int, i32 23, i32 30)

ST_43: tmp_70 [1/1] 0.00ns
:8  %tmp_70 = trunc i32 %temp_to_int to i23

ST_43: notlhs [1/1] 2.00ns
:9  %notlhs = icmp ne i8 %tmp_18, -1

ST_43: notrhs [1/1] 2.39ns
:10  %notrhs = icmp eq i23 %tmp_70, 0

ST_43: tmp_24 [1/1] 1.37ns
:11  %tmp_24 = or i1 %notrhs, %notlhs

ST_43: tmp_25 [1/1] 6.79ns
:12  %tmp_25 = fcmp ogt float %temp, 0.000000e+00

ST_43: tmp_26 [1/1] 1.37ns
:13  %tmp_26 = and i1 %tmp_24, %tmp_25


 <State 44>: 4.08ns
ST_44: temp_1 [1/1] 1.37ns
:14  %temp_1 = select i1 %tmp_26, float %temp, float 0.000000e+00

ST_44: C3_y_addr [1/1] 0.00ns
:15  %C3_y_addr = getelementptr [1600 x float]* @C3_y, i64 0, i64 %tmp_69

ST_44: stg_345 [1/1] 2.71ns
:16  store float %temp_1, float* %C3_y_addr, align 4

ST_44: stg_346 [1/1] 0.00ns
:17  br label %.preheader



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
